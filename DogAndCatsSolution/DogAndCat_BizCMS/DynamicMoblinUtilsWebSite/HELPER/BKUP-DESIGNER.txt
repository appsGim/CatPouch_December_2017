#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MoblinUtilitiesDB_V4_QA")]
public partial class DynamicDBDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertADBImage(ADBImage instance);
  partial void UpdateADBImage(ADBImage instance);
  partial void DeleteADBImage(ADBImage instance);
  partial void InsertWorkerDebug(WorkerDebug instance);
  partial void UpdateWorkerDebug(WorkerDebug instance);
  partial void DeleteWorkerDebug(WorkerDebug instance);
  partial void InsertAdminParameter(AdminParameter instance);
  partial void UpdateAdminParameter(AdminParameter instance);
  partial void DeleteAdminParameter(AdminParameter instance);
  partial void InsertAdminWorkerAlive(AdminWorkerAlive instance);
  partial void UpdateAdminWorkerAlive(AdminWorkerAlive instance);
  partial void DeleteAdminWorkerAlive(AdminWorkerAlive instance);
  partial void InsertAPIType(APIType instance);
  partial void UpdateAPIType(APIType instance);
  partial void DeleteAPIType(APIType instance);
  partial void InsertApplication_CapabilityType(Application_CapabilityType instance);
  partial void UpdateApplication_CapabilityType(Application_CapabilityType instance);
  partial void DeleteApplication_CapabilityType(Application_CapabilityType instance);
  partial void InsertApplication_Device_Token(Application_Device_Token instance);
  partial void UpdateApplication_Device_Token(Application_Device_Token instance);
  partial void DeleteApplication_Device_Token(Application_Device_Token instance);
  partial void InsertApplicationCapabilityIdentity(ApplicationCapabilityIdentity instance);
  partial void UpdateApplicationCapabilityIdentity(ApplicationCapabilityIdentity instance);
  partial void DeleteApplicationCapabilityIdentity(ApplicationCapabilityIdentity instance);
  partial void InsertApplicationRejectNewsletterIdentity(ApplicationRejectNewsletterIdentity instance);
  partial void UpdateApplicationRejectNewsletterIdentity(ApplicationRejectNewsletterIdentity instance);
  partial void DeleteApplicationRejectNewsletterIdentity(ApplicationRejectNewsletterIdentity instance);
  partial void InsertBroadcastPushPlatform(BroadcastPushPlatform instance);
  partial void UpdateBroadcastPushPlatform(BroadcastPushPlatform instance);
  partial void DeleteBroadcastPushPlatform(BroadcastPushPlatform instance);
  partial void InsertImageUpload(ImageUpload instance);
  partial void UpdateImageUpload(ImageUpload instance);
  partial void DeleteImageUpload(ImageUpload instance);
  partial void InsertLog(Log instance);
  partial void UpdateLog(Log instance);
  partial void DeleteLog(Log instance);
  partial void InsertLogPush(LogPush instance);
  partial void UpdateLogPush(LogPush instance);
  partial void DeleteLogPush(LogPush instance);
  partial void InsertLogSending(LogSending instance);
  partial void UpdateLogSending(LogSending instance);
  partial void DeleteLogSending(LogSending instance);
  partial void InsertLogSending_Viewer(LogSending_Viewer instance);
  partial void UpdateLogSending_Viewer(LogSending_Viewer instance);
  partial void DeleteLogSending_Viewer(LogSending_Viewer instance);
  partial void InsertLogType(LogType instance);
  partial void UpdateLogType(LogType instance);
  partial void DeleteLogType(LogType instance);
  partial void InsertLogUrbanBroadCast(LogUrbanBroadCast instance);
  partial void UpdateLogUrbanBroadCast(LogUrbanBroadCast instance);
  partial void DeleteLogUrbanBroadCast(LogUrbanBroadCast instance);
  partial void InsertPostBack(PostBack instance);
  partial void UpdatePostBack(PostBack instance);
  partial void DeletePostBack(PostBack instance);
  partial void InsertSMSProviderType(SMSProviderType instance);
  partial void UpdateSMSProviderType(SMSProviderType instance);
  partial void DeleteSMSProviderType(SMSProviderType instance);
  partial void InsertActionType(ActionType instance);
  partial void UpdateActionType(ActionType instance);
  partial void DeleteActionType(ActionType instance);
  partial void InsertApplication(Application instance);
  partial void UpdateApplication(Application instance);
  partial void DeleteApplication(Application instance);
  partial void InsertApplicationDeepLink(ApplicationDeepLink instance);
  partial void UpdateApplicationDeepLink(ApplicationDeepLink instance);
  partial void DeleteApplicationDeepLink(ApplicationDeepLink instance);
  partial void InsertApplicationDeviceToken(ApplicationDeviceToken instance);
  partial void UpdateApplicationDeviceToken(ApplicationDeviceToken instance);
  partial void DeleteApplicationDeviceToken(ApplicationDeviceToken instance);
  partial void InsertApplicationParameter(ApplicationParameter instance);
  partial void UpdateApplicationParameter(ApplicationParameter instance);
  partial void DeleteApplicationParameter(ApplicationParameter instance);
  partial void InsertApplicationParameterVersion(ApplicationParameterVersion instance);
  partial void UpdateApplicationParameterVersion(ApplicationParameterVersion instance);
  partial void DeleteApplicationParameterVersion(ApplicationParameterVersion instance);
  partial void InsertApplicationPush(ApplicationPush instance);
  partial void UpdateApplicationPush(ApplicationPush instance);
  partial void DeleteApplicationPush(ApplicationPush instance);
  partial void InsertApplicationText(ApplicationText instance);
  partial void UpdateApplicationText(ApplicationText instance);
  partial void DeleteApplicationText(ApplicationText instance);
  partial void InsertApplicationTextVersion(ApplicationTextVersion instance);
  partial void UpdateApplicationTextVersion(ApplicationTextVersion instance);
  partial void DeleteApplicationTextVersion(ApplicationTextVersion instance);
  partial void InsertApplicationVersion(ApplicationVersion instance);
  partial void UpdateApplicationVersion(ApplicationVersion instance);
  partial void DeleteApplicationVersion(ApplicationVersion instance);
  partial void InsertLanguage(Language instance);
  partial void UpdateLanguage(Language instance);
  partial void DeleteLanguage(Language instance);
  partial void InsertOTP_V2(OTP_V2 instance);
  partial void UpdateOTP_V2(OTP_V2 instance);
  partial void DeleteOTP_V2(OTP_V2 instance);
  partial void InsertOTPMessage(OTPMessage instance);
  partial void UpdateOTPMessage(OTPMessage instance);
  partial void DeleteOTPMessage(OTPMessage instance);
  partial void InsertAppPlatformType(AppPlatformType instance);
  partial void UpdateAppPlatformType(AppPlatformType instance);
  partial void DeleteAppPlatformType(AppPlatformType instance);
  partial void InsertSplash(Splash instance);
  partial void UpdateSplash(Splash instance);
  partial void DeleteSplash(Splash instance);
  partial void InserttblUser(tblUser instance);
  partial void UpdatetblUser(tblUser instance);
  partial void DeletetblUser(tblUser instance);
  partial void InsertUtilitiesLog(UtilitiesLog instance);
  partial void UpdateUtilitiesLog(UtilitiesLog instance);
  partial void DeleteUtilitiesLog(UtilitiesLog instance);
  partial void InsertCapability_SMS(Capability_SMS instance);
  partial void UpdateCapability_SMS(Capability_SMS instance);
  partial void DeleteCapability_SMS(Capability_SMS instance);
  partial void InsertCapability_OTP(Capability_OTP instance);
  partial void UpdateCapability_OTP(Capability_OTP instance);
  partial void DeleteCapability_OTP(Capability_OTP instance);
  partial void InsertEnableRejectLink(EnableRejectLink instance);
  partial void UpdateEnableRejectLink(EnableRejectLink instance);
  partial void DeleteEnableRejectLink(EnableRejectLink instance);
  partial void InsertOTPType_0_Digit_1_Mix(OTPType_0_Digit_1_Mix instance);
  partial void UpdateOTPType_0_Digit_1_Mix(OTPType_0_Digit_1_Mix instance);
  partial void DeleteOTPType_0_Digit_1_Mix(OTPType_0_Digit_1_Mix instance);
  partial void InsertCapability_Barcode(Capability_Barcode instance);
  partial void UpdateCapability_Barcode(Capability_Barcode instance);
  partial void DeleteCapability_Barcode(Capability_Barcode instance);
  partial void InsertCapability_EmailToUser(Capability_EmailToUser instance);
  partial void UpdateCapability_EmailToUser(Capability_EmailToUser instance);
  partial void DeleteCapability_EmailToUser(Capability_EmailToUser instance);
  partial void InsertCapability_EmailToVendor(Capability_EmailToVendor instance);
  partial void UpdateCapability_EmailToVendor(Capability_EmailToVendor instance);
  partial void DeleteCapability_EmailToVendor(Capability_EmailToVendor instance);
  partial void InsertCapability_ImageUpload(Capability_ImageUpload instance);
  partial void UpdateCapability_ImageUpload(Capability_ImageUpload instance);
  partial void DeleteCapability_ImageUpload(Capability_ImageUpload instance);
  partial void InsertCapability_OTPView(Capability_OTPView instance);
  partial void UpdateCapability_OTPView(Capability_OTPView instance);
  partial void DeleteCapability_OTPView(Capability_OTPView instance);
  partial void InsertAdmin_X_Days_LogSending(Admin_X_Days_LogSending instance);
  partial void UpdateAdmin_X_Days_LogSending(Admin_X_Days_LogSending instance);
  partial void DeleteAdmin_X_Days_LogSending(Admin_X_Days_LogSending instance);
  partial void InsertSMS_Provider(SMS_Provider instance);
  partial void UpdateSMS_Provider(SMS_Provider instance);
  partial void DeleteSMS_Provider(SMS_Provider instance);
  partial void InsertVCMS_AppID(VCMS_AppID instance);
  partial void UpdateVCMS_AppID(VCMS_AppID instance);
  partial void DeleteVCMS_AppID(VCMS_AppID instance);
  partial void InsertVCMS_SendingLogType(VCMS_SendingLogType instance);
  partial void UpdateVCMS_SendingLogType(VCMS_SendingLogType instance);
  partial void DeleteVCMS_SendingLogType(VCMS_SendingLogType instance);
  partial void Insertv_cms_logsending_alllogtype(v_cms_logsending_alllogtype instance);
  partial void Updatev_cms_logsending_alllogtype(v_cms_logsending_alllogtype instance);
  partial void Deletev_cms_logsending_alllogtype(v_cms_logsending_alllogtype instance);
  partial void Insertv_cms_capabilityRejectIdentity(v_cms_capabilityRejectIdentity instance);
  partial void Updatev_cms_capabilityRejectIdentity(v_cms_capabilityRejectIdentity instance);
  partial void Deletev_cms_capabilityRejectIdentity(v_cms_capabilityRejectIdentity instance);
  partial void Insertv_cms_capabilityIdentity(v_cms_capabilityIdentity instance);
  partial void Updatev_cms_capabilityIdentity(v_cms_capabilityIdentity instance);
  partial void Deletev_cms_capabilityIdentity(v_cms_capabilityIdentity instance);
  partial void Insertv_cms_Identity_AppID(v_cms_Identity_AppID instance);
  partial void Updatev_cms_Identity_AppID(v_cms_Identity_AppID instance);
  partial void Deletev_cms_Identity_AppID(v_cms_Identity_AppID instance);
  partial void Insertv_cms_reject_Identity_AppID(v_cms_reject_Identity_AppID instance);
  partial void Updatev_cms_reject_Identity_AppID(v_cms_reject_Identity_AppID instance);
  partial void Deletev_cms_reject_Identity_AppID(v_cms_reject_Identity_AppID instance);
  #endregion
	
	public DynamicDBDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["MoblinUtilitiesDB_V4_QAConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DynamicDBDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DynamicDBDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DynamicDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DynamicDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<ADBImage> ADBImages
	{
		get
		{
			return this.GetTable<ADBImage>();
		}
	}
	
	public System.Data.Linq.Table<WorkerDebug> WorkerDebugs
	{
		get
		{
			return this.GetTable<WorkerDebug>();
		}
	}
	
	public System.Data.Linq.Table<AdminParameter> AdminParameters
	{
		get
		{
			return this.GetTable<AdminParameter>();
		}
	}
	
	public System.Data.Linq.Table<AdminWorkerAlive> AdminWorkerAlives
	{
		get
		{
			return this.GetTable<AdminWorkerAlive>();
		}
	}
	
	public System.Data.Linq.Table<APIType> APITypes
	{
		get
		{
			return this.GetTable<APIType>();
		}
	}
	
	public System.Data.Linq.Table<Application_CapabilityType> Application_CapabilityTypes
	{
		get
		{
			return this.GetTable<Application_CapabilityType>();
		}
	}
	
	public System.Data.Linq.Table<Application_Device_Token> Application_Device_Tokens
	{
		get
		{
			return this.GetTable<Application_Device_Token>();
		}
	}
	
	public System.Data.Linq.Table<ApplicationCapabilityIdentity> ApplicationCapabilityIdentities
	{
		get
		{
			return this.GetTable<ApplicationCapabilityIdentity>();
		}
	}
	
	public System.Data.Linq.Table<ApplicationRejectNewsletterIdentity> ApplicationRejectNewsletterIdentities
	{
		get
		{
			return this.GetTable<ApplicationRejectNewsletterIdentity>();
		}
	}
	
	public System.Data.Linq.Table<BroadcastPushPlatform> BroadcastPushPlatforms
	{
		get
		{
			return this.GetTable<BroadcastPushPlatform>();
		}
	}
	
	public System.Data.Linq.Table<ImageUpload> ImageUploads
	{
		get
		{
			return this.GetTable<ImageUpload>();
		}
	}
	
	public System.Data.Linq.Table<Log> Logs
	{
		get
		{
			return this.GetTable<Log>();
		}
	}
	
	public System.Data.Linq.Table<LogPush> LogPushes
	{
		get
		{
			return this.GetTable<LogPush>();
		}
	}
	
	public System.Data.Linq.Table<LogSending> LogSendings
	{
		get
		{
			return this.GetTable<LogSending>();
		}
	}
	
	public System.Data.Linq.Table<LogSending_Viewer> LogSending_Viewers
	{
		get
		{
			return this.GetTable<LogSending_Viewer>();
		}
	}
	
	public System.Data.Linq.Table<LogType> LogTypes
	{
		get
		{
			return this.GetTable<LogType>();
		}
	}
	
	public System.Data.Linq.Table<LogUrbanBroadCast> LogUrbanBroadCasts
	{
		get
		{
			return this.GetTable<LogUrbanBroadCast>();
		}
	}
	
	public System.Data.Linq.Table<PostBack> PostBacks
	{
		get
		{
			return this.GetTable<PostBack>();
		}
	}
	
	public System.Data.Linq.Table<SMSProviderType> SMSProviderTypes
	{
		get
		{
			return this.GetTable<SMSProviderType>();
		}
	}
	
	public System.Data.Linq.Table<ActionType> ActionTypes
	{
		get
		{
			return this.GetTable<ActionType>();
		}
	}
	
	public System.Data.Linq.Table<Application> Applications
	{
		get
		{
			return this.GetTable<Application>();
		}
	}
	
	public System.Data.Linq.Table<ApplicationDeepLink> ApplicationDeepLinks
	{
		get
		{
			return this.GetTable<ApplicationDeepLink>();
		}
	}
	
	public System.Data.Linq.Table<ApplicationDeviceToken> ApplicationDeviceTokens
	{
		get
		{
			return this.GetTable<ApplicationDeviceToken>();
		}
	}
	
	public System.Data.Linq.Table<ApplicationParameter> ApplicationParameters
	{
		get
		{
			return this.GetTable<ApplicationParameter>();
		}
	}
	
	public System.Data.Linq.Table<ApplicationParameterVersion> ApplicationParameterVersions
	{
		get
		{
			return this.GetTable<ApplicationParameterVersion>();
		}
	}
	
	public System.Data.Linq.Table<ApplicationPush> ApplicationPushes
	{
		get
		{
			return this.GetTable<ApplicationPush>();
		}
	}
	
	public System.Data.Linq.Table<ApplicationText> ApplicationTexts
	{
		get
		{
			return this.GetTable<ApplicationText>();
		}
	}
	
	public System.Data.Linq.Table<ApplicationTextVersion> ApplicationTextVersions
	{
		get
		{
			return this.GetTable<ApplicationTextVersion>();
		}
	}
	
	public System.Data.Linq.Table<ApplicationVersion> ApplicationVersions
	{
		get
		{
			return this.GetTable<ApplicationVersion>();
		}
	}
	
	public System.Data.Linq.Table<Language> Languages
	{
		get
		{
			return this.GetTable<Language>();
		}
	}
	
	public System.Data.Linq.Table<OTP_V2> OTP_V2s
	{
		get
		{
			return this.GetTable<OTP_V2>();
		}
	}
	
	public System.Data.Linq.Table<OTPMessage> OTPMessages
	{
		get
		{
			return this.GetTable<OTPMessage>();
		}
	}
	
	public System.Data.Linq.Table<AppPlatformType> AppPlatformTypes
	{
		get
		{
			return this.GetTable<AppPlatformType>();
		}
	}
	
	public System.Data.Linq.Table<Splash> Splashes
	{
		get
		{
			return this.GetTable<Splash>();
		}
	}
	
	public System.Data.Linq.Table<tblUser> tblUsers
	{
		get
		{
			return this.GetTable<tblUser>();
		}
	}
	
	public System.Data.Linq.Table<UtilitiesLog> UtilitiesLogs
	{
		get
		{
			return this.GetTable<UtilitiesLog>();
		}
	}
	
	public System.Data.Linq.Table<Capability_SMS> Capability_SMS
	{
		get
		{
			return this.GetTable<Capability_SMS>();
		}
	}
	
	public System.Data.Linq.Table<Capability_OTP> Capability_OTPs
	{
		get
		{
			return this.GetTable<Capability_OTP>();
		}
	}
	
	public System.Data.Linq.Table<EnableRejectLink> EnableRejectLinks
	{
		get
		{
			return this.GetTable<EnableRejectLink>();
		}
	}
	
	public System.Data.Linq.Table<OTPType_0_Digit_1_Mix> OTPType_0_Digit_1_Mixes
	{
		get
		{
			return this.GetTable<OTPType_0_Digit_1_Mix>();
		}
	}
	
	public System.Data.Linq.Table<Capability_Barcode> Capability_Barcodes
	{
		get
		{
			return this.GetTable<Capability_Barcode>();
		}
	}
	
	public System.Data.Linq.Table<Capability_EmailToUser> Capability_EmailToUsers
	{
		get
		{
			return this.GetTable<Capability_EmailToUser>();
		}
	}
	
	public System.Data.Linq.Table<Capability_EmailToVendor> Capability_EmailToVendors
	{
		get
		{
			return this.GetTable<Capability_EmailToVendor>();
		}
	}
	
	public System.Data.Linq.Table<Capability_ImageUpload> Capability_ImageUploads
	{
		get
		{
			return this.GetTable<Capability_ImageUpload>();
		}
	}
	
	public System.Data.Linq.Table<Capability_OTPView> Capability_OTPViews
	{
		get
		{
			return this.GetTable<Capability_OTPView>();
		}
	}
	
	public System.Data.Linq.Table<Admin_X_Days_LogSending> Admin_X_Days_LogSendings
	{
		get
		{
			return this.GetTable<Admin_X_Days_LogSending>();
		}
	}
	
	public System.Data.Linq.Table<SMS_Provider> SMS_Providers
	{
		get
		{
			return this.GetTable<SMS_Provider>();
		}
	}
	
	public System.Data.Linq.Table<VCMS_AppID> VCMS_AppIDs
	{
		get
		{
			return this.GetTable<VCMS_AppID>();
		}
	}
	
	public System.Data.Linq.Table<VCMS_SendingLogType> VCMS_SendingLogTypes
	{
		get
		{
			return this.GetTable<VCMS_SendingLogType>();
		}
	}
	
	public System.Data.Linq.Table<v_cms_logsending_alllogtype> v_cms_logsending_alllogtypes
	{
		get
		{
			return this.GetTable<v_cms_logsending_alllogtype>();
		}
	}
	
	public System.Data.Linq.Table<v_cms_capabilityRejectIdentity> v_cms_capabilityRejectIdentities
	{
		get
		{
			return this.GetTable<v_cms_capabilityRejectIdentity>();
		}
	}
	
	public System.Data.Linq.Table<v_cms_capabilityIdentity> v_cms_capabilityIdentities
	{
		get
		{
			return this.GetTable<v_cms_capabilityIdentity>();
		}
	}
	
	public System.Data.Linq.Table<v_cms_Identity_AppID> v_cms_Identity_AppIDs
	{
		get
		{
			return this.GetTable<v_cms_Identity_AppID>();
		}
	}
	
	public System.Data.Linq.Table<v_cms_reject_Identity_AppID> v_cms_reject_Identity_AppIDs
	{
		get
		{
			return this.GetTable<v_cms_reject_Identity_AppID>();
		}
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CMS_RejectNewsletter_Seed_OnCreateOrUpdate")]
	public int CMS_RejectNewsletter_Seed_OnCreateOrUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PK", DbType="Int")] System.Nullable<int> pK, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PRMSEED", DbType="NVarChar(100)")] string pRMSEED)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pK, pRMSEED);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CMS_Applcation_TokenCreation")]
	public int CMS_Applcation_TokenCreation([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> appid)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), appid);
		return ((int)(result.ReturnValue));
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADBImages")]
public partial class ADBImage : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _ID;
	
	private string _MyImage;
	
	private string _ExternalImage;
	
	private System.Nullable<System.DateTime> _MyTime;
	
	private System.DateTime _MyTime2;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnMyImageChanging(string value);
    partial void OnMyImageChanged();
    partial void OnExternalImageChanging(string value);
    partial void OnExternalImageChanged();
    partial void OnMyTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnMyTimeChanged();
    partial void OnMyTime2Changing(System.DateTime value);
    partial void OnMyTime2Changed();
    #endregion
	
	public ADBImage()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MyImage", DbType="VarChar(500)")]
	public string MyImage
	{
		get
		{
			return this._MyImage;
		}
		set
		{
			if ((this._MyImage != value))
			{
				this.OnMyImageChanging(value);
				this.SendPropertyChanging();
				this._MyImage = value;
				this.SendPropertyChanged("MyImage");
				this.OnMyImageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalImage", DbType="VarChar(500)")]
	public string ExternalImage
	{
		get
		{
			return this._ExternalImage;
		}
		set
		{
			if ((this._ExternalImage != value))
			{
				this.OnExternalImageChanging(value);
				this.SendPropertyChanging();
				this._ExternalImage = value;
				this.SendPropertyChanged("ExternalImage");
				this.OnExternalImageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MyTime", DbType="DateTime")]
	public System.Nullable<System.DateTime> MyTime
	{
		get
		{
			return this._MyTime;
		}
		set
		{
			if ((this._MyTime != value))
			{
				this.OnMyTimeChanging(value);
				this.SendPropertyChanging();
				this._MyTime = value;
				this.SendPropertyChanged("MyTime");
				this.OnMyTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MyTime2", DbType="DateTime NOT NULL")]
	public System.DateTime MyTime2
	{
		get
		{
			return this._MyTime2;
		}
		set
		{
			if ((this._MyTime2 != value))
			{
				this.OnMyTime2Changing(value);
				this.SendPropertyChanging();
				this._MyTime2 = value;
				this.SendPropertyChanged("MyTime2");
				this.OnMyTime2Changed();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkerDebug")]
public partial class WorkerDebug : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _ID;
	
	private System.Nullable<System.DateTime> _InsertDate;
	
	private int _APIType;
	
	private System.Nullable<int> _ThreadNumber;
	
	private string _ThreadName;
	
	private string _Q;
	
	private System.Nullable<int> _LogType;
	
	private System.Nullable<int> _InnerLogType;
	
	private string _Instance;
	
	private string _MSG;
	
	private System.Nullable<bool> _BKUP;
	
	private EntityRef<APIType> _APIType1;
	
	private EntityRef<LogType> _LogType1;
	
	private EntityRef<LogType> _Inner_LogType;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertDateChanged();
    partial void OnAPITypeChanging(int value);
    partial void OnAPITypeChanged();
    partial void OnThreadNumberChanging(System.Nullable<int> value);
    partial void OnThreadNumberChanged();
    partial void OnThreadNameChanging(string value);
    partial void OnThreadNameChanged();
    partial void OnQChanging(string value);
    partial void OnQChanged();
    partial void OnLogTypeChanging(System.Nullable<int> value);
    partial void OnLogTypeChanged();
    partial void OnInnerLogTypeChanging(System.Nullable<int> value);
    partial void OnInnerLogTypeChanged();
    partial void OnInstanceChanging(string value);
    partial void OnInstanceChanged();
    partial void OnMSGChanging(string value);
    partial void OnMSGChanged();
    partial void OnBKUPChanging(System.Nullable<bool> value);
    partial void OnBKUPChanged();
    #endregion
	
	public WorkerDebug()
	{
		this._APIType1 = default(EntityRef<APIType>);
		this._LogType1 = default(EntityRef<LogType>);
		this._Inner_LogType = default(EntityRef<LogType>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> InsertDate
	{
		get
		{
			return this._InsertDate;
		}
		set
		{
			if ((this._InsertDate != value))
			{
				this.OnInsertDateChanging(value);
				this.SendPropertyChanging();
				this._InsertDate = value;
				this.SendPropertyChanged("InsertDate");
				this.OnInsertDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APIType", DbType="Int NOT NULL")]
	public int APIType
	{
		get
		{
			return this._APIType;
		}
		set
		{
			if ((this._APIType != value))
			{
				if (this._APIType1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAPITypeChanging(value);
				this.SendPropertyChanging();
				this._APIType = value;
				this.SendPropertyChanged("APIType");
				this.OnAPITypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThreadNumber", DbType="Int")]
	public System.Nullable<int> ThreadNumber
	{
		get
		{
			return this._ThreadNumber;
		}
		set
		{
			if ((this._ThreadNumber != value))
			{
				this.OnThreadNumberChanging(value);
				this.SendPropertyChanging();
				this._ThreadNumber = value;
				this.SendPropertyChanged("ThreadNumber");
				this.OnThreadNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThreadName", DbType="VarChar(100)")]
	public string ThreadName
	{
		get
		{
			return this._ThreadName;
		}
		set
		{
			if ((this._ThreadName != value))
			{
				this.OnThreadNameChanging(value);
				this.SendPropertyChanging();
				this._ThreadName = value;
				this.SendPropertyChanged("ThreadName");
				this.OnThreadNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Q", DbType="VarChar(100)")]
	public string Q
	{
		get
		{
			return this._Q;
		}
		set
		{
			if ((this._Q != value))
			{
				this.OnQChanging(value);
				this.SendPropertyChanging();
				this._Q = value;
				this.SendPropertyChanged("Q");
				this.OnQChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogType", DbType="Int")]
	public System.Nullable<int> LogType
	{
		get
		{
			return this._LogType;
		}
		set
		{
			if ((this._LogType != value))
			{
				if (this._LogType1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnLogTypeChanging(value);
				this.SendPropertyChanging();
				this._LogType = value;
				this.SendPropertyChanged("LogType");
				this.OnLogTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InnerLogType", DbType="Int")]
	public System.Nullable<int> InnerLogType
	{
		get
		{
			return this._InnerLogType;
		}
		set
		{
			if ((this._InnerLogType != value))
			{
				if (this._Inner_LogType.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnInnerLogTypeChanging(value);
				this.SendPropertyChanging();
				this._InnerLogType = value;
				this.SendPropertyChanged("InnerLogType");
				this.OnInnerLogTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Instance", DbType="VarChar(50)")]
	public string Instance
	{
		get
		{
			return this._Instance;
		}
		set
		{
			if ((this._Instance != value))
			{
				this.OnInstanceChanging(value);
				this.SendPropertyChanging();
				this._Instance = value;
				this.SendPropertyChanged("Instance");
				this.OnInstanceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSG", DbType="VarChar(MAX)")]
	public string MSG
	{
		get
		{
			return this._MSG;
		}
		set
		{
			if ((this._MSG != value))
			{
				this.OnMSGChanging(value);
				this.SendPropertyChanging();
				this._MSG = value;
				this.SendPropertyChanged("MSG");
				this.OnMSGChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BKUP", DbType="Bit")]
	public System.Nullable<bool> BKUP
	{
		get
		{
			return this._BKUP;
		}
		set
		{
			if ((this._BKUP != value))
			{
				this.OnBKUPChanging(value);
				this.SendPropertyChanging();
				this._BKUP = value;
				this.SendPropertyChanged("BKUP");
				this.OnBKUPChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="APIType_WorkerDebug", Storage="_APIType1", ThisKey="APIType", OtherKey="ID", IsForeignKey=true)]
	public APIType APIType1
	{
		get
		{
			return this._APIType1.Entity;
		}
		set
		{
			APIType previousValue = this._APIType1.Entity;
			if (((previousValue != value) 
						|| (this._APIType1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._APIType1.Entity = null;
					previousValue.WorkerDebugs.Remove(this);
				}
				this._APIType1.Entity = value;
				if ((value != null))
				{
					value.WorkerDebugs.Add(this);
					this._APIType = value.ID;
				}
				else
				{
					this._APIType = default(int);
				}
				this.SendPropertyChanged("APIType1");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LogType_WorkerDebug", Storage="_LogType1", ThisKey="LogType", OtherKey="ID", IsForeignKey=true)]
	public LogType LogType1
	{
		get
		{
			return this._LogType1.Entity;
		}
		set
		{
			LogType previousValue = this._LogType1.Entity;
			if (((previousValue != value) 
						|| (this._LogType1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._LogType1.Entity = null;
					previousValue.WorkerDebugs.Remove(this);
				}
				this._LogType1.Entity = value;
				if ((value != null))
				{
					value.WorkerDebugs.Add(this);
					this._LogType = value.ID;
				}
				else
				{
					this._LogType = default(Nullable<int>);
				}
				this.SendPropertyChanged("LogType1");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LogType_WorkerDebug1", Storage="_Inner_LogType", ThisKey="InnerLogType", OtherKey="ID", IsForeignKey=true)]
	public LogType Inner_LogType
	{
		get
		{
			return this._Inner_LogType.Entity;
		}
		set
		{
			LogType previousValue = this._Inner_LogType.Entity;
			if (((previousValue != value) 
						|| (this._Inner_LogType.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Inner_LogType.Entity = null;
					previousValue.WorkerDebugs1.Remove(this);
				}
				this._Inner_LogType.Entity = value;
				if ((value != null))
				{
					value.WorkerDebugs1.Add(this);
					this._InnerLogType = value.ID;
				}
				else
				{
					this._InnerLogType = default(Nullable<int>);
				}
				this.SendPropertyChanged("Inner_LogType");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdminParameters")]
public partial class AdminParameter : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Name;
	
	private System.Nullable<int> _IntValue;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIntValueChanging(System.Nullable<int> value);
    partial void OnIntValueChanged();
    #endregion
	
	public AdminParameter()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntValue", DbType="Int")]
	public System.Nullable<int> IntValue
	{
		get
		{
			return this._IntValue;
		}
		set
		{
			if ((this._IntValue != value))
			{
				this.OnIntValueChanging(value);
				this.SendPropertyChanging();
				this._IntValue = value;
				this.SendPropertyChanged("IntValue");
				this.OnIntValueChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdminWorkerAlive")]
public partial class AdminWorkerAlive : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _ID;
	
	private System.DateTime _InsertDate;
	
	private string _MSG;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnMSGChanging(string value);
    partial void OnMSGChanged();
    #endregion
	
	public AdminWorkerAlive()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
	public System.DateTime InsertDate
	{
		get
		{
			return this._InsertDate;
		}
		set
		{
			if ((this._InsertDate != value))
			{
				this.OnInsertDateChanging(value);
				this.SendPropertyChanging();
				this._InsertDate = value;
				this.SendPropertyChanged("InsertDate");
				this.OnInsertDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSG", DbType="VarChar(4000)")]
	public string MSG
	{
		get
		{
			return this._MSG;
		}
		set
		{
			if ((this._MSG != value))
			{
				this.OnMSGChanging(value);
				this.SendPropertyChanging();
				this._MSG = value;
				this.SendPropertyChanged("MSG");
				this.OnMSGChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.APIType")]
public partial class APIType : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Name;
	
	private System.Nullable<System.DateTime> _InsertDate;
	
	private EntitySet<WorkerDebug> _WorkerDebugs;
	
	private EntitySet<Log> _Logs;
	
	private EntitySet<LogPush> _LogPushes;
	
	private EntitySet<LogSending> _LogSendings;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertDateChanged();
    #endregion
	
	public APIType()
	{
		this._WorkerDebugs = new EntitySet<WorkerDebug>(new Action<WorkerDebug>(this.attach_WorkerDebugs), new Action<WorkerDebug>(this.detach_WorkerDebugs));
		this._Logs = new EntitySet<Log>(new Action<Log>(this.attach_Logs), new Action<Log>(this.detach_Logs));
		this._LogPushes = new EntitySet<LogPush>(new Action<LogPush>(this.attach_LogPushes), new Action<LogPush>(this.detach_LogPushes));
		this._LogSendings = new EntitySet<LogSending>(new Action<LogSending>(this.attach_LogSendings), new Action<LogSending>(this.detach_LogSendings));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> InsertDate
	{
		get
		{
			return this._InsertDate;
		}
		set
		{
			if ((this._InsertDate != value))
			{
				this.OnInsertDateChanging(value);
				this.SendPropertyChanging();
				this._InsertDate = value;
				this.SendPropertyChanged("InsertDate");
				this.OnInsertDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="APIType_WorkerDebug", Storage="_WorkerDebugs", ThisKey="ID", OtherKey="APIType")]
	public EntitySet<WorkerDebug> WorkerDebugs
	{
		get
		{
			return this._WorkerDebugs;
		}
		set
		{
			this._WorkerDebugs.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="APIType_Log", Storage="_Logs", ThisKey="ID", OtherKey="APIType")]
	public EntitySet<Log> Logs
	{
		get
		{
			return this._Logs;
		}
		set
		{
			this._Logs.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="APIType_LogPush", Storage="_LogPushes", ThisKey="ID", OtherKey="APIType")]
	public EntitySet<LogPush> LogPushes
	{
		get
		{
			return this._LogPushes;
		}
		set
		{
			this._LogPushes.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="APIType_LogSending", Storage="_LogSendings", ThisKey="ID", OtherKey="APIType")]
	public EntitySet<LogSending> LogSendings
	{
		get
		{
			return this._LogSendings;
		}
		set
		{
			this._LogSendings.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_WorkerDebugs(WorkerDebug entity)
	{
		this.SendPropertyChanging();
		entity.APIType1 = this;
	}
	
	private void detach_WorkerDebugs(WorkerDebug entity)
	{
		this.SendPropertyChanging();
		entity.APIType1 = null;
	}
	
	private void attach_Logs(Log entity)
	{
		this.SendPropertyChanging();
		entity.API_Type = this;
	}
	
	private void detach_Logs(Log entity)
	{
		this.SendPropertyChanging();
		entity.API_Type = null;
	}
	
	private void attach_LogPushes(LogPush entity)
	{
		this.SendPropertyChanging();
		entity.APIType1 = this;
	}
	
	private void detach_LogPushes(LogPush entity)
	{
		this.SendPropertyChanging();
		entity.APIType1 = null;
	}
	
	private void attach_LogSendings(LogSending entity)
	{
		this.SendPropertyChanging();
		entity.API_Type = this;
	}
	
	private void detach_LogSendings(LogSending entity)
	{
		this.SendPropertyChanging();
		entity.API_Type = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Application_CapabilityType")]
public partial class Application_CapabilityType : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Name;
	
	private string _DisplayName;
	
	private string _ApplicationCapability_Table_Data_Description;
	
	private string _ApplicationCapability_Table_DataTwo_Description;
	
	private string _ApplicationCapability_Table_DataFormat_Description;
	
	private string _ApplicationCapability_Table_DataThree_Description;
	
	private string _ApplicationCapability_Table_DataFour_Description;
	
	private EntitySet<Capability_SMS> _ApplicationCapability_SMS;
	
	private EntitySet<Capability_OTP> _ApplicationCapability_OTPs;
	
	private EntitySet<Capability_Barcode> _ApplicationCapability_Barcodes;
	
	private EntitySet<Capability_EmailToUser> _ApplicationCapability_EmailToUsers;
	
	private EntitySet<Capability_EmailToVendor> _ApplicationCapability_EmailToVendors;
	
	private EntitySet<Capability_ImageUpload> _ApplicationCapability_ImageUploads;
	
	private EntitySet<Capability_OTPView> _ApplicationCapability_OTPViews;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnApplicationCapability_Table_Data_DescriptionChanging(string value);
    partial void OnApplicationCapability_Table_Data_DescriptionChanged();
    partial void OnApplicationCapability_Table_DataTwo_DescriptionChanging(string value);
    partial void OnApplicationCapability_Table_DataTwo_DescriptionChanged();
    partial void OnApplicationCapability_Table_DataFormat_DescriptionChanging(string value);
    partial void OnApplicationCapability_Table_DataFormat_DescriptionChanged();
    partial void OnApplicationCapability_Table_DataThree_DescriptionChanging(string value);
    partial void OnApplicationCapability_Table_DataThree_DescriptionChanged();
    partial void OnApplicationCapability_Table_DataFour_DescriptionChanging(string value);
    partial void OnApplicationCapability_Table_DataFour_DescriptionChanged();
    #endregion
	
	public Application_CapabilityType()
	{
		this._ApplicationCapability_SMS = new EntitySet<Capability_SMS>(new Action<Capability_SMS>(this.attach_ApplicationCapability_SMS), new Action<Capability_SMS>(this.detach_ApplicationCapability_SMS));
		this._ApplicationCapability_OTPs = new EntitySet<Capability_OTP>(new Action<Capability_OTP>(this.attach_ApplicationCapability_OTPs), new Action<Capability_OTP>(this.detach_ApplicationCapability_OTPs));
		this._ApplicationCapability_Barcodes = new EntitySet<Capability_Barcode>(new Action<Capability_Barcode>(this.attach_ApplicationCapability_Barcodes), new Action<Capability_Barcode>(this.detach_ApplicationCapability_Barcodes));
		this._ApplicationCapability_EmailToUsers = new EntitySet<Capability_EmailToUser>(new Action<Capability_EmailToUser>(this.attach_ApplicationCapability_EmailToUsers), new Action<Capability_EmailToUser>(this.detach_ApplicationCapability_EmailToUsers));
		this._ApplicationCapability_EmailToVendors = new EntitySet<Capability_EmailToVendor>(new Action<Capability_EmailToVendor>(this.attach_ApplicationCapability_EmailToVendors), new Action<Capability_EmailToVendor>(this.detach_ApplicationCapability_EmailToVendors));
		this._ApplicationCapability_ImageUploads = new EntitySet<Capability_ImageUpload>(new Action<Capability_ImageUpload>(this.attach_ApplicationCapability_ImageUploads), new Action<Capability_ImageUpload>(this.detach_ApplicationCapability_ImageUploads));
		this._ApplicationCapability_OTPViews = new EntitySet<Capability_OTPView>(new Action<Capability_OTPView>(this.attach_ApplicationCapability_OTPViews), new Action<Capability_OTPView>(this.detach_ApplicationCapability_OTPViews));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string DisplayName
	{
		get
		{
			return this._DisplayName;
		}
		set
		{
			if ((this._DisplayName != value))
			{
				this.OnDisplayNameChanging(value);
				this.SendPropertyChanging();
				this._DisplayName = value;
				this.SendPropertyChanged("DisplayName");
				this.OnDisplayNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationCapability_Table_Data_Description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string ApplicationCapability_Table_Data_Description
	{
		get
		{
			return this._ApplicationCapability_Table_Data_Description;
		}
		set
		{
			if ((this._ApplicationCapability_Table_Data_Description != value))
			{
				this.OnApplicationCapability_Table_Data_DescriptionChanging(value);
				this.SendPropertyChanging();
				this._ApplicationCapability_Table_Data_Description = value;
				this.SendPropertyChanged("ApplicationCapability_Table_Data_Description");
				this.OnApplicationCapability_Table_Data_DescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationCapability_Table_DataTwo_Description", DbType="NVarChar(MAX)")]
	public string ApplicationCapability_Table_DataTwo_Description
	{
		get
		{
			return this._ApplicationCapability_Table_DataTwo_Description;
		}
		set
		{
			if ((this._ApplicationCapability_Table_DataTwo_Description != value))
			{
				this.OnApplicationCapability_Table_DataTwo_DescriptionChanging(value);
				this.SendPropertyChanging();
				this._ApplicationCapability_Table_DataTwo_Description = value;
				this.SendPropertyChanged("ApplicationCapability_Table_DataTwo_Description");
				this.OnApplicationCapability_Table_DataTwo_DescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationCapability_Table_DataFormat_Description", DbType="NVarChar(MAX)")]
	public string ApplicationCapability_Table_DataFormat_Description
	{
		get
		{
			return this._ApplicationCapability_Table_DataFormat_Description;
		}
		set
		{
			if ((this._ApplicationCapability_Table_DataFormat_Description != value))
			{
				this.OnApplicationCapability_Table_DataFormat_DescriptionChanging(value);
				this.SendPropertyChanging();
				this._ApplicationCapability_Table_DataFormat_Description = value;
				this.SendPropertyChanged("ApplicationCapability_Table_DataFormat_Description");
				this.OnApplicationCapability_Table_DataFormat_DescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationCapability_Table_DataThree_Description", DbType="NVarChar(MAX)")]
	public string ApplicationCapability_Table_DataThree_Description
	{
		get
		{
			return this._ApplicationCapability_Table_DataThree_Description;
		}
		set
		{
			if ((this._ApplicationCapability_Table_DataThree_Description != value))
			{
				this.OnApplicationCapability_Table_DataThree_DescriptionChanging(value);
				this.SendPropertyChanging();
				this._ApplicationCapability_Table_DataThree_Description = value;
				this.SendPropertyChanged("ApplicationCapability_Table_DataThree_Description");
				this.OnApplicationCapability_Table_DataThree_DescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationCapability_Table_DataFour_Description", DbType="NVarChar(MAX)")]
	public string ApplicationCapability_Table_DataFour_Description
	{
		get
		{
			return this._ApplicationCapability_Table_DataFour_Description;
		}
		set
		{
			if ((this._ApplicationCapability_Table_DataFour_Description != value))
			{
				this.OnApplicationCapability_Table_DataFour_DescriptionChanging(value);
				this.SendPropertyChanging();
				this._ApplicationCapability_Table_DataFour_Description = value;
				this.SendPropertyChanged("ApplicationCapability_Table_DataFour_Description");
				this.OnApplicationCapability_Table_DataFour_DescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_CapabilityType_Capability_SMS", Storage="_ApplicationCapability_SMS", ThisKey="ID", OtherKey="CapabilityType")]
	public EntitySet<Capability_SMS> Capability_SMS
	{
		get
		{
			return this._ApplicationCapability_SMS;
		}
		set
		{
			this._ApplicationCapability_SMS.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_CapabilityType_Capability_OTP", Storage="_ApplicationCapability_OTPs", ThisKey="ID", OtherKey="CapabilityType")]
	public EntitySet<Capability_OTP> Capability_OTPs
	{
		get
		{
			return this._ApplicationCapability_OTPs;
		}
		set
		{
			this._ApplicationCapability_OTPs.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_CapabilityType_Capability_Barcode", Storage="_ApplicationCapability_Barcodes", ThisKey="ID", OtherKey="CapabilityType")]
	public EntitySet<Capability_Barcode> Capability_Barcodes
	{
		get
		{
			return this._ApplicationCapability_Barcodes;
		}
		set
		{
			this._ApplicationCapability_Barcodes.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_CapabilityType_Capability_EmailToUser", Storage="_ApplicationCapability_EmailToUsers", ThisKey="ID", OtherKey="CapabilityType")]
	public EntitySet<Capability_EmailToUser> Capability_EmailToUsers
	{
		get
		{
			return this._ApplicationCapability_EmailToUsers;
		}
		set
		{
			this._ApplicationCapability_EmailToUsers.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_CapabilityType_Capability_EmailToVendor", Storage="_ApplicationCapability_EmailToVendors", ThisKey="ID", OtherKey="CapabilityType")]
	public EntitySet<Capability_EmailToVendor> Capability_EmailToVendors
	{
		get
		{
			return this._ApplicationCapability_EmailToVendors;
		}
		set
		{
			this._ApplicationCapability_EmailToVendors.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_CapabilityType_Capability_ImageUpload", Storage="_ApplicationCapability_ImageUploads", ThisKey="ID", OtherKey="CapabilityType")]
	public EntitySet<Capability_ImageUpload> Capability_ImageUploads
	{
		get
		{
			return this._ApplicationCapability_ImageUploads;
		}
		set
		{
			this._ApplicationCapability_ImageUploads.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_CapabilityType_Capability_OTPView", Storage="_ApplicationCapability_OTPViews", ThisKey="ID", OtherKey="CapabilityType")]
	public EntitySet<Capability_OTPView> Capability_OTPViews
	{
		get
		{
			return this._ApplicationCapability_OTPViews;
		}
		set
		{
			this._ApplicationCapability_OTPViews.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_ApplicationCapability_SMS(Capability_SMS entity)
	{
		this.SendPropertyChanging();
		entity.Application_CapabilityType = this;
	}
	
	private void detach_ApplicationCapability_SMS(Capability_SMS entity)
	{
		this.SendPropertyChanging();
		entity.Application_CapabilityType = null;
	}
	
	private void attach_ApplicationCapability_OTPs(Capability_OTP entity)
	{
		this.SendPropertyChanging();
		entity.Application_CapabilityType = this;
	}
	
	private void detach_ApplicationCapability_OTPs(Capability_OTP entity)
	{
		this.SendPropertyChanging();
		entity.Application_CapabilityType = null;
	}
	
	private void attach_ApplicationCapability_Barcodes(Capability_Barcode entity)
	{
		this.SendPropertyChanging();
		entity.Application_CapabilityType = this;
	}
	
	private void detach_ApplicationCapability_Barcodes(Capability_Barcode entity)
	{
		this.SendPropertyChanging();
		entity.Application_CapabilityType = null;
	}
	
	private void attach_ApplicationCapability_EmailToUsers(Capability_EmailToUser entity)
	{
		this.SendPropertyChanging();
		entity.Application_CapabilityType = this;
	}
	
	private void detach_ApplicationCapability_EmailToUsers(Capability_EmailToUser entity)
	{
		this.SendPropertyChanging();
		entity.Application_CapabilityType = null;
	}
	
	private void attach_ApplicationCapability_EmailToVendors(Capability_EmailToVendor entity)
	{
		this.SendPropertyChanging();
		entity.Application_CapabilityType = this;
	}
	
	private void detach_ApplicationCapability_EmailToVendors(Capability_EmailToVendor entity)
	{
		this.SendPropertyChanging();
		entity.Application_CapabilityType = null;
	}
	
	private void attach_ApplicationCapability_ImageUploads(Capability_ImageUpload entity)
	{
		this.SendPropertyChanging();
		entity.Application_CapabilityType = this;
	}
	
	private void detach_ApplicationCapability_ImageUploads(Capability_ImageUpload entity)
	{
		this.SendPropertyChanging();
		entity.Application_CapabilityType = null;
	}
	
	private void attach_ApplicationCapability_OTPViews(Capability_OTPView entity)
	{
		this.SendPropertyChanging();
		entity.Application_CapabilityType = this;
	}
	
	private void detach_ApplicationCapability_OTPViews(Capability_OTPView entity)
	{
		this.SendPropertyChanging();
		entity.Application_CapabilityType = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Application_Device_Token")]
public partial class Application_Device_Token : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _ID;
	
	private int _AppID;
	
	private string _AppKey;
	
	private string _Udid;
	
	private string _UserAppIdentifier;
	
	private string _PushToken;
	
	private System.Nullable<System.DateTime> _InsertDate;
	
	private System.Nullable<System.DateTime> _UpdateDate;
	
	private EntityRef<Application> _Application;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnAppIDChanging(int value);
    partial void OnAppIDChanged();
    partial void OnAppKeyChanging(string value);
    partial void OnAppKeyChanged();
    partial void OnUdidChanging(string value);
    partial void OnUdidChanged();
    partial void OnUserAppIdentifierChanging(string value);
    partial void OnUserAppIdentifierChanged();
    partial void OnPushTokenChanging(string value);
    partial void OnPushTokenChanged();
    partial void OnInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertDateChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    #endregion
	
	public Application_Device_Token()
	{
		this._Application = default(EntityRef<Application>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppID", DbType="Int NOT NULL")]
	public int AppID
	{
		get
		{
			return this._AppID;
		}
		set
		{
			if ((this._AppID != value))
			{
				if (this._Application.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAppIDChanging(value);
				this.SendPropertyChanging();
				this._AppID = value;
				this.SendPropertyChanged("AppID");
				this.OnAppIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppKey", DbType="NVarChar(100)")]
	public string AppKey
	{
		get
		{
			return this._AppKey;
		}
		set
		{
			if ((this._AppKey != value))
			{
				this.OnAppKeyChanging(value);
				this.SendPropertyChanging();
				this._AppKey = value;
				this.SendPropertyChanged("AppKey");
				this.OnAppKeyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Udid", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string Udid
	{
		get
		{
			return this._Udid;
		}
		set
		{
			if ((this._Udid != value))
			{
				this.OnUdidChanging(value);
				this.SendPropertyChanging();
				this._Udid = value;
				this.SendPropertyChanged("Udid");
				this.OnUdidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAppIdentifier", DbType="NVarChar(100)")]
	public string UserAppIdentifier
	{
		get
		{
			return this._UserAppIdentifier;
		}
		set
		{
			if ((this._UserAppIdentifier != value))
			{
				this.OnUserAppIdentifierChanging(value);
				this.SendPropertyChanging();
				this._UserAppIdentifier = value;
				this.SendPropertyChanged("UserAppIdentifier");
				this.OnUserAppIdentifierChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PushToken", DbType="NVarChar(100)")]
	public string PushToken
	{
		get
		{
			return this._PushToken;
		}
		set
		{
			if ((this._PushToken != value))
			{
				this.OnPushTokenChanging(value);
				this.SendPropertyChanging();
				this._PushToken = value;
				this.SendPropertyChanged("PushToken");
				this.OnPushTokenChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> InsertDate
	{
		get
		{
			return this._InsertDate;
		}
		set
		{
			if ((this._InsertDate != value))
			{
				this.OnInsertDateChanging(value);
				this.SendPropertyChanging();
				this._InsertDate = value;
				this.SendPropertyChanged("InsertDate");
				this.OnInsertDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> UpdateDate
	{
		get
		{
			return this._UpdateDate;
		}
		set
		{
			if ((this._UpdateDate != value))
			{
				this.OnUpdateDateChanging(value);
				this.SendPropertyChanging();
				this._UpdateDate = value;
				this.SendPropertyChanged("UpdateDate");
				this.OnUpdateDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_Application_Device_Token", Storage="_Application", ThisKey="AppID", OtherKey="AppId", IsForeignKey=true)]
	public Application Application
	{
		get
		{
			return this._Application.Entity;
		}
		set
		{
			Application previousValue = this._Application.Entity;
			if (((previousValue != value) 
						|| (this._Application.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Application.Entity = null;
					previousValue.Application_Device_Tokens.Remove(this);
				}
				this._Application.Entity = value;
				if ((value != null))
				{
					value.Application_Device_Tokens.Add(this);
					this._AppID = value.AppId;
				}
				else
				{
					this._AppID = default(int);
				}
				this.SendPropertyChanged("Application");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ApplicationCapabilityIdentity")]
public partial class ApplicationCapabilityIdentity : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _ID;
	
	private System.DateTime _InsertDate;
	
	private int _AppID;
	
	private int _CapabilityTypeID;
	
	private string _Identity;
	
	private int _Count;
	
	private int _Max;
	
	private System.DateTime _EndRestrictionDate;
	
	private System.DateTime _LastVisit;
	
	private EntityRef<v_cms_capabilityIdentity> _VCapabilityType;
	
	private EntityRef<v_cms_Identity_AppID> _VAppID;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnAppIDChanging(int value);
    partial void OnAppIDChanged();
    partial void OnCapabilityTypeIDChanging(int value);
    partial void OnCapabilityTypeIDChanged();
    partial void OnIdentityChanging(string value);
    partial void OnIdentityChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnMaxChanging(int value);
    partial void OnMaxChanged();
    partial void OnEndRestrictionDateChanging(System.DateTime value);
    partial void OnEndRestrictionDateChanged();
    partial void OnLastVisitChanging(System.DateTime value);
    partial void OnLastVisitChanged();
    #endregion
	
	public ApplicationCapabilityIdentity()
	{
		this._VCapabilityType = default(EntityRef<v_cms_capabilityIdentity>);
		this._VAppID = default(EntityRef<v_cms_Identity_AppID>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
    [FilterUIHint("Date")]
    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
	public System.DateTime InsertDate
	{
		get
		{
			return this._InsertDate;
		}
		set
		{
			if ((this._InsertDate != value))
			{
				this.OnInsertDateChanging(value);
				this.SendPropertyChanging();
				this._InsertDate = value;
				this.SendPropertyChanged("InsertDate");
				this.OnInsertDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppID", DbType="Int NOT NULL")]
	public int AppID
	{
		get
		{
			return this._AppID;
		}
		set
		{
			if ((this._AppID != value))
			{
				if (this._VAppID.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAppIDChanging(value);
				this.SendPropertyChanging();
				this._AppID = value;
				this.SendPropertyChanged("AppID");
				this.OnAppIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CapabilityTypeID", DbType="Int NOT NULL")]
	public int CapabilityTypeID
	{
		get
		{
			return this._CapabilityTypeID;
		}
		set
		{
			if ((this._CapabilityTypeID != value))
			{
				if (this._VCapabilityType.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCapabilityTypeIDChanging(value);
				this.SendPropertyChanging();
				this._CapabilityTypeID = value;
				this.SendPropertyChanged("CapabilityTypeID");
				this.OnCapabilityTypeIDChanged();
			}
		}
	}
    [FilterUIHint("Search")]
    [global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Identity]", Storage="_Identity", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string Identity
	{
		get
		{
			return this._Identity;
		}
		set
		{
			if ((this._Identity != value))
			{
				this.OnIdentityChanging(value);
				this.SendPropertyChanging();
				this._Identity = value;
				this.SendPropertyChanged("Identity");
				this.OnIdentityChanged();
			}
		}
	}
    [FilterUIHint("Int_Range")]
    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int NOT NULL")]
	public int Count
	{
		get
		{
			return this._Count;
		}
		set
		{
			if ((this._Count != value))
			{
				this.OnCountChanging(value);
				this.SendPropertyChanging();
				this._Count = value;
				this.SendPropertyChanged("Count");
				this.OnCountChanged();
			}
		}
	}
    [FilterUIHint("Int_Range")]
    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Max", DbType="Int NOT NULL")]
	public int Max
	{
		get
		{
			return this._Max;
		}
		set
		{
			if ((this._Max != value))
			{
				this.OnMaxChanging(value);
				this.SendPropertyChanging();
				this._Max = value;
				this.SendPropertyChanged("Max");
				this.OnMaxChanged();
			}
		}
	}
    [FilterUIHint("Date")]
    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndRestrictionDate", DbType="DateTime NOT NULL")]
	public System.DateTime EndRestrictionDate
	{
		get
		{
			return this._EndRestrictionDate;
		}
		set
		{
			if ((this._EndRestrictionDate != value))
			{
				this.OnEndRestrictionDateChanging(value);
				this.SendPropertyChanging();
				this._EndRestrictionDate = value;
				this.SendPropertyChanged("EndRestrictionDate");
				this.OnEndRestrictionDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastVisit", DbType="DateTime NOT NULL")]
	public System.DateTime LastVisit
	{
		get
		{
			return this._LastVisit;
		}
		set
		{
			if ((this._LastVisit != value))
			{
				this.OnLastVisitChanging(value);
				this.SendPropertyChanging();
				this._LastVisit = value;
				this.SendPropertyChanged("LastVisit");
				this.OnLastVisitChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="v_cms_capabilityIdentity_ApplicationCapabilityIdentity", Storage="_VCapabilityType", ThisKey="CapabilityTypeID", OtherKey="ID", IsForeignKey=true)]
	public v_cms_capabilityIdentity VCapabilityType
	{
		get
		{
			return this._VCapabilityType.Entity;
		}
		set
		{
			v_cms_capabilityIdentity previousValue = this._VCapabilityType.Entity;
			if (((previousValue != value) 
						|| (this._VCapabilityType.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._VCapabilityType.Entity = null;
					previousValue.ApplicationCapabilityIdentities.Remove(this);
				}
				this._VCapabilityType.Entity = value;
				if ((value != null))
				{
					value.ApplicationCapabilityIdentities.Add(this);
					this._CapabilityTypeID = value.ID;
				}
				else
				{
					this._CapabilityTypeID = default(int);
				}
				this.SendPropertyChanged("VCapabilityType");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="v_cms_Identity_AppID_ApplicationCapabilityIdentity", Storage="_VAppID", ThisKey="AppID", OtherKey="AppID", IsForeignKey=true)]
	public v_cms_Identity_AppID VAppID
	{
		get
		{
			return this._VAppID.Entity;
		}
		set
		{
			v_cms_Identity_AppID previousValue = this._VAppID.Entity;
			if (((previousValue != value) 
						|| (this._VAppID.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._VAppID.Entity = null;
					previousValue.ApplicationCapabilityIdentities.Remove(this);
				}
				this._VAppID.Entity = value;
				if ((value != null))
				{
					value.ApplicationCapabilityIdentities.Add(this);
					this._AppID = value.AppID;
				}
				else
				{
					this._AppID = default(int);
				}
				this.SendPropertyChanged("VAppID");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ApplicationRejectNewsletterIdentity")]
public partial class ApplicationRejectNewsletterIdentity : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _ID;
	
	private System.DateTime _InsertDate;
	
	private int _AppID;
	
	private int _CapabilityTypeID;
	
	private string _Identity;
	
	private System.Nullable<System.DateTime> _ClientReceivedDate;
	
	private System.Nullable<System.DateTime> _ClientRejectDate;
	
	private System.Nullable<System.DateTime> _AdminSetDate;
	
	private int _Count;
	
	private EntityRef<v_cms_capabilityRejectIdentity> _VRejectCapabilityType;
	
	private EntityRef<v_cms_reject_Identity_AppID> _VAppID;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnAppIDChanging(int value);
    partial void OnAppIDChanged();
    partial void OnCapabilityTypeIDChanging(int value);
    partial void OnCapabilityTypeIDChanged();
    partial void OnIdentityChanging(string value);
    partial void OnIdentityChanged();
    partial void OnClientReceivedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnClientReceivedDateChanged();
    partial void OnClientRejectDateChanging(System.Nullable<System.DateTime> value);
    partial void OnClientRejectDateChanged();
    partial void OnAdminSetDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAdminSetDateChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    #endregion
	
	public ApplicationRejectNewsletterIdentity()
	{
		this._VRejectCapabilityType = default(EntityRef<v_cms_capabilityRejectIdentity>);
		this._VAppID = default(EntityRef<v_cms_reject_Identity_AppID>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
    [FilterUIHint("Date")]
    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
	public System.DateTime InsertDate
	{
		get
		{
			return this._InsertDate;
		}
		set
		{
			if ((this._InsertDate != value))
			{
				this.OnInsertDateChanging(value);
				this.SendPropertyChanging();
				this._InsertDate = value;
				this.SendPropertyChanged("InsertDate");
				this.OnInsertDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppID", DbType="Int NOT NULL")]
	public int AppID
	{
		get
		{
			return this._AppID;
		}
		set
		{
			if ((this._AppID != value))
			{
				if (this._VAppID.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAppIDChanging(value);
				this.SendPropertyChanging();
				this._AppID = value;
				this.SendPropertyChanged("AppID");
				this.OnAppIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CapabilityTypeID", DbType="Int NOT NULL")]
	public int CapabilityTypeID
	{
		get
		{
			return this._CapabilityTypeID;
		}
		set
		{
			if ((this._CapabilityTypeID != value))
			{
				if (this._VRejectCapabilityType.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCapabilityTypeIDChanging(value);
				this.SendPropertyChanging();
				this._CapabilityTypeID = value;
				this.SendPropertyChanged("CapabilityTypeID");
				this.OnCapabilityTypeIDChanged();
			}
		}
	}
    [FilterUIHint("Search")]
    [global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Identity]", Storage="_Identity", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string Identity
	{
		get
		{
			return this._Identity;
		}
		set
		{
			if ((this._Identity != value))
			{
				this.OnIdentityChanging(value);
				this.SendPropertyChanging();
				this._Identity = value;
				this.SendPropertyChanged("Identity");
				this.OnIdentityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientReceivedDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> ClientReceivedDate
	{
		get
		{
			return this._ClientReceivedDate;
		}
		set
		{
			if ((this._ClientReceivedDate != value))
			{
				this.OnClientReceivedDateChanging(value);
				this.SendPropertyChanging();
				this._ClientReceivedDate = value;
				this.SendPropertyChanged("ClientReceivedDate");
				this.OnClientReceivedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientRejectDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> ClientRejectDate
	{
		get
		{
			return this._ClientRejectDate;
		}
		set
		{
			if ((this._ClientRejectDate != value))
			{
				this.OnClientRejectDateChanging(value);
				this.SendPropertyChanging();
				this._ClientRejectDate = value;
				this.SendPropertyChanged("ClientRejectDate");
				this.OnClientRejectDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminSetDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> AdminSetDate
	{
		get
		{
			return this._AdminSetDate;
		}
		set
		{
			if ((this._AdminSetDate != value))
			{
				this.OnAdminSetDateChanging(value);
				this.SendPropertyChanging();
				this._AdminSetDate = value;
				this.SendPropertyChanged("AdminSetDate");
				this.OnAdminSetDateChanged();
			}
		}
	}
    [FilterUIHint("Int_Range")]
    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int NOT NULL")]
	public int Count
	{
		get
		{
			return this._Count;
		}
		set
		{
			if ((this._Count != value))
			{
				this.OnCountChanging(value);
				this.SendPropertyChanging();
				this._Count = value;
				this.SendPropertyChanged("Count");
				this.OnCountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="v_cms_capabilityRejectIdentity_ApplicationRejectNewsletterIdentity", Storage="_VRejectCapabilityType", ThisKey="CapabilityTypeID", OtherKey="ID", IsForeignKey=true)]
	public v_cms_capabilityRejectIdentity VRejectCapabilityType
	{
		get
		{
			return this._VRejectCapabilityType.Entity;
		}
		set
		{
			v_cms_capabilityRejectIdentity previousValue = this._VRejectCapabilityType.Entity;
			if (((previousValue != value) 
						|| (this._VRejectCapabilityType.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._VRejectCapabilityType.Entity = null;
					previousValue.ApplicationRejectNewsletterIdentities.Remove(this);
				}
				this._VRejectCapabilityType.Entity = value;
				if ((value != null))
				{
					value.ApplicationRejectNewsletterIdentities.Add(this);
					this._CapabilityTypeID = value.ID;
				}
				else
				{
					this._CapabilityTypeID = default(int);
				}
				this.SendPropertyChanged("VRejectCapabilityType");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="v_cms_reject_Identity_AppID_ApplicationRejectNewsletterIdentity", Storage="_VAppID", ThisKey="AppID", OtherKey="AppID", IsForeignKey=true)]
	public v_cms_reject_Identity_AppID VAppID
	{
		get
		{
			return this._VAppID.Entity;
		}
		set
		{
			v_cms_reject_Identity_AppID previousValue = this._VAppID.Entity;
			if (((previousValue != value) 
						|| (this._VAppID.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._VAppID.Entity = null;
					previousValue.ApplicationRejectNewsletterIdentities.Remove(this);
				}
				this._VAppID.Entity = value;
				if ((value != null))
				{
					value.ApplicationRejectNewsletterIdentities.Add(this);
					this._AppID = value.AppID;
				}
				else
				{
					this._AppID = default(int);
				}
				this.SendPropertyChanged("VAppID");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BroadcastPushPlatform")]
public partial class BroadcastPushPlatform : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Name;
	
	private EntitySet<LogPush> _LogPushes;
	
	private EntitySet<LogUrbanBroadCast> _LogUrbanBroadCasts;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
	
	public BroadcastPushPlatform()
	{
		this._LogPushes = new EntitySet<LogPush>(new Action<LogPush>(this.attach_LogPushes), new Action<LogPush>(this.detach_LogPushes));
		this._LogUrbanBroadCasts = new EntitySet<LogUrbanBroadCast>(new Action<LogUrbanBroadCast>(this.attach_LogUrbanBroadCasts), new Action<LogUrbanBroadCast>(this.detach_LogUrbanBroadCasts));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BroadcastPushPlatform_LogPush", Storage="_LogPushes", ThisKey="ID", OtherKey="PlatformType")]
	public EntitySet<LogPush> LogPushes
	{
		get
		{
			return this._LogPushes;
		}
		set
		{
			this._LogPushes.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BroadcastPushPlatform_LogUrbanBroadCast", Storage="_LogUrbanBroadCasts", ThisKey="ID", OtherKey="PlatformType")]
	public EntitySet<LogUrbanBroadCast> LogUrbanBroadCasts
	{
		get
		{
			return this._LogUrbanBroadCasts;
		}
		set
		{
			this._LogUrbanBroadCasts.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_LogPushes(LogPush entity)
	{
		this.SendPropertyChanging();
		entity.BroadcastPushPlatform = this;
	}
	
	private void detach_LogPushes(LogPush entity)
	{
		this.SendPropertyChanging();
		entity.BroadcastPushPlatform = null;
	}
	
	private void attach_LogUrbanBroadCasts(LogUrbanBroadCast entity)
	{
		this.SendPropertyChanging();
		entity.BroadcastPushPlatform = this;
	}
	
	private void detach_LogUrbanBroadCasts(LogUrbanBroadCast entity)
	{
		this.SendPropertyChanging();
		entity.BroadcastPushPlatform = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ImageUpload")]
public partial class ImageUpload : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _ID;
	
	private System.Nullable<System.DateTime> _InsertDate;
	
	private int _AppID;
	
	private System.Guid _ImageToken;
	
	private string _URL;
	
	private string _UDID;
	
	private string _UA;
	
	private EntityRef<Application> _Application;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertDateChanged();
    partial void OnAppIDChanging(int value);
    partial void OnAppIDChanged();
    partial void OnImageTokenChanging(System.Guid value);
    partial void OnImageTokenChanged();
    partial void OnURLImageChanging(string value);
    partial void OnURLImageChanged();
    partial void OnUDIDChanging(string value);
    partial void OnUDIDChanged();
    partial void OnUAChanging(string value);
    partial void OnUAChanged();
    #endregion
	
	public ImageUpload()
	{
		this._Application = default(EntityRef<Application>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> InsertDate
	{
		get
		{
			return this._InsertDate;
		}
		set
		{
			if ((this._InsertDate != value))
			{
				this.OnInsertDateChanging(value);
				this.SendPropertyChanging();
				this._InsertDate = value;
				this.SendPropertyChanged("InsertDate");
				this.OnInsertDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppID", DbType="Int NOT NULL")]
	public int AppID
	{
		get
		{
			return this._AppID;
		}
		set
		{
			if ((this._AppID != value))
			{
				if (this._Application.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAppIDChanging(value);
				this.SendPropertyChanging();
				this._AppID = value;
				this.SendPropertyChanged("AppID");
				this.OnAppIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageToken", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid ImageToken
	{
		get
		{
			return this._ImageToken;
		}
		set
		{
			if ((this._ImageToken != value))
			{
				this.OnImageTokenChanging(value);
				this.SendPropertyChanging();
				this._ImageToken = value;
				this.SendPropertyChanged("ImageToken");
				this.OnImageTokenChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="URL", Storage="_URL", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
	public string URLImage
	{
		get
		{
			return this._URL;
		}
		set
		{
			if ((this._URL != value))
			{
				this.OnURLImageChanging(value);
				this.SendPropertyChanging();
				this._URL = value;
				this.SendPropertyChanged("URLImage");
				this.OnURLImageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UDID", DbType="VarChar(100)")]
	public string UDID
	{
		get
		{
			return this._UDID;
		}
		set
		{
			if ((this._UDID != value))
			{
				this.OnUDIDChanging(value);
				this.SendPropertyChanging();
				this._UDID = value;
				this.SendPropertyChanged("UDID");
				this.OnUDIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UA", DbType="VarChar(MAX)")]
	public string UA
	{
		get
		{
			return this._UA;
		}
		set
		{
			if ((this._UA != value))
			{
				this.OnUAChanging(value);
				this.SendPropertyChanging();
				this._UA = value;
				this.SendPropertyChanged("UA");
				this.OnUAChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_ImageUpload", Storage="_Application", ThisKey="AppID", OtherKey="AppId", IsForeignKey=true)]
	public Application Application
	{
		get
		{
			return this._Application.Entity;
		}
		set
		{
			Application previousValue = this._Application.Entity;
			if (((previousValue != value) 
						|| (this._Application.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Application.Entity = null;
					previousValue.ImageUploads.Remove(this);
				}
				this._Application.Entity = value;
				if ((value != null))
				{
					value.ImageUploads.Add(this);
					this._AppID = value.AppId;
				}
				else
				{
					this._AppID = default(int);
				}
				this.SendPropertyChanged("Application");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Log]")]
public partial class Log : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _ID;
	
	private System.Nullable<System.DateTime> _InsertDate;
	
	private System.Nullable<int> _ActionType;
	
	private System.Nullable<int> _LogType;
	
	private int _AppID;
	
	private string _AppToken;
	
	private string _MSG;
	
	private string _MSG2;
	
	private string _Error;
	
	private System.Nullable<bool> _Critical;
	
	private int _APIType;
	
	private System.Nullable<int> _InnerLogType;
	
	private System.Nullable<System.DateTime> _APICreateDate;
	
	private System.Nullable<System.Guid> _APITransaction;
	
	private System.Nullable<bool> _QUse;
	
	private System.Nullable<bool> _SentFromAPI;
	
	private string _Instance;
	
	private EntityRef<LogType> _LogType1;
	
	private EntityRef<LogType> _LogType2;
	
	private EntityRef<Application> _Application;
	
	private EntityRef<ActionType> _Action_Type;
	
	private EntityRef<APIType> _API_Type;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertDateChanged();
    partial void OnActionTypeChanging(System.Nullable<int> value);
    partial void OnActionTypeChanged();
    partial void OnLogTypeChanging(System.Nullable<int> value);
    partial void OnLogTypeChanged();
    partial void OnAppIDChanging(int value);
    partial void OnAppIDChanged();
    partial void OnAppTokenChanging(string value);
    partial void OnAppTokenChanged();
    partial void OnMSGChanging(string value);
    partial void OnMSGChanged();
    partial void OnMSG2Changing(string value);
    partial void OnMSG2Changed();
    partial void OnErrorChanging(string value);
    partial void OnErrorChanged();
    partial void OnCriticalChanging(System.Nullable<bool> value);
    partial void OnCriticalChanged();
    partial void OnAPITypeChanging(int value);
    partial void OnAPITypeChanged();
    partial void OnInnerLogTypeChanging(System.Nullable<int> value);
    partial void OnInnerLogTypeChanged();
    partial void OnAPICreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAPICreateDateChanged();
    partial void OnAPITransactionChanging(System.Nullable<System.Guid> value);
    partial void OnAPITransactionChanged();
    partial void OnQUseChanging(System.Nullable<bool> value);
    partial void OnQUseChanged();
    partial void OnSentFromAPIChanging(System.Nullable<bool> value);
    partial void OnSentFromAPIChanged();
    partial void OnInstanceChanging(string value);
    partial void OnInstanceChanged();
    #endregion
	
	public Log()
	{
		this._LogType1 = default(EntityRef<LogType>);
		this._LogType2 = default(EntityRef<LogType>);
		this._Application = default(EntityRef<Application>);
		this._Action_Type = default(EntityRef<ActionType>);
		this._API_Type = default(EntityRef<APIType>);
		OnCreated();
	}
	
    [FilterUIHint("Int64_Range")]
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
    [FilterUIHint("Date")]
    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> InsertDate
	{
		get
		{
			return this._InsertDate;
		}
		set
		{
			if ((this._InsertDate != value))
			{
				this.OnInsertDateChanging(value);
				this.SendPropertyChanging();
				this._InsertDate = value;
				this.SendPropertyChanged("InsertDate");
				this.OnInsertDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionType", DbType="Int")]
	public System.Nullable<int> ActionType
	{
		get
		{
			return this._ActionType;
		}
		set
		{
			if ((this._ActionType != value))
			{
				if (this._Action_Type.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnActionTypeChanging(value);
				this.SendPropertyChanging();
				this._ActionType = value;
				this.SendPropertyChanged("ActionType");
				this.OnActionTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogType", DbType="Int")]
	public System.Nullable<int> LogType
	{
		get
		{
			return this._LogType;
		}
		set
		{
			if ((this._LogType != value))
			{
				if (this._LogType2.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnLogTypeChanging(value);
				this.SendPropertyChanging();
				this._LogType = value;
				this.SendPropertyChanged("LogType");
				this.OnLogTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppID", DbType="Int NOT NULL")]
	public int AppID
	{
		get
		{
			return this._AppID;
		}
		set
		{
			if ((this._AppID != value))
			{
				if (this._Application.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAppIDChanging(value);
				this.SendPropertyChanging();
				this._AppID = value;
				this.SendPropertyChanged("AppID");
				this.OnAppIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppToken", DbType="NVarChar(100)")]
	public string AppToken
	{
		get
		{
			return this._AppToken;
		}
		set
		{
			if ((this._AppToken != value))
			{
				this.OnAppTokenChanging(value);
				this.SendPropertyChanging();
				this._AppToken = value;
				this.SendPropertyChanged("AppToken");
				this.OnAppTokenChanged();
			}
		}
	}
    [FilterUIHint("Search")]
    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSG", DbType="NVarChar(MAX)")]
	public string MSG
	{
		get
		{
			return this._MSG;
		}
		set
		{
			if ((this._MSG != value))
			{
				this.OnMSGChanging(value);
				this.SendPropertyChanging();
				this._MSG = value;
				this.SendPropertyChanged("MSG");
				this.OnMSGChanged();
			}
		}
	}
    [FilterUIHint("Search")]
    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSG2", DbType="NVarChar(MAX)")]
	public string MSG2
	{
		get
		{
			return this._MSG2;
		}
		set
		{
			if ((this._MSG2 != value))
			{
				this.OnMSG2Changing(value);
				this.SendPropertyChanging();
				this._MSG2 = value;
				this.SendPropertyChanged("MSG2");
				this.OnMSG2Changed();
			}
		}
	}
    [FilterUIHint("Search")]
    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Error", DbType="NVarChar(MAX)")]
	public string Error
	{
		get
		{
			return this._Error;
		}
		set
		{
			if ((this._Error != value))
			{
				this.OnErrorChanging(value);
				this.SendPropertyChanging();
				this._Error = value;
				this.SendPropertyChanged("Error");
				this.OnErrorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Critical", DbType="Bit")]
	public System.Nullable<bool> Critical
	{
		get
		{
			return this._Critical;
		}
		set
		{
			if ((this._Critical != value))
			{
				this.OnCriticalChanging(value);
				this.SendPropertyChanging();
				this._Critical = value;
				this.SendPropertyChanged("Critical");
				this.OnCriticalChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APIType", DbType="Int NOT NULL")]
	public int APIType
	{
		get
		{
			return this._APIType;
		}
		set
		{
			if ((this._APIType != value))
			{
				if (this._API_Type.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAPITypeChanging(value);
				this.SendPropertyChanging();
				this._APIType = value;
				this.SendPropertyChanged("APIType");
				this.OnAPITypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InnerLogType", DbType="Int")]
	public System.Nullable<int> InnerLogType
	{
		get
		{
			return this._InnerLogType;
		}
		set
		{
			if ((this._InnerLogType != value))
			{
				if (this._LogType1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnInnerLogTypeChanging(value);
				this.SendPropertyChanging();
				this._InnerLogType = value;
				this.SendPropertyChanged("InnerLogType");
				this.OnInnerLogTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APICreateDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> APICreateDate
	{
		get
		{
			return this._APICreateDate;
		}
		set
		{
			if ((this._APICreateDate != value))
			{
				this.OnAPICreateDateChanging(value);
				this.SendPropertyChanging();
				this._APICreateDate = value;
				this.SendPropertyChanged("APICreateDate");
				this.OnAPICreateDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APITransaction", DbType="UniqueIdentifier")]
	public System.Nullable<System.Guid> APITransaction
	{
		get
		{
			return this._APITransaction;
		}
		set
		{
			if ((this._APITransaction != value))
			{
				this.OnAPITransactionChanging(value);
				this.SendPropertyChanging();
				this._APITransaction = value;
				this.SendPropertyChanged("APITransaction");
				this.OnAPITransactionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUse", DbType="Bit")]
	public System.Nullable<bool> QUse
	{
		get
		{
			return this._QUse;
		}
		set
		{
			if ((this._QUse != value))
			{
				this.OnQUseChanging(value);
				this.SendPropertyChanging();
				this._QUse = value;
				this.SendPropertyChanged("QUse");
				this.OnQUseChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SentFromAPI", DbType="Bit")]
	public System.Nullable<bool> SentFromAPI
	{
		get
		{
			return this._SentFromAPI;
		}
		set
		{
			if ((this._SentFromAPI != value))
			{
				this.OnSentFromAPIChanging(value);
				this.SendPropertyChanging();
				this._SentFromAPI = value;
				this.SendPropertyChanged("SentFromAPI");
				this.OnSentFromAPIChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Instance", DbType="VarChar(50)")]
	public string Instance
	{
		get
		{
			return this._Instance;
		}
		set
		{
			if ((this._Instance != value))
			{
				this.OnInstanceChanging(value);
				this.SendPropertyChanging();
				this._Instance = value;
				this.SendPropertyChanged("Instance");
				this.OnInstanceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LogType_Log", Storage="_LogType1", ThisKey="InnerLogType", OtherKey="ID", IsForeignKey=true)]
	public LogType Inner_LogType
	{
		get
		{
			return this._LogType1.Entity;
		}
		set
		{
			LogType previousValue = this._LogType1.Entity;
			if (((previousValue != value) 
						|| (this._LogType1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._LogType1.Entity = null;
					previousValue.Logs.Remove(this);
				}
				this._LogType1.Entity = value;
				if ((value != null))
				{
					value.Logs.Add(this);
					this._InnerLogType = value.ID;
				}
				else
				{
					this._InnerLogType = default(Nullable<int>);
				}
				this.SendPropertyChanged("Inner_LogType");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LogType_Log1", Storage="_LogType2", ThisKey="LogType", OtherKey="ID", IsForeignKey=true)]
	public LogType Main_LogType
	{
		get
		{
			return this._LogType2.Entity;
		}
		set
		{
			LogType previousValue = this._LogType2.Entity;
			if (((previousValue != value) 
						|| (this._LogType2.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._LogType2.Entity = null;
					previousValue.Logs1.Remove(this);
				}
				this._LogType2.Entity = value;
				if ((value != null))
				{
					value.Logs1.Add(this);
					this._LogType = value.ID;
				}
				else
				{
					this._LogType = default(Nullable<int>);
				}
				this.SendPropertyChanged("Main_LogType");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_Log", Storage="_Application", ThisKey="AppID", OtherKey="AppId", IsForeignKey=true)]
	public Application Application
	{
		get
		{
			return this._Application.Entity;
		}
		set
		{
			Application previousValue = this._Application.Entity;
			if (((previousValue != value) 
						|| (this._Application.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Application.Entity = null;
					previousValue.Logs.Remove(this);
				}
				this._Application.Entity = value;
				if ((value != null))
				{
					value.Logs.Add(this);
					this._AppID = value.AppId;
				}
				else
				{
					this._AppID = default(int);
				}
				this.SendPropertyChanged("Application");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActionType_Log", Storage="_Action_Type", ThisKey="ActionType", OtherKey="ActionTypeId", IsForeignKey=true)]
	public ActionType Action_Type
	{
		get
		{
			return this._Action_Type.Entity;
		}
		set
		{
			ActionType previousValue = this._Action_Type.Entity;
			if (((previousValue != value) 
						|| (this._Action_Type.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Action_Type.Entity = null;
					previousValue.Logs.Remove(this);
				}
				this._Action_Type.Entity = value;
				if ((value != null))
				{
					value.Logs.Add(this);
					this._ActionType = value.ActionTypeId;
				}
				else
				{
					this._ActionType = default(Nullable<int>);
				}
				this.SendPropertyChanged("Action_Type");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="APIType_Log", Storage="_API_Type", ThisKey="APIType", OtherKey="ID", IsForeignKey=true)]
	public APIType API_Type
	{
		get
		{
			return this._API_Type.Entity;
		}
		set
		{
			APIType previousValue = this._API_Type.Entity;
			if (((previousValue != value) 
						|| (this._API_Type.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._API_Type.Entity = null;
					previousValue.Logs.Remove(this);
				}
				this._API_Type.Entity = value;
				if ((value != null))
				{
					value.Logs.Add(this);
					this._APIType = value.ID;
				}
				else
				{
					this._APIType = default(int);
				}
				this.SendPropertyChanged("API_Type");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LogPush")]
public partial class LogPush : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _ID;
	
	private System.Nullable<System.DateTime> _InsertDate;
	
	private System.Nullable<int> _AppID;
	
	private System.Nullable<int> _Badge;
	
	private System.Nullable<int> _PlatformType;
	
	private string _MSG;
	
	private System.Nullable<System.DateTime> _APICreateDate;
	
	private System.Nullable<System.Guid> _APITransaction;
	
	private System.Nullable<bool> _QUse;
	
	private System.Nullable<bool> _SentFromAPI;
	
	private string _Platform;
	
	private string _Response;
	
	private string _Request;
	
	private System.Nullable<bool> _NativeLog;
	
	private System.Nullable<int> _APIType;
	
	private EntityRef<Application> _Application;
	
	private EntityRef<BroadcastPushPlatform> _BroadcastPushPlatform;
	
	private EntityRef<APIType> _APIType1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertDateChanged();
    partial void OnAppIDChanging(System.Nullable<int> value);
    partial void OnAppIDChanged();
    partial void OnBadgeChanging(System.Nullable<int> value);
    partial void OnBadgeChanged();
    partial void OnPlatformTypeChanging(System.Nullable<int> value);
    partial void OnPlatformTypeChanged();
    partial void OnMSGChanging(string value);
    partial void OnMSGChanged();
    partial void OnAPICreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAPICreateDateChanged();
    partial void OnAPITransactionChanging(System.Nullable<System.Guid> value);
    partial void OnAPITransactionChanged();
    partial void OnQUseChanging(System.Nullable<bool> value);
    partial void OnQUseChanged();
    partial void OnSentFromAPIChanging(System.Nullable<bool> value);
    partial void OnSentFromAPIChanged();
    partial void OnPlatformChanging(string value);
    partial void OnPlatformChanged();
    partial void OnResponseChanging(string value);
    partial void OnResponseChanged();
    partial void OnRequestChanging(string value);
    partial void OnRequestChanged();
    partial void OnNativeLogChanging(System.Nullable<bool> value);
    partial void OnNativeLogChanged();
    partial void OnAPITypeChanging(System.Nullable<int> value);
    partial void OnAPITypeChanged();
    #endregion
	
	public LogPush()
	{
		this._Application = default(EntityRef<Application>);
		this._BroadcastPushPlatform = default(EntityRef<BroadcastPushPlatform>);
		this._APIType1 = default(EntityRef<APIType>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> InsertDate
	{
		get
		{
			return this._InsertDate;
		}
		set
		{
			if ((this._InsertDate != value))
			{
				this.OnInsertDateChanging(value);
				this.SendPropertyChanging();
				this._InsertDate = value;
				this.SendPropertyChanged("InsertDate");
				this.OnInsertDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppID", DbType="Int")]
	public System.Nullable<int> AppID
	{
		get
		{
			return this._AppID;
		}
		set
		{
			if ((this._AppID != value))
			{
				if (this._Application.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAppIDChanging(value);
				this.SendPropertyChanging();
				this._AppID = value;
				this.SendPropertyChanged("AppID");
				this.OnAppIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Badge", DbType="Int")]
	public System.Nullable<int> Badge
	{
		get
		{
			return this._Badge;
		}
		set
		{
			if ((this._Badge != value))
			{
				this.OnBadgeChanging(value);
				this.SendPropertyChanging();
				this._Badge = value;
				this.SendPropertyChanged("Badge");
				this.OnBadgeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlatformType", DbType="Int")]
	public System.Nullable<int> PlatformType
	{
		get
		{
			return this._PlatformType;
		}
		set
		{
			if ((this._PlatformType != value))
			{
				if (this._BroadcastPushPlatform.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnPlatformTypeChanging(value);
				this.SendPropertyChanging();
				this._PlatformType = value;
				this.SendPropertyChanged("PlatformType");
				this.OnPlatformTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSG", DbType="NVarChar(MAX)")]
	public string MSG
	{
		get
		{
			return this._MSG;
		}
		set
		{
			if ((this._MSG != value))
			{
				this.OnMSGChanging(value);
				this.SendPropertyChanging();
				this._MSG = value;
				this.SendPropertyChanged("MSG");
				this.OnMSGChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APICreateDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> APICreateDate
	{
		get
		{
			return this._APICreateDate;
		}
		set
		{
			if ((this._APICreateDate != value))
			{
				this.OnAPICreateDateChanging(value);
				this.SendPropertyChanging();
				this._APICreateDate = value;
				this.SendPropertyChanged("APICreateDate");
				this.OnAPICreateDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APITransaction", DbType="UniqueIdentifier")]
	public System.Nullable<System.Guid> APITransaction
	{
		get
		{
			return this._APITransaction;
		}
		set
		{
			if ((this._APITransaction != value))
			{
				this.OnAPITransactionChanging(value);
				this.SendPropertyChanging();
				this._APITransaction = value;
				this.SendPropertyChanged("APITransaction");
				this.OnAPITransactionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUse", DbType="Bit")]
	public System.Nullable<bool> QUse
	{
		get
		{
			return this._QUse;
		}
		set
		{
			if ((this._QUse != value))
			{
				this.OnQUseChanging(value);
				this.SendPropertyChanging();
				this._QUse = value;
				this.SendPropertyChanged("QUse");
				this.OnQUseChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SentFromAPI", DbType="Bit")]
	public System.Nullable<bool> SentFromAPI
	{
		get
		{
			return this._SentFromAPI;
		}
		set
		{
			if ((this._SentFromAPI != value))
			{
				this.OnSentFromAPIChanging(value);
				this.SendPropertyChanging();
				this._SentFromAPI = value;
				this.SendPropertyChanged("SentFromAPI");
				this.OnSentFromAPIChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Platform", DbType="NVarChar(100)")]
	public string Platform
	{
		get
		{
			return this._Platform;
		}
		set
		{
			if ((this._Platform != value))
			{
				this.OnPlatformChanging(value);
				this.SendPropertyChanging();
				this._Platform = value;
				this.SendPropertyChanged("Platform");
				this.OnPlatformChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Response", DbType="NVarChar(1000)")]
	public string Response
	{
		get
		{
			return this._Response;
		}
		set
		{
			if ((this._Response != value))
			{
				this.OnResponseChanging(value);
				this.SendPropertyChanging();
				this._Response = value;
				this.SendPropertyChanged("Response");
				this.OnResponseChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Request", DbType="NVarChar(MAX)")]
	public string Request
	{
		get
		{
			return this._Request;
		}
		set
		{
			if ((this._Request != value))
			{
				this.OnRequestChanging(value);
				this.SendPropertyChanging();
				this._Request = value;
				this.SendPropertyChanged("Request");
				this.OnRequestChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NativeLog", DbType="Bit")]
	public System.Nullable<bool> NativeLog
	{
		get
		{
			return this._NativeLog;
		}
		set
		{
			if ((this._NativeLog != value))
			{
				this.OnNativeLogChanging(value);
				this.SendPropertyChanging();
				this._NativeLog = value;
				this.SendPropertyChanged("NativeLog");
				this.OnNativeLogChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APIType", DbType="Int")]
	public System.Nullable<int> APIType
	{
		get
		{
			return this._APIType;
		}
		set
		{
			if ((this._APIType != value))
			{
				if (this._APIType1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAPITypeChanging(value);
				this.SendPropertyChanging();
				this._APIType = value;
				this.SendPropertyChanged("APIType");
				this.OnAPITypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_LogPush", Storage="_Application", ThisKey="AppID", OtherKey="AppId", IsForeignKey=true)]
	public Application Application
	{
		get
		{
			return this._Application.Entity;
		}
		set
		{
			Application previousValue = this._Application.Entity;
			if (((previousValue != value) 
						|| (this._Application.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Application.Entity = null;
					previousValue.LogPushes.Remove(this);
				}
				this._Application.Entity = value;
				if ((value != null))
				{
					value.LogPushes.Add(this);
					this._AppID = value.AppId;
				}
				else
				{
					this._AppID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Application");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BroadcastPushPlatform_LogPush", Storage="_BroadcastPushPlatform", ThisKey="PlatformType", OtherKey="ID", IsForeignKey=true)]
	public BroadcastPushPlatform BroadcastPushPlatform
	{
		get
		{
			return this._BroadcastPushPlatform.Entity;
		}
		set
		{
			BroadcastPushPlatform previousValue = this._BroadcastPushPlatform.Entity;
			if (((previousValue != value) 
						|| (this._BroadcastPushPlatform.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._BroadcastPushPlatform.Entity = null;
					previousValue.LogPushes.Remove(this);
				}
				this._BroadcastPushPlatform.Entity = value;
				if ((value != null))
				{
					value.LogPushes.Add(this);
					this._PlatformType = value.ID;
				}
				else
				{
					this._PlatformType = default(Nullable<int>);
				}
				this.SendPropertyChanged("BroadcastPushPlatform");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="APIType_LogPush", Storage="_APIType1", ThisKey="APIType", OtherKey="ID", IsForeignKey=true)]
	public APIType APIType1
	{
		get
		{
			return this._APIType1.Entity;
		}
		set
		{
			APIType previousValue = this._APIType1.Entity;
			if (((previousValue != value) 
						|| (this._APIType1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._APIType1.Entity = null;
					previousValue.LogPushes.Remove(this);
				}
				this._APIType1.Entity = value;
				if ((value != null))
				{
					value.LogPushes.Add(this);
					this._APIType = value.ID;
				}
				else
				{
					this._APIType = default(Nullable<int>);
				}
				this.SendPropertyChanged("APIType1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LogSending")]
public partial class LogSending : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _ID;
	
	private System.Nullable<int> _AppID;
	
	private string _Request;
	
	private string _MSG;
	
	private System.Nullable<System.DateTime> _InsertDate;
	
	private string _RequestParamURL;
	
	private System.Nullable<int> _LogTypeID;
	
	private string _SenderName;
	
	private System.Nullable<int> _SMSLength;
	
	private string _ProviderResponse;
	
	private string _From;
	
	private string _To;
	
	private System.Nullable<System.DateTime> _APICreateDate;
	
	private System.Nullable<int> _APIType;
	
	private System.Nullable<System.Guid> _APITransaction;
	
	private System.Nullable<bool> _QUse;
	
	private System.Nullable<bool> _SentFromAPI;
	
	private EntityRef<Application> _Application;
	
	private EntityRef<APIType> _APIType1;
	
	private EntityRef<v_cms_logsending_alllogtype> _LogTypeSending;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnAppIDChanging(System.Nullable<int> value);
    partial void OnAppIDChanged();
    partial void OnRequestChanging(string value);
    partial void OnRequestChanged();
    partial void OnMSGChanging(string value);
    partial void OnMSGChanged();
    partial void OnInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertDateChanged();
    partial void OnRequestParamURLChanging(string value);
    partial void OnRequestParamURLChanged();
    partial void OnLogTypeIDChanging(System.Nullable<int> value);
    partial void OnLogTypeIDChanged();
    partial void OnSenderNameChanging(string value);
    partial void OnSenderNameChanged();
    partial void OnSMSLengthChanging(System.Nullable<int> value);
    partial void OnSMSLengthChanged();
    partial void OnProviderResponseChanging(string value);
    partial void OnProviderResponseChanged();
    partial void OnFromChanging(string value);
    partial void OnFromChanged();
    partial void OnToChanging(string value);
    partial void OnToChanged();
    partial void OnAPICreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAPICreateDateChanged();
    partial void OnAPITypeChanging(System.Nullable<int> value);
    partial void OnAPITypeChanged();
    partial void OnAPITransactionChanging(System.Nullable<System.Guid> value);
    partial void OnAPITransactionChanged();
    partial void OnQUseChanging(System.Nullable<bool> value);
    partial void OnQUseChanged();
    partial void OnSentFromAPIChanging(System.Nullable<bool> value);
    partial void OnSentFromAPIChanged();
    #endregion
	
	public LogSending()
	{
		this._Application = default(EntityRef<Application>);
		this._APIType1 = default(EntityRef<APIType>);
		this._LogTypeSending = default(EntityRef<v_cms_logsending_alllogtype>);
		OnCreated();
	}

	[FilterUIHint("Int64_Range")]
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppID", DbType="Int")]
	public System.Nullable<int> AppID
	{
		get
		{
			return this._AppID;
		}
		set
		{
			if ((this._AppID != value))
			{
				if (this._Application.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAppIDChanging(value);
				this.SendPropertyChanging();
				this._AppID = value;
				this.SendPropertyChanged("AppID");
				this.OnAppIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Request", DbType="NVarChar(MAX)")]
	public string Request
	{
		get
		{
			return this._Request;
		}
		set
		{
			if ((this._Request != value))
			{
				this.OnRequestChanging(value);
				this.SendPropertyChanging();
				this._Request = value;
				this.SendPropertyChanged("Request");
				this.OnRequestChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSG", DbType="NVarChar(MAX)")]
	public string MSG
	{
		get
		{
			return this._MSG;
		}
		set
		{
			if ((this._MSG != value))
			{
				this.OnMSGChanging(value);
				this.SendPropertyChanging();
				this._MSG = value;
				this.SendPropertyChanged("MSG");
				this.OnMSGChanged();
			}
		}
	}
    [FilterUIHint("Date")]
    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> InsertDate
	{
		get
		{
			return this._InsertDate;
		}
		set
		{
			if ((this._InsertDate != value))
			{
				this.OnInsertDateChanging(value);
				this.SendPropertyChanging();
				this._InsertDate = value;
				this.SendPropertyChanged("InsertDate");
				this.OnInsertDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestParamURL", DbType="NVarChar(1000)")]
	public string RequestParamURL
	{
		get
		{
			return this._RequestParamURL;
		}
		set
		{
			if ((this._RequestParamURL != value))
			{
				this.OnRequestParamURLChanging(value);
				this.SendPropertyChanging();
				this._RequestParamURL = value;
				this.SendPropertyChanged("RequestParamURL");
				this.OnRequestParamURLChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogTypeID", DbType="Int")]
	public System.Nullable<int> LogTypeID
	{
		get
		{
			return this._LogTypeID;
		}
		set
		{
			if ((this._LogTypeID != value))
			{
				if (this._LogTypeSending.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnLogTypeIDChanging(value);
				this.SendPropertyChanging();
				this._LogTypeID = value;
				this.SendPropertyChanged("LogTypeID");
				this.OnLogTypeIDChanged();
			}
		}
	}
    [FilterUIHint("Search")]
    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SenderName", DbType="NVarChar(100)")]
	public string SenderName
	{
		get
		{
			return this._SenderName;
		}
		set
		{
			if ((this._SenderName != value))
			{
				this.OnSenderNameChanging(value);
				this.SendPropertyChanging();
				this._SenderName = value;
				this.SendPropertyChanged("SenderName");
				this.OnSenderNameChanged();
			}
		}
	}
    [FilterUIHint("Int_Range")]
    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMSLength", DbType="Int")]
	public System.Nullable<int> SMSLength
	{
		get
		{
			return this._SMSLength;
		}
		set
		{
			if ((this._SMSLength != value))
			{
				this.OnSMSLengthChanging(value);
				this.SendPropertyChanging();
				this._SMSLength = value;
				this.SendPropertyChanged("SMSLength");
				this.OnSMSLengthChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderResponse", DbType="VarChar(MAX)")]
	public string ProviderResponse
	{
		get
		{
			return this._ProviderResponse;
		}
		set
		{
			if ((this._ProviderResponse != value))
			{
				this.OnProviderResponseChanging(value);
				this.SendPropertyChanging();
				this._ProviderResponse = value;
				this.SendPropertyChanged("ProviderResponse");
				this.OnProviderResponseChanged();
			}
		}
	}
    [FilterUIHint("Search")]
    [global::System.Data.Linq.Mapping.ColumnAttribute(Name="[From]", Storage="_From", DbType="NVarChar(100)")]
	public string From
	{
		get
		{
			return this._From;
		}
		set
		{
			if ((this._From != value))
			{
				this.OnFromChanging(value);
				this.SendPropertyChanging();
				this._From = value;
				this.SendPropertyChanged("From");
				this.OnFromChanged();
			}
		}
	}
    [FilterUIHint("Search")]
    [global::System.Data.Linq.Mapping.ColumnAttribute(Name="[To]", Storage="_To", DbType="NVarChar(100)")]
	public string To
	{
		get
		{
			return this._To;
		}
		set
		{
			if ((this._To != value))
			{
				this.OnToChanging(value);
				this.SendPropertyChanging();
				this._To = value;
				this.SendPropertyChanged("To");
				this.OnToChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APICreateDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> APICreateDate
	{
		get
		{
			return this._APICreateDate;
		}
		set
		{
			if ((this._APICreateDate != value))
			{
				this.OnAPICreateDateChanging(value);
				this.SendPropertyChanging();
				this._APICreateDate = value;
				this.SendPropertyChanged("APICreateDate");
				this.OnAPICreateDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APIType", DbType="Int")]
	public System.Nullable<int> APIType
	{
		get
		{
			return this._APIType;
		}
		set
		{
			if ((this._APIType != value))
			{
				if (this._APIType1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAPITypeChanging(value);
				this.SendPropertyChanging();
				this._APIType = value;
				this.SendPropertyChanged("APIType");
				this.OnAPITypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APITransaction", DbType="UniqueIdentifier")]
	public System.Nullable<System.Guid> APITransaction
	{
		get
		{
			return this._APITransaction;
		}
		set
		{
			if ((this._APITransaction != value))
			{
				this.OnAPITransactionChanging(value);
				this.SendPropertyChanging();
				this._APITransaction = value;
				this.SendPropertyChanged("APITransaction");
				this.OnAPITransactionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUse", DbType="Bit")]
	public System.Nullable<bool> QUse
	{
		get
		{
			return this._QUse;
		}
		set
		{
			if ((this._QUse != value))
			{
				this.OnQUseChanging(value);
				this.SendPropertyChanging();
				this._QUse = value;
				this.SendPropertyChanged("QUse");
				this.OnQUseChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SentFromAPI", DbType="Bit")]
	public System.Nullable<bool> SentFromAPI
	{
		get
		{
			return this._SentFromAPI;
		}
		set
		{
			if ((this._SentFromAPI != value))
			{
				this.OnSentFromAPIChanging(value);
				this.SendPropertyChanging();
				this._SentFromAPI = value;
				this.SendPropertyChanged("SentFromAPI");
				this.OnSentFromAPIChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_LogSending", Storage="_Application", ThisKey="AppID", OtherKey="AppId", IsForeignKey=true)]
	public Application Application
	{
		get
		{
			return this._Application.Entity;
		}
		set
		{
			Application previousValue = this._Application.Entity;
			if (((previousValue != value) 
						|| (this._Application.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Application.Entity = null;
					previousValue.LogSendings.Remove(this);
				}
				this._Application.Entity = value;
				if ((value != null))
				{
					value.LogSendings.Add(this);
					this._AppID = value.AppId;
				}
				else
				{
					this._AppID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Application");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="APIType_LogSending", Storage="_APIType1", ThisKey="APIType", OtherKey="ID", IsForeignKey=true)]
	public APIType API_Type
	{
		get
		{
			return this._APIType1.Entity;
		}
		set
		{
			APIType previousValue = this._APIType1.Entity;
			if (((previousValue != value) 
						|| (this._APIType1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._APIType1.Entity = null;
					previousValue.LogSendings.Remove(this);
				}
				this._APIType1.Entity = value;
				if ((value != null))
				{
					value.LogSendings.Add(this);
					this._APIType = value.ID;
				}
				else
				{
					this._APIType = default(Nullable<int>);
				}
				this.SendPropertyChanged("API_Type");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="v_cms_logsending_alllogtype_LogSending", Storage="_LogTypeSending", ThisKey="LogTypeID", OtherKey="ID", IsForeignKey=true)]
	public v_cms_logsending_alllogtype LogTypeSending
	{
		get
		{
			return this._LogTypeSending.Entity;
		}
		set
		{
			v_cms_logsending_alllogtype previousValue = this._LogTypeSending.Entity;
			if (((previousValue != value) 
						|| (this._LogTypeSending.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._LogTypeSending.Entity = null;
					previousValue.LogSendings.Remove(this);
				}
				this._LogTypeSending.Entity = value;
				if ((value != null))
				{
					value.LogSendings.Add(this);
					this._LogTypeID = value.ID;
				}
				else
				{
					this._LogTypeID = default(Nullable<int>);
				}
				this.SendPropertyChanged("LogTypeSending");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LogSending_Viewer")]
public partial class LogSending_Viewer : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _ID;
	
	private System.Nullable<long> _LogSendingID;
	
	private int _AppID;
	
	private string _MSG;
	
	private System.DateTime _InsertDate;
	
	private System.Nullable<int> _LogTypeID;
	
	private string _To;
	
	private EntityRef<Application> _Application;
	
	private EntityRef<v_cms_logsending_alllogtype> _LogTypeSending;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnLogSendingIDChanging(System.Nullable<long> value);
    partial void OnLogSendingIDChanged();
    partial void OnAppIDChanging(int value);
    partial void OnAppIDChanged();
    partial void OnMSGChanging(string value);
    partial void OnMSGChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnLogTypeIDChanging(System.Nullable<int> value);
    partial void OnLogTypeIDChanged();
    partial void OnToChanging(string value);
    partial void OnToChanged();
    #endregion
	
	public LogSending_Viewer()
	{
		this._Application = default(EntityRef<Application>);
		this._LogTypeSending = default(EntityRef<v_cms_logsending_alllogtype>);
		OnCreated();
	}

    [FilterUIHint("Int64_Range")]
    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogSendingID", DbType="BigInt")]
	public System.Nullable<long> LogSendingID
	{
		get
		{
			return this._LogSendingID;
		}
		set
		{
			if ((this._LogSendingID != value))
			{
				this.OnLogSendingIDChanging(value);
				this.SendPropertyChanging();
				this._LogSendingID = value;
				this.SendPropertyChanged("LogSendingID");
				this.OnLogSendingIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppID", DbType="Int NOT NULL")]
	public int AppID
	{
		get
		{
			return this._AppID;
		}
		set
		{
			if ((this._AppID != value))
			{
				if (this._Application.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAppIDChanging(value);
				this.SendPropertyChanging();
				this._AppID = value;
				this.SendPropertyChanged("AppID");
				this.OnAppIDChanged();
			}
		}
	}
    [FilterUIHint("Search")]
    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSG", DbType="NVarChar(MAX)")]
	public string MSG
	{
		get
		{
			return this._MSG;
		}
		set
		{
			if ((this._MSG != value))
			{
				this.OnMSGChanging(value);
				this.SendPropertyChanging();
				this._MSG = value;
				this.SendPropertyChanged("MSG");
				this.OnMSGChanged();
			}
		}
	}
    [FilterUIHint("Date")]
    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
	public System.DateTime InsertDate
	{
		get
		{
			return this._InsertDate;
		}
		set
		{
			if ((this._InsertDate != value))
			{
				this.OnInsertDateChanging(value);
				this.SendPropertyChanging();
				this._InsertDate = value;
				this.SendPropertyChanged("InsertDate");
				this.OnInsertDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogTypeID", DbType="Int")]
	public System.Nullable<int> LogTypeID
	{
		get
		{
			return this._LogTypeID;
		}
		set
		{
			if ((this._LogTypeID != value))
			{
				if (this._LogTypeSending.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnLogTypeIDChanging(value);
				this.SendPropertyChanging();
				this._LogTypeID = value;
				this.SendPropertyChanged("LogTypeID");
				this.OnLogTypeIDChanged();
			}
		}
	}
    [FilterUIHint("Search")]
    [global::System.Data.Linq.Mapping.ColumnAttribute(Name="[To]", Storage="_To", DbType="NVarChar(100)")]
	public string To
	{
		get
		{
			return this._To;
		}
		set
		{
			if ((this._To != value))
			{
				this.OnToChanging(value);
				this.SendPropertyChanging();
				this._To = value;
				this.SendPropertyChanged("To");
				this.OnToChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_LogSending_Viewer", Storage="_Application", ThisKey="AppID", OtherKey="AppId", IsForeignKey=true)]
	public Application Application
	{
		get
		{
			return this._Application.Entity;
		}
		set
		{
			Application previousValue = this._Application.Entity;
			if (((previousValue != value) 
						|| (this._Application.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Application.Entity = null;
					previousValue.LogSending_Viewers.Remove(this);
				}
				this._Application.Entity = value;
				if ((value != null))
				{
					value.LogSending_Viewers.Add(this);
					this._AppID = value.AppId;
				}
				else
				{
					this._AppID = default(int);
				}
				this.SendPropertyChanged("Application");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="v_cms_logsending_alllogtype_LogSending_Viewer", Storage="_LogTypeSending", ThisKey="LogTypeID", OtherKey="ID", IsForeignKey=true)]
	public v_cms_logsending_alllogtype LogTypeSending
	{
		get
		{
			return this._LogTypeSending.Entity;
		}
		set
		{
			v_cms_logsending_alllogtype previousValue = this._LogTypeSending.Entity;
			if (((previousValue != value) 
						|| (this._LogTypeSending.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._LogTypeSending.Entity = null;
					previousValue.LogSending_Viewers.Remove(this);
				}
				this._LogTypeSending.Entity = value;
				if ((value != null))
				{
					value.LogSending_Viewers.Add(this);
					this._LogTypeID = value.ID;
				}
				else
				{
					this._LogTypeID = default(Nullable<int>);
				}
				this.SendPropertyChanged("LogTypeSending");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LogType")]
public partial class LogType : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Name;
	
	private EntitySet<WorkerDebug> _WorkerDebugs;
	
	private EntitySet<WorkerDebug> _WorkerDebugs1;
	
	private EntitySet<Log> _Logs;
	
	private EntitySet<Log> _Logs1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
	
	public LogType()
	{
		this._WorkerDebugs = new EntitySet<WorkerDebug>(new Action<WorkerDebug>(this.attach_WorkerDebugs), new Action<WorkerDebug>(this.detach_WorkerDebugs));
		this._WorkerDebugs1 = new EntitySet<WorkerDebug>(new Action<WorkerDebug>(this.attach_WorkerDebugs1), new Action<WorkerDebug>(this.detach_WorkerDebugs1));
		this._Logs = new EntitySet<Log>(new Action<Log>(this.attach_Logs), new Action<Log>(this.detach_Logs));
		this._Logs1 = new EntitySet<Log>(new Action<Log>(this.attach_Logs1), new Action<Log>(this.detach_Logs1));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LogType_WorkerDebug", Storage="_WorkerDebugs", ThisKey="ID", OtherKey="LogType")]
	public EntitySet<WorkerDebug> WorkerDebugs
	{
		get
		{
			return this._WorkerDebugs;
		}
		set
		{
			this._WorkerDebugs.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LogType_WorkerDebug1", Storage="_WorkerDebugs1", ThisKey="ID", OtherKey="InnerLogType")]
	public EntitySet<WorkerDebug> WorkerDebugs1
	{
		get
		{
			return this._WorkerDebugs1;
		}
		set
		{
			this._WorkerDebugs1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LogType_Log", Storage="_Logs", ThisKey="ID", OtherKey="InnerLogType")]
	public EntitySet<Log> Logs
	{
		get
		{
			return this._Logs;
		}
		set
		{
			this._Logs.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LogType_Log1", Storage="_Logs1", ThisKey="ID", OtherKey="LogType")]
	public EntitySet<Log> Logs1
	{
		get
		{
			return this._Logs1;
		}
		set
		{
			this._Logs1.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_WorkerDebugs(WorkerDebug entity)
	{
		this.SendPropertyChanging();
		entity.LogType1 = this;
	}
	
	private void detach_WorkerDebugs(WorkerDebug entity)
	{
		this.SendPropertyChanging();
		entity.LogType1 = null;
	}
	
	private void attach_WorkerDebugs1(WorkerDebug entity)
	{
		this.SendPropertyChanging();
		entity.Inner_LogType = this;
	}
	
	private void detach_WorkerDebugs1(WorkerDebug entity)
	{
		this.SendPropertyChanging();
		entity.Inner_LogType = null;
	}
	
	private void attach_Logs(Log entity)
	{
		this.SendPropertyChanging();
		entity.Inner_LogType = this;
	}
	
	private void detach_Logs(Log entity)
	{
		this.SendPropertyChanging();
		entity.Inner_LogType = null;
	}
	
	private void attach_Logs1(Log entity)
	{
		this.SendPropertyChanging();
		entity.Main_LogType = this;
	}
	
	private void detach_Logs1(Log entity)
	{
		this.SendPropertyChanging();
		entity.Main_LogType = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LogUrbanBroadCast")]
public partial class LogUrbanBroadCast : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _ID;
	
	private System.Nullable<int> _AppID;
	
	private System.DateTime _InsertDate;
	
	private string _Request;
	
	private string _Response;
	
	private string _ExtraText;
	
	private string _ExtraText2;
	
	private System.Nullable<System.Guid> _APITransaction;
	
	private System.Nullable<int> _PlatformType;
	
	private string _MSG;
	
	private System.Nullable<System.DateTime> _Schedule;
	
	private EntityRef<Application> _Application;
	
	private EntityRef<BroadcastPushPlatform> _BroadcastPushPlatform;
	
	private EntityRef<Application> _Application1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnAppIDChanging(System.Nullable<int> value);
    partial void OnAppIDChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnRequestChanging(string value);
    partial void OnRequestChanged();
    partial void OnResponseChanging(string value);
    partial void OnResponseChanged();
    partial void OnExtraTextChanging(string value);
    partial void OnExtraTextChanged();
    partial void OnExtraText2Changing(string value);
    partial void OnExtraText2Changed();
    partial void OnAPITransactionChanging(System.Nullable<System.Guid> value);
    partial void OnAPITransactionChanged();
    partial void OnPlatformTypeChanging(System.Nullable<int> value);
    partial void OnPlatformTypeChanged();
    partial void OnMSGChanging(string value);
    partial void OnMSGChanged();
    partial void OnScheduleChanging(System.Nullable<System.DateTime> value);
    partial void OnScheduleChanged();
    #endregion
	
	public LogUrbanBroadCast()
	{
		this._Application = default(EntityRef<Application>);
		this._BroadcastPushPlatform = default(EntityRef<BroadcastPushPlatform>);
		this._Application1 = default(EntityRef<Application>);
		OnCreated();
	}
    [FilterUIHint("Int64_Range")]
    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppID", DbType="Int")]
	public System.Nullable<int> AppID
	{
		get
		{
			return this._AppID;
		}
		set
		{
			if ((this._AppID != value))
			{
				if ((this._Application.HasLoadedOrAssignedValue || this._Application1.HasLoadedOrAssignedValue))
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAppIDChanging(value);
				this.SendPropertyChanging();
				this._AppID = value;
				this.SendPropertyChanged("AppID");
				this.OnAppIDChanged();
			}
		}
	}
    [FilterUIHint("Date")]
    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
	public System.DateTime InsertDate
	{
		get
		{
			return this._InsertDate;
		}
		set
		{
			if ((this._InsertDate != value))
			{
				this.OnInsertDateChanging(value);
				this.SendPropertyChanging();
				this._InsertDate = value;
				this.SendPropertyChanged("InsertDate");
				this.OnInsertDateChanged();
			}
		}
	}
    [FilterUIHint("Search")]
    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Request", DbType="NVarChar(MAX)")]
	public string Request
	{
		get
		{
			return this._Request;
		}
		set
		{
			if ((this._Request != value))
			{
				this.OnRequestChanging(value);
				this.SendPropertyChanging();
				this._Request = value;
				this.SendPropertyChanged("Request");
				this.OnRequestChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Response", DbType="NVarChar(MAX)")]
	public string Response
	{
		get
		{
			return this._Response;
		}
		set
		{
			if ((this._Response != value))
			{
				this.OnResponseChanging(value);
				this.SendPropertyChanging();
				this._Response = value;
				this.SendPropertyChanged("Response");
				this.OnResponseChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtraText", DbType="NVarChar(MAX)")]
	public string ExtraText
	{
		get
		{
			return this._ExtraText;
		}
		set
		{
			if ((this._ExtraText != value))
			{
				this.OnExtraTextChanging(value);
				this.SendPropertyChanging();
				this._ExtraText = value;
				this.SendPropertyChanged("ExtraText");
				this.OnExtraTextChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtraText2", DbType="NVarChar(MAX)")]
	public string ExtraText2
	{
		get
		{
			return this._ExtraText2;
		}
		set
		{
			if ((this._ExtraText2 != value))
			{
				this.OnExtraText2Changing(value);
				this.SendPropertyChanging();
				this._ExtraText2 = value;
				this.SendPropertyChanged("ExtraText2");
				this.OnExtraText2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APITransaction", DbType="UniqueIdentifier")]
	public System.Nullable<System.Guid> APITransaction
	{
		get
		{
			return this._APITransaction;
		}
		set
		{
			if ((this._APITransaction != value))
			{
				this.OnAPITransactionChanging(value);
				this.SendPropertyChanging();
				this._APITransaction = value;
				this.SendPropertyChanged("APITransaction");
				this.OnAPITransactionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlatformType", DbType="Int")]
	public System.Nullable<int> PlatformType
	{
		get
		{
			return this._PlatformType;
		}
		set
		{
			if ((this._PlatformType != value))
			{
				if (this._BroadcastPushPlatform.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnPlatformTypeChanging(value);
				this.SendPropertyChanging();
				this._PlatformType = value;
				this.SendPropertyChanged("PlatformType");
				this.OnPlatformTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSG", DbType="NVarChar(MAX)")]
	public string MSG
	{
		get
		{
			return this._MSG;
		}
		set
		{
			if ((this._MSG != value))
			{
				this.OnMSGChanging(value);
				this.SendPropertyChanging();
				this._MSG = value;
				this.SendPropertyChanged("MSG");
				this.OnMSGChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Schedule", DbType="DateTime")]
	public System.Nullable<System.DateTime> Schedule
	{
		get
		{
			return this._Schedule;
		}
		set
		{
			if ((this._Schedule != value))
			{
				this.OnScheduleChanging(value);
				this.SendPropertyChanging();
				this._Schedule = value;
				this.SendPropertyChanged("Schedule");
				this.OnScheduleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_LogUrbanBroadCast", Storage="_Application", ThisKey="AppID", OtherKey="AppId", IsForeignKey=true)]
	public Application Application
	{
		get
		{
			return this._Application.Entity;
		}
		set
		{
			Application previousValue = this._Application.Entity;
			if (((previousValue != value) 
						|| (this._Application.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Application.Entity = null;
					previousValue.LogUrbanBroadCasts.Remove(this);
				}
				this._Application.Entity = value;
				if ((value != null))
				{
					value.LogUrbanBroadCasts.Add(this);
					this._AppID = value.AppId;
				}
				else
				{
					this._AppID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Application");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BroadcastPushPlatform_LogUrbanBroadCast", Storage="_BroadcastPushPlatform", ThisKey="PlatformType", OtherKey="ID", IsForeignKey=true)]
	public BroadcastPushPlatform BroadcastPushPlatform
	{
		get
		{
			return this._BroadcastPushPlatform.Entity;
		}
		set
		{
			BroadcastPushPlatform previousValue = this._BroadcastPushPlatform.Entity;
			if (((previousValue != value) 
						|| (this._BroadcastPushPlatform.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._BroadcastPushPlatform.Entity = null;
					previousValue.LogUrbanBroadCasts.Remove(this);
				}
				this._BroadcastPushPlatform.Entity = value;
				if ((value != null))
				{
					value.LogUrbanBroadCasts.Add(this);
					this._PlatformType = value.ID;
				}
				else
				{
					this._PlatformType = default(Nullable<int>);
				}
				this.SendPropertyChanged("BroadcastPushPlatform");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_LogUrbanBroadCast1", Storage="_Application1", ThisKey="AppID", OtherKey="AppId", IsForeignKey=true)]
	public Application Application1
	{
		get
		{
			return this._Application1.Entity;
		}
		set
		{
			Application previousValue = this._Application1.Entity;
			if (((previousValue != value) 
						|| (this._Application1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Application1.Entity = null;
					previousValue.LogUrbanBroadCasts1.Remove(this);
				}
				this._Application1.Entity = value;
				if ((value != null))
				{
					value.LogUrbanBroadCasts1.Add(this);
					this._AppID = value.AppId;
				}
				else
				{
					this._AppID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Application1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PostBack")]
public partial class PostBack : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _ID;
	
	private System.Nullable<System.DateTime> _InsertDate;
	
	private string _Data;
	
	private string _IP;
	
	private string _UA;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertDateChanged();
    partial void OnDataChanging(string value);
    partial void OnDataChanged();
    partial void OnIPChanging(string value);
    partial void OnIPChanged();
    partial void OnUAChanging(string value);
    partial void OnUAChanged();
    #endregion
	
	public PostBack()
	{
		OnCreated();
	}
    [FilterUIHint("Int64_Range")]
    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
    [FilterUIHint("Date")]
    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> InsertDate
	{
		get
		{
			return this._InsertDate;
		}
		set
		{
			if ((this._InsertDate != value))
			{
				this.OnInsertDateChanging(value);
				this.SendPropertyChanging();
				this._InsertDate = value;
				this.SendPropertyChanged("InsertDate");
				this.OnInsertDateChanged();
			}
		}
	}
    [FilterUIHint("Search")]
    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="NVarChar(MAX)")]
	public string Data
	{
		get
		{
			return this._Data;
		}
		set
		{
			if ((this._Data != value))
			{
				this.OnDataChanging(value);
				this.SendPropertyChanging();
				this._Data = value;
				this.SendPropertyChanged("Data");
				this.OnDataChanged();
			}
		}
	}
    [FilterUIHint("Search")]
    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IP", DbType="VarChar(25)")]
	public string IP
	{
		get
		{
			return this._IP;
		}
		set
		{
			if ((this._IP != value))
			{
				this.OnIPChanging(value);
				this.SendPropertyChanging();
				this._IP = value;
				this.SendPropertyChanged("IP");
				this.OnIPChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UA", DbType="VarChar(MAX)")]
	public string UA
	{
		get
		{
			return this._UA;
		}
		set
		{
			if ((this._UA != value))
			{
				this.OnUAChanging(value);
				this.SendPropertyChanging();
				this._UA = value;
				this.SendPropertyChanged("UA");
				this.OnUAChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SMSProviderType")]
public partial class SMSProviderType : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Name;
	
	private string _ProviderURL;
	
	private EntitySet<SMS_Provider> _SMS_Providers;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnProviderURLChanging(string value);
    partial void OnProviderURLChanged();
    #endregion
	
	public SMSProviderType()
	{
		this._SMS_Providers = new EntitySet<SMS_Provider>(new Action<SMS_Provider>(this.attach_SMS_Providers), new Action<SMS_Provider>(this.detach_SMS_Providers));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderURL", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
	public string ProviderURL
	{
		get
		{
			return this._ProviderURL;
		}
		set
		{
			if ((this._ProviderURL != value))
			{
				this.OnProviderURLChanging(value);
				this.SendPropertyChanging();
				this._ProviderURL = value;
				this.SendPropertyChanged("ProviderURL");
				this.OnProviderURLChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SMSProviderType_SMS_Provider", Storage="_SMS_Providers", ThisKey="ID", OtherKey="ProviderTypeID")]
	public EntitySet<SMS_Provider> SMS_Providers
	{
		get
		{
			return this._SMS_Providers;
		}
		set
		{
			this._SMS_Providers.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_SMS_Providers(SMS_Provider entity)
	{
		this.SendPropertyChanging();
		entity.SMSProviderType = this;
	}
	
	private void detach_SMS_Providers(SMS_Provider entity)
	{
		this.SendPropertyChanging();
		entity.SMSProviderType = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblActionType")]
public partial class ActionType : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ActionTypeId;
	
	private string _ActionDiscription;
	
	private EntitySet<Log> _Logs;
	
	private EntitySet<UtilitiesLog> _UtilitiesLogs;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnActionTypeIdChanging(int value);
    partial void OnActionTypeIdChanged();
    partial void OnActionDiscriptionChanging(string value);
    partial void OnActionDiscriptionChanged();
    #endregion
	
	public ActionType()
	{
		this._Logs = new EntitySet<Log>(new Action<Log>(this.attach_Logs), new Action<Log>(this.detach_Logs));
		this._UtilitiesLogs = new EntitySet<UtilitiesLog>(new Action<UtilitiesLog>(this.attach_UtilitiesLogs), new Action<UtilitiesLog>(this.detach_UtilitiesLogs));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionTypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ActionTypeId
	{
		get
		{
			return this._ActionTypeId;
		}
		set
		{
			if ((this._ActionTypeId != value))
			{
				this.OnActionTypeIdChanging(value);
				this.SendPropertyChanging();
				this._ActionTypeId = value;
				this.SendPropertyChanged("ActionTypeId");
				this.OnActionTypeIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionDiscription", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
	public string ActionDiscription
	{
		get
		{
			return this._ActionDiscription;
		}
		set
		{
			if ((this._ActionDiscription != value))
			{
				this.OnActionDiscriptionChanging(value);
				this.SendPropertyChanging();
				this._ActionDiscription = value;
				this.SendPropertyChanged("ActionDiscription");
				this.OnActionDiscriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActionType_Log", Storage="_Logs", ThisKey="ActionTypeId", OtherKey="ActionType")]
	public EntitySet<Log> Logs
	{
		get
		{
			return this._Logs;
		}
		set
		{
			this._Logs.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActionType_UtilitiesLog", Storage="_UtilitiesLogs", ThisKey="ActionTypeId", OtherKey="ActionTypeId")]
	public EntitySet<UtilitiesLog> UtilitiesLogs
	{
		get
		{
			return this._UtilitiesLogs;
		}
		set
		{
			this._UtilitiesLogs.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Logs(Log entity)
	{
		this.SendPropertyChanging();
		entity.Action_Type = this;
	}
	
	private void detach_Logs(Log entity)
	{
		this.SendPropertyChanging();
		entity.Action_Type = null;
	}
	
	private void attach_UtilitiesLogs(UtilitiesLog entity)
	{
		this.SendPropertyChanging();
		entity.ActionType = this;
	}
	
	private void detach_UtilitiesLogs(UtilitiesLog entity)
	{
		this.SendPropertyChanging();
		entity.ActionType = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblApplication")]
public partial class Application : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _AppId;
	
	private string _Name;
	
	private System.Nullable<System.DateTime> _InsertDate;
	
	private bool _IsActive;
	
	private string _Token;
	
	private EntitySet<Application_Device_Token> _Application_Device_Tokens;
	
	private EntitySet<ImageUpload> _ImageUploads;
	
	private EntitySet<Log> _Logs;
	
	private EntitySet<LogPush> _LogPushes;
	
	private EntitySet<LogSending> _LogSendings;
	
	private EntitySet<LogSending_Viewer> _LogSending_Viewers;
	
	private EntitySet<LogUrbanBroadCast> _LogUrbanBroadCasts;
	
	private EntitySet<LogUrbanBroadCast> _LogUrbanBroadCasts1;
	
	private EntitySet<ApplicationDeepLink> _ApplicationDeepLinks;
	
	private EntitySet<ApplicationParameter> _ApplicationParameters;
	
	private EntitySet<ApplicationParameterVersion> _tblApplicationParameterVersions;
	
	private EntitySet<ApplicationParameterVersion> _ApplicationParameterVersions;
	
	private EntitySet<ApplicationPush> _ApplicationPushes;
	
	private EntitySet<ApplicationText> _ApplicationTexts;
	
	private EntitySet<ApplicationTextVersion> _ApplicationTextVersions;
	
	private EntitySet<ApplicationVersion> _ApplicationVersions;
	
	private EntitySet<OTP_V2> _tblOTP_V2s;
	
	private EntitySet<OTPMessage> _OTPMessages;
	
	private EntitySet<Splash> _Splashes;
	
	private EntitySet<UtilitiesLog> _UtilitiesLogs;
	
	private EntitySet<Capability_SMS> _ApplicationCapability_SMS;
	
	private EntitySet<Capability_OTP> _ApplicationCapability_OTPs;
	
	private EntitySet<Capability_Barcode> _ApplicationCapability_Barcodes;
	
	private EntitySet<Capability_EmailToUser> _ApplicationCapability_EmailToUsers;
	
	private EntitySet<Capability_EmailToVendor> _ApplicationCapability_EmailToVendors;
	
	private EntitySet<Capability_ImageUpload> _ApplicationCapability_ImageUploads;
	
	private EntitySet<Capability_OTPView> _ApplicationCapability_OTPViews;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAppIdChanging(int value);
    partial void OnAppIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertDateChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnTokenChanging(string value);
    partial void OnTokenChanged();
    #endregion
	
	public Application()
	{
		this._Application_Device_Tokens = new EntitySet<Application_Device_Token>(new Action<Application_Device_Token>(this.attach_Application_Device_Tokens), new Action<Application_Device_Token>(this.detach_Application_Device_Tokens));
		this._ImageUploads = new EntitySet<ImageUpload>(new Action<ImageUpload>(this.attach_ImageUploads), new Action<ImageUpload>(this.detach_ImageUploads));
		this._Logs = new EntitySet<Log>(new Action<Log>(this.attach_Logs), new Action<Log>(this.detach_Logs));
		this._LogPushes = new EntitySet<LogPush>(new Action<LogPush>(this.attach_LogPushes), new Action<LogPush>(this.detach_LogPushes));
		this._LogSendings = new EntitySet<LogSending>(new Action<LogSending>(this.attach_LogSendings), new Action<LogSending>(this.detach_LogSendings));
		this._LogSending_Viewers = new EntitySet<LogSending_Viewer>(new Action<LogSending_Viewer>(this.attach_LogSending_Viewers), new Action<LogSending_Viewer>(this.detach_LogSending_Viewers));
		this._LogUrbanBroadCasts = new EntitySet<LogUrbanBroadCast>(new Action<LogUrbanBroadCast>(this.attach_LogUrbanBroadCasts), new Action<LogUrbanBroadCast>(this.detach_LogUrbanBroadCasts));
		this._LogUrbanBroadCasts1 = new EntitySet<LogUrbanBroadCast>(new Action<LogUrbanBroadCast>(this.attach_LogUrbanBroadCasts1), new Action<LogUrbanBroadCast>(this.detach_LogUrbanBroadCasts1));
		this._ApplicationDeepLinks = new EntitySet<ApplicationDeepLink>(new Action<ApplicationDeepLink>(this.attach_ApplicationDeepLinks), new Action<ApplicationDeepLink>(this.detach_ApplicationDeepLinks));
		this._ApplicationParameters = new EntitySet<ApplicationParameter>(new Action<ApplicationParameter>(this.attach_ApplicationParameters), new Action<ApplicationParameter>(this.detach_ApplicationParameters));
		this._tblApplicationParameterVersions = new EntitySet<ApplicationParameterVersion>(new Action<ApplicationParameterVersion>(this.attach_tblApplicationParameterVersions), new Action<ApplicationParameterVersion>(this.detach_tblApplicationParameterVersions));
		this._ApplicationParameterVersions = new EntitySet<ApplicationParameterVersion>(new Action<ApplicationParameterVersion>(this.attach_ApplicationParameterVersions), new Action<ApplicationParameterVersion>(this.detach_ApplicationParameterVersions));
		this._ApplicationPushes = new EntitySet<ApplicationPush>(new Action<ApplicationPush>(this.attach_ApplicationPushes), new Action<ApplicationPush>(this.detach_ApplicationPushes));
		this._ApplicationTexts = new EntitySet<ApplicationText>(new Action<ApplicationText>(this.attach_ApplicationTexts), new Action<ApplicationText>(this.detach_ApplicationTexts));
		this._ApplicationTextVersions = new EntitySet<ApplicationTextVersion>(new Action<ApplicationTextVersion>(this.attach_ApplicationTextVersions), new Action<ApplicationTextVersion>(this.detach_ApplicationTextVersions));
		this._ApplicationVersions = new EntitySet<ApplicationVersion>(new Action<ApplicationVersion>(this.attach_ApplicationVersions), new Action<ApplicationVersion>(this.detach_ApplicationVersions));
		this._tblOTP_V2s = new EntitySet<OTP_V2>(new Action<OTP_V2>(this.attach_tblOTP_V2s), new Action<OTP_V2>(this.detach_tblOTP_V2s));
		this._OTPMessages = new EntitySet<OTPMessage>(new Action<OTPMessage>(this.attach_OTPMessages), new Action<OTPMessage>(this.detach_OTPMessages));
		this._Splashes = new EntitySet<Splash>(new Action<Splash>(this.attach_Splashes), new Action<Splash>(this.detach_Splashes));
		this._UtilitiesLogs = new EntitySet<UtilitiesLog>(new Action<UtilitiesLog>(this.attach_UtilitiesLogs), new Action<UtilitiesLog>(this.detach_UtilitiesLogs));
		this._ApplicationCapability_SMS = new EntitySet<Capability_SMS>(new Action<Capability_SMS>(this.attach_ApplicationCapability_SMS), new Action<Capability_SMS>(this.detach_ApplicationCapability_SMS));
		this._ApplicationCapability_OTPs = new EntitySet<Capability_OTP>(new Action<Capability_OTP>(this.attach_ApplicationCapability_OTPs), new Action<Capability_OTP>(this.detach_ApplicationCapability_OTPs));
		this._ApplicationCapability_Barcodes = new EntitySet<Capability_Barcode>(new Action<Capability_Barcode>(this.attach_ApplicationCapability_Barcodes), new Action<Capability_Barcode>(this.detach_ApplicationCapability_Barcodes));
		this._ApplicationCapability_EmailToUsers = new EntitySet<Capability_EmailToUser>(new Action<Capability_EmailToUser>(this.attach_ApplicationCapability_EmailToUsers), new Action<Capability_EmailToUser>(this.detach_ApplicationCapability_EmailToUsers));
		this._ApplicationCapability_EmailToVendors = new EntitySet<Capability_EmailToVendor>(new Action<Capability_EmailToVendor>(this.attach_ApplicationCapability_EmailToVendors), new Action<Capability_EmailToVendor>(this.detach_ApplicationCapability_EmailToVendors));
		this._ApplicationCapability_ImageUploads = new EntitySet<Capability_ImageUpload>(new Action<Capability_ImageUpload>(this.attach_ApplicationCapability_ImageUploads), new Action<Capability_ImageUpload>(this.detach_ApplicationCapability_ImageUploads));
		this._ApplicationCapability_OTPViews = new EntitySet<Capability_OTPView>(new Action<Capability_OTPView>(this.attach_ApplicationCapability_OTPViews), new Action<Capability_OTPView>(this.detach_ApplicationCapability_OTPViews));
		OnCreated();
	}

    [FilterUIHint("Int_Range")]
    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int AppId
	{
		get
		{
			return this._AppId;
		}
		set
		{
			if ((this._AppId != value))
			{
				this.OnAppIdChanging(value);
				this.SendPropertyChanging();
				this._AppId = value;
				this.SendPropertyChanged("AppId");
				this.OnAppIdChanged();
			}
		}
	}
    [FilterUIHint("Search")]
    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
    [FilterUIHint("Date")]
    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> InsertDate
	{
		get
		{
			return this._InsertDate;
		}
		set
		{
			if ((this._InsertDate != value))
			{
				this.OnInsertDateChanging(value);
				this.SendPropertyChanging();
				this._InsertDate = value;
				this.SendPropertyChanged("InsertDate");
				this.OnInsertDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
	public bool IsActive
	{
		get
		{
			return this._IsActive;
		}
		set
		{
			if ((this._IsActive != value))
			{
				this.OnIsActiveChanging(value);
				this.SendPropertyChanging();
				this._IsActive = value;
				this.SendPropertyChanged("IsActive");
				this.OnIsActiveChanged();
			}
		}
	}
    [FilterUIHint("Search")]
    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Token", DbType="nvarchar(100) not null", CanBeNull=false)]
	public string Token
	{
		get
		{
			return this._Token;
		}
		set
		{
			if ((this._Token != value))
			{
				this.OnTokenChanging(value);
				this.SendPropertyChanging();
				this._Token = value;
				this.SendPropertyChanged("Token");
				this.OnTokenChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_Application_Device_Token", Storage="_Application_Device_Tokens", ThisKey="AppId", OtherKey="AppID")]
	public EntitySet<Application_Device_Token> Application_Device_Tokens
	{
		get
		{
			return this._Application_Device_Tokens;
		}
		set
		{
			this._Application_Device_Tokens.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_ImageUpload", Storage="_ImageUploads", ThisKey="AppId", OtherKey="AppID")]
	public EntitySet<ImageUpload> ImageUploads
	{
		get
		{
			return this._ImageUploads;
		}
		set
		{
			this._ImageUploads.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_Log", Storage="_Logs", ThisKey="AppId", OtherKey="AppID")]
	public EntitySet<Log> Logs
	{
		get
		{
			return this._Logs;
		}
		set
		{
			this._Logs.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_LogPush", Storage="_LogPushes", ThisKey="AppId", OtherKey="AppID")]
	public EntitySet<LogPush> LogPushes
	{
		get
		{
			return this._LogPushes;
		}
		set
		{
			this._LogPushes.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_LogSending", Storage="_LogSendings", ThisKey="AppId", OtherKey="AppID")]
	public EntitySet<LogSending> LogSendings
	{
		get
		{
			return this._LogSendings;
		}
		set
		{
			this._LogSendings.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_LogSending_Viewer", Storage="_LogSending_Viewers", ThisKey="AppId", OtherKey="AppID")]
	public EntitySet<LogSending_Viewer> LogSending_Viewers
	{
		get
		{
			return this._LogSending_Viewers;
		}
		set
		{
			this._LogSending_Viewers.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_LogUrbanBroadCast", Storage="_LogUrbanBroadCasts", ThisKey="AppId", OtherKey="AppID")]
	public EntitySet<LogUrbanBroadCast> LogUrbanBroadCasts
	{
		get
		{
			return this._LogUrbanBroadCasts;
		}
		set
		{
			this._LogUrbanBroadCasts.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_LogUrbanBroadCast1", Storage="_LogUrbanBroadCasts1", ThisKey="AppId", OtherKey="AppID")]
	public EntitySet<LogUrbanBroadCast> LogUrbanBroadCasts1
	{
		get
		{
			return this._LogUrbanBroadCasts1;
		}
		set
		{
			this._LogUrbanBroadCasts1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_ApplicationDeepLink", Storage="_ApplicationDeepLinks", ThisKey="AppId", OtherKey="AppId")]
	public EntitySet<ApplicationDeepLink> ApplicationDeepLinks
	{
		get
		{
			return this._ApplicationDeepLinks;
		}
		set
		{
			this._ApplicationDeepLinks.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_ApplicationParameter", Storage="_ApplicationParameters", ThisKey="AppId", OtherKey="AppId")]
	public EntitySet<ApplicationParameter> ApplicationParameters
	{
		get
		{
			return this._ApplicationParameters;
		}
		set
		{
			this._ApplicationParameters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_ApplicationParameterVersion", Storage="_tblApplicationParameterVersions", ThisKey="AppId", OtherKey="AppId")]
	public EntitySet<ApplicationParameterVersion> tblApplicationParameterVersions
	{
		get
		{
			return this._tblApplicationParameterVersions;
		}
		set
		{
			this._tblApplicationParameterVersions.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_ApplicationParameterVersion1", Storage="_ApplicationParameterVersions", ThisKey="AppId", OtherKey="AppId")]
	public EntitySet<ApplicationParameterVersion> ApplicationParameterVersions
	{
		get
		{
			return this._ApplicationParameterVersions;
		}
		set
		{
			this._ApplicationParameterVersions.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_ApplicationPush", Storage="_ApplicationPushes", ThisKey="AppId", OtherKey="AppId")]
	public EntitySet<ApplicationPush> ApplicationPushes
	{
		get
		{
			return this._ApplicationPushes;
		}
		set
		{
			this._ApplicationPushes.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_ApplicationText", Storage="_ApplicationTexts", ThisKey="AppId", OtherKey="AppId")]
	public EntitySet<ApplicationText> ApplicationTexts
	{
		get
		{
			return this._ApplicationTexts;
		}
		set
		{
			this._ApplicationTexts.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_ApplicationTextVersion", Storage="_ApplicationTextVersions", ThisKey="AppId", OtherKey="AppId")]
	public EntitySet<ApplicationTextVersion> ApplicationTextVersions
	{
		get
		{
			return this._ApplicationTextVersions;
		}
		set
		{
			this._ApplicationTextVersions.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_ApplicationVersion", Storage="_ApplicationVersions", ThisKey="AppId", OtherKey="AppId")]
	public EntitySet<ApplicationVersion> ApplicationVersions
	{
		get
		{
			return this._ApplicationVersions;
		}
		set
		{
			this._ApplicationVersions.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_OTP_V2", Storage="_tblOTP_V2s", ThisKey="AppId", OtherKey="AppId")]
	public EntitySet<OTP_V2> OTP_V2s
	{
		get
		{
			return this._tblOTP_V2s;
		}
		set
		{
			this._tblOTP_V2s.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_OTPMessage", Storage="_OTPMessages", ThisKey="AppId", OtherKey="AppId")]
	public EntitySet<OTPMessage> OTPMessages
	{
		get
		{
			return this._OTPMessages;
		}
		set
		{
			this._OTPMessages.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_Splash", Storage="_Splashes", ThisKey="AppId", OtherKey="AppId")]
	public EntitySet<Splash> Splashes
	{
		get
		{
			return this._Splashes;
		}
		set
		{
			this._Splashes.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_UtilitiesLog", Storage="_UtilitiesLogs", ThisKey="AppId", OtherKey="AppId")]
	public EntitySet<UtilitiesLog> UtilitiesLogs
	{
		get
		{
			return this._UtilitiesLogs;
		}
		set
		{
			this._UtilitiesLogs.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_Capability_SMS", Storage="_ApplicationCapability_SMS", ThisKey="AppId", OtherKey="AppID")]
	public EntitySet<Capability_SMS> Capability_SMS
	{
		get
		{
			return this._ApplicationCapability_SMS;
		}
		set
		{
			this._ApplicationCapability_SMS.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_Capability_OTP", Storage="_ApplicationCapability_OTPs", ThisKey="AppId", OtherKey="AppID")]
	public EntitySet<Capability_OTP> Capability_OTPs
	{
		get
		{
			return this._ApplicationCapability_OTPs;
		}
		set
		{
			this._ApplicationCapability_OTPs.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_Capability_Barcode", Storage="_ApplicationCapability_Barcodes", ThisKey="AppId", OtherKey="AppID")]
	public EntitySet<Capability_Barcode> Capability_Barcodes
	{
		get
		{
			return this._ApplicationCapability_Barcodes;
		}
		set
		{
			this._ApplicationCapability_Barcodes.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_Capability_EmailToUser", Storage="_ApplicationCapability_EmailToUsers", ThisKey="AppId", OtherKey="AppID")]
	public EntitySet<Capability_EmailToUser> Capability_EmailToUsers
	{
		get
		{
			return this._ApplicationCapability_EmailToUsers;
		}
		set
		{
			this._ApplicationCapability_EmailToUsers.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_Capability_EmailToVendor", Storage="_ApplicationCapability_EmailToVendors", ThisKey="AppId", OtherKey="AppID")]
	public EntitySet<Capability_EmailToVendor> Capability_EmailToVendors
	{
		get
		{
			return this._ApplicationCapability_EmailToVendors;
		}
		set
		{
			this._ApplicationCapability_EmailToVendors.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_Capability_ImageUpload", Storage="_ApplicationCapability_ImageUploads", ThisKey="AppId", OtherKey="AppID")]
	public EntitySet<Capability_ImageUpload> Capability_ImageUploads
	{
		get
		{
			return this._ApplicationCapability_ImageUploads;
		}
		set
		{
			this._ApplicationCapability_ImageUploads.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_Capability_OTPView", Storage="_ApplicationCapability_OTPViews", ThisKey="AppId", OtherKey="AppID")]
	public EntitySet<Capability_OTPView> Capability_OTPViews
	{
		get
		{
			return this._ApplicationCapability_OTPViews;
		}
		set
		{
			this._ApplicationCapability_OTPViews.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Application_Device_Tokens(Application_Device_Token entity)
	{
		this.SendPropertyChanging();
		entity.Application = this;
	}
	
	private void detach_Application_Device_Tokens(Application_Device_Token entity)
	{
		this.SendPropertyChanging();
		entity.Application = null;
	}
	
	private void attach_ImageUploads(ImageUpload entity)
	{
		this.SendPropertyChanging();
		entity.Application = this;
	}
	
	private void detach_ImageUploads(ImageUpload entity)
	{
		this.SendPropertyChanging();
		entity.Application = null;
	}
	
	private void attach_Logs(Log entity)
	{
		this.SendPropertyChanging();
		entity.Application = this;
	}
	
	private void detach_Logs(Log entity)
	{
		this.SendPropertyChanging();
		entity.Application = null;
	}
	
	private void attach_LogPushes(LogPush entity)
	{
		this.SendPropertyChanging();
		entity.Application = this;
	}
	
	private void detach_LogPushes(LogPush entity)
	{
		this.SendPropertyChanging();
		entity.Application = null;
	}
	
	private void attach_LogSendings(LogSending entity)
	{
		this.SendPropertyChanging();
		entity.Application = this;
	}
	
	private void detach_LogSendings(LogSending entity)
	{
		this.SendPropertyChanging();
		entity.Application = null;
	}
	
	private void attach_LogSending_Viewers(LogSending_Viewer entity)
	{
		this.SendPropertyChanging();
		entity.Application = this;
	}
	
	private void detach_LogSending_Viewers(LogSending_Viewer entity)
	{
		this.SendPropertyChanging();
		entity.Application = null;
	}
	
	private void attach_LogUrbanBroadCasts(LogUrbanBroadCast entity)
	{
		this.SendPropertyChanging();
		entity.Application = this;
	}
	
	private void detach_LogUrbanBroadCasts(LogUrbanBroadCast entity)
	{
		this.SendPropertyChanging();
		entity.Application = null;
	}
	
	private void attach_LogUrbanBroadCasts1(LogUrbanBroadCast entity)
	{
		this.SendPropertyChanging();
		entity.Application1 = this;
	}
	
	private void detach_LogUrbanBroadCasts1(LogUrbanBroadCast entity)
	{
		this.SendPropertyChanging();
		entity.Application1 = null;
	}
	
	private void attach_ApplicationDeepLinks(ApplicationDeepLink entity)
	{
		this.SendPropertyChanging();
		entity.Application = this;
	}
	
	private void detach_ApplicationDeepLinks(ApplicationDeepLink entity)
	{
		this.SendPropertyChanging();
		entity.Application = null;
	}
	
	private void attach_ApplicationParameters(ApplicationParameter entity)
	{
		this.SendPropertyChanging();
		entity.Application = this;
	}
	
	private void detach_ApplicationParameters(ApplicationParameter entity)
	{
		this.SendPropertyChanging();
		entity.Application = null;
	}
	
	private void attach_tblApplicationParameterVersions(ApplicationParameterVersion entity)
	{
		this.SendPropertyChanging();
		entity.Application = this;
	}
	
	private void detach_tblApplicationParameterVersions(ApplicationParameterVersion entity)
	{
		this.SendPropertyChanging();
		entity.Application = null;
	}
	
	private void attach_ApplicationParameterVersions(ApplicationParameterVersion entity)
	{
		this.SendPropertyChanging();
		entity.Application1 = this;
	}
	
	private void detach_ApplicationParameterVersions(ApplicationParameterVersion entity)
	{
		this.SendPropertyChanging();
		entity.Application1 = null;
	}
	
	private void attach_ApplicationPushes(ApplicationPush entity)
	{
		this.SendPropertyChanging();
		entity.Application = this;
	}
	
	private void detach_ApplicationPushes(ApplicationPush entity)
	{
		this.SendPropertyChanging();
		entity.Application = null;
	}
	
	private void attach_ApplicationTexts(ApplicationText entity)
	{
		this.SendPropertyChanging();
		entity.Application = this;
	}
	
	private void detach_ApplicationTexts(ApplicationText entity)
	{
		this.SendPropertyChanging();
		entity.Application = null;
	}
	
	private void attach_ApplicationTextVersions(ApplicationTextVersion entity)
	{
		this.SendPropertyChanging();
		entity.Application = this;
	}
	
	private void detach_ApplicationTextVersions(ApplicationTextVersion entity)
	{
		this.SendPropertyChanging();
		entity.Application = null;
	}
	
	private void attach_ApplicationVersions(ApplicationVersion entity)
	{
		this.SendPropertyChanging();
		entity.Application = this;
	}
	
	private void detach_ApplicationVersions(ApplicationVersion entity)
	{
		this.SendPropertyChanging();
		entity.Application = null;
	}
	
	private void attach_tblOTP_V2s(OTP_V2 entity)
	{
		this.SendPropertyChanging();
		entity.Application = this;
	}
	
	private void detach_tblOTP_V2s(OTP_V2 entity)
	{
		this.SendPropertyChanging();
		entity.Application = null;
	}
	
	private void attach_OTPMessages(OTPMessage entity)
	{
		this.SendPropertyChanging();
		entity.Application = this;
	}
	
	private void detach_OTPMessages(OTPMessage entity)
	{
		this.SendPropertyChanging();
		entity.Application = null;
	}
	
	private void attach_Splashes(Splash entity)
	{
		this.SendPropertyChanging();
		entity.Application = this;
	}
	
	private void detach_Splashes(Splash entity)
	{
		this.SendPropertyChanging();
		entity.Application = null;
	}
	
	private void attach_UtilitiesLogs(UtilitiesLog entity)
	{
		this.SendPropertyChanging();
		entity.Application = this;
	}
	
	private void detach_UtilitiesLogs(UtilitiesLog entity)
	{
		this.SendPropertyChanging();
		entity.Application = null;
	}
	
	private void attach_ApplicationCapability_SMS(Capability_SMS entity)
	{
		this.SendPropertyChanging();
		entity.Application = this;
	}
	
	private void detach_ApplicationCapability_SMS(Capability_SMS entity)
	{
		this.SendPropertyChanging();
		entity.Application = null;
	}
	
	private void attach_ApplicationCapability_OTPs(Capability_OTP entity)
	{
		this.SendPropertyChanging();
		entity.Application = this;
	}
	
	private void detach_ApplicationCapability_OTPs(Capability_OTP entity)
	{
		this.SendPropertyChanging();
		entity.Application = null;
	}
	
	private void attach_ApplicationCapability_Barcodes(Capability_Barcode entity)
	{
		this.SendPropertyChanging();
		entity.Application = this;
	}
	
	private void detach_ApplicationCapability_Barcodes(Capability_Barcode entity)
	{
		this.SendPropertyChanging();
		entity.Application = null;
	}
	
	private void attach_ApplicationCapability_EmailToUsers(Capability_EmailToUser entity)
	{
		this.SendPropertyChanging();
		entity.Application = this;
	}
	
	private void detach_ApplicationCapability_EmailToUsers(Capability_EmailToUser entity)
	{
		this.SendPropertyChanging();
		entity.Application = null;
	}
	
	private void attach_ApplicationCapability_EmailToVendors(Capability_EmailToVendor entity)
	{
		this.SendPropertyChanging();
		entity.Application = this;
	}
	
	private void detach_ApplicationCapability_EmailToVendors(Capability_EmailToVendor entity)
	{
		this.SendPropertyChanging();
		entity.Application = null;
	}
	
	private void attach_ApplicationCapability_ImageUploads(Capability_ImageUpload entity)
	{
		this.SendPropertyChanging();
		entity.Application = this;
	}
	
	private void detach_ApplicationCapability_ImageUploads(Capability_ImageUpload entity)
	{
		this.SendPropertyChanging();
		entity.Application = null;
	}
	
	private void attach_ApplicationCapability_OTPViews(Capability_OTPView entity)
	{
		this.SendPropertyChanging();
		entity.Application = this;
	}
	
	private void detach_ApplicationCapability_OTPViews(Capability_OTPView entity)
	{
		this.SendPropertyChanging();
		entity.Application = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblApplicationDeepLink")]
public partial class ApplicationDeepLink : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private int _AppId;
	
	private string _DeepLinkUrl;
	
	private string _Description;
	
	private EntityRef<Application> _Application;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAppIdChanging(int value);
    partial void OnAppIdChanged();
    partial void OnDeepLinkUrlChanging(string value);
    partial void OnDeepLinkUrlChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
	
	public ApplicationDeepLink()
	{
		this._Application = default(EntityRef<Application>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppId", DbType="Int NOT NULL")]
	public int AppId
	{
		get
		{
			return this._AppId;
		}
		set
		{
			if ((this._AppId != value))
			{
				if (this._Application.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAppIdChanging(value);
				this.SendPropertyChanging();
				this._AppId = value;
				this.SendPropertyChanged("AppId");
				this.OnAppIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeepLinkUrl", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
	public string DeepLinkUrl
	{
		get
		{
			return this._DeepLinkUrl;
		}
		set
		{
			if ((this._DeepLinkUrl != value))
			{
				this.OnDeepLinkUrlChanging(value);
				this.SendPropertyChanging();
				this._DeepLinkUrl = value;
				this.SendPropertyChanged("DeepLinkUrl");
				this.OnDeepLinkUrlChanged();
			}
		}
	}
    [FilterUIHint("Search")]
    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(200)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_ApplicationDeepLink", Storage="_Application", ThisKey="AppId", OtherKey="AppId", IsForeignKey=true)]
	public Application Application
	{
		get
		{
			return this._Application.Entity;
		}
		set
		{
			Application previousValue = this._Application.Entity;
			if (((previousValue != value) 
						|| (this._Application.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Application.Entity = null;
					previousValue.ApplicationDeepLinks.Remove(this);
				}
				this._Application.Entity = value;
				if ((value != null))
				{
					value.ApplicationDeepLinks.Add(this);
					this._AppId = value.AppId;
				}
				else
				{
					this._AppId = default(int);
				}
				this.SendPropertyChanged("Application");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblApplicationDeviceToken")]
public partial class ApplicationDeviceToken : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _AppKey;
	
	private string _Udid;
	
	private string _UserAppIdentifier;
	
	private string _PushToken;
	
	private System.Nullable<System.DateTime> _InsertDate;
	
	private System.Nullable<System.DateTime> _UpdateDate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAppKeyChanging(string value);
    partial void OnAppKeyChanged();
    partial void OnUdidChanging(string value);
    partial void OnUdidChanged();
    partial void OnUserAppIdentifierChanging(string value);
    partial void OnUserAppIdentifierChanged();
    partial void OnPushTokenChanging(string value);
    partial void OnPushTokenChanged();
    partial void OnInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertDateChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    #endregion
	
	public ApplicationDeviceToken()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppKey", DbType="NVarChar(100)")]
	public string AppKey
	{
		get
		{
			return this._AppKey;
		}
		set
		{
			if ((this._AppKey != value))
			{
				this.OnAppKeyChanging(value);
				this.SendPropertyChanging();
				this._AppKey = value;
				this.SendPropertyChanged("AppKey");
				this.OnAppKeyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Udid", DbType="NVarChar(100)")]
	public string Udid
	{
		get
		{
			return this._Udid;
		}
		set
		{
			if ((this._Udid != value))
			{
				this.OnUdidChanging(value);
				this.SendPropertyChanging();
				this._Udid = value;
				this.SendPropertyChanged("Udid");
				this.OnUdidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAppIdentifier", DbType="NVarChar(100)")]
	public string UserAppIdentifier
	{
		get
		{
			return this._UserAppIdentifier;
		}
		set
		{
			if ((this._UserAppIdentifier != value))
			{
				this.OnUserAppIdentifierChanging(value);
				this.SendPropertyChanging();
				this._UserAppIdentifier = value;
				this.SendPropertyChanged("UserAppIdentifier");
				this.OnUserAppIdentifierChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PushToken", DbType="NVarChar(100)")]
	public string PushToken
	{
		get
		{
			return this._PushToken;
		}
		set
		{
			if ((this._PushToken != value))
			{
				this.OnPushTokenChanging(value);
				this.SendPropertyChanging();
				this._PushToken = value;
				this.SendPropertyChanged("PushToken");
				this.OnPushTokenChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> InsertDate
	{
		get
		{
			return this._InsertDate;
		}
		set
		{
			if ((this._InsertDate != value))
			{
				this.OnInsertDateChanging(value);
				this.SendPropertyChanging();
				this._InsertDate = value;
				this.SendPropertyChanged("InsertDate");
				this.OnInsertDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> UpdateDate
	{
		get
		{
			return this._UpdateDate;
		}
		set
		{
			if ((this._UpdateDate != value))
			{
				this.OnUpdateDateChanging(value);
				this.SendPropertyChanging();
				this._UpdateDate = value;
				this.SendPropertyChanged("UpdateDate");
				this.OnUpdateDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblApplicationParameter")]
public partial class ApplicationParameter : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private System.Nullable<int> _AppId;
	
	private string _ParameterName;
	
	private string _Value;
	
	private string _Description;
	
	private System.Nullable<System.DateTime> _InsertDate;
	
	private System.Nullable<System.DateTime> _UpdateDate;
	
	private System.Nullable<int> _LangId;
	
	private EntityRef<Application> _Application;
	
	private EntityRef<Language> _tblLanguage;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAppIdChanging(System.Nullable<int> value);
    partial void OnAppIdChanged();
    partial void OnParameterNameChanging(string value);
    partial void OnParameterNameChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertDateChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnLangIdChanging(System.Nullable<int> value);
    partial void OnLangIdChanged();
    #endregion
	
	public ApplicationParameter()
	{
		this._Application = default(EntityRef<Application>);
		this._tblLanguage = default(EntityRef<Language>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppId", DbType="Int")]
	public System.Nullable<int> AppId
	{
		get
		{
			return this._AppId;
		}
		set
		{
			if ((this._AppId != value))
			{
				if (this._Application.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAppIdChanging(value);
				this.SendPropertyChanging();
				this._AppId = value;
				this.SendPropertyChanged("AppId");
				this.OnAppIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParameterName", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
	public string ParameterName
	{
		get
		{
			return this._ParameterName;
		}
		set
		{
			if ((this._ParameterName != value))
			{
				this.OnParameterNameChanging(value);
				this.SendPropertyChanging();
				this._ParameterName = value;
				this.SendPropertyChanged("ParameterName");
				this.OnParameterNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(100)")]
	public string Value
	{
		get
		{
			return this._Value;
		}
		set
		{
			if ((this._Value != value))
			{
				this.OnValueChanging(value);
				this.SendPropertyChanging();
				this._Value = value;
				this.SendPropertyChanged("Value");
				this.OnValueChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> InsertDate
	{
		get
		{
			return this._InsertDate;
		}
		set
		{
			if ((this._InsertDate != value))
			{
				this.OnInsertDateChanging(value);
				this.SendPropertyChanging();
				this._InsertDate = value;
				this.SendPropertyChanged("InsertDate");
				this.OnInsertDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> UpdateDate
	{
		get
		{
			return this._UpdateDate;
		}
		set
		{
			if ((this._UpdateDate != value))
			{
				this.OnUpdateDateChanging(value);
				this.SendPropertyChanging();
				this._UpdateDate = value;
				this.SendPropertyChanged("UpdateDate");
				this.OnUpdateDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LangId", DbType="Int")]
	public System.Nullable<int> LangId
	{
		get
		{
			return this._LangId;
		}
		set
		{
			if ((this._LangId != value))
			{
				if (this._tblLanguage.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnLangIdChanging(value);
				this.SendPropertyChanging();
				this._LangId = value;
				this.SendPropertyChanged("LangId");
				this.OnLangIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_ApplicationParameter", Storage="_Application", ThisKey="AppId", OtherKey="AppId", IsForeignKey=true)]
	public Application Application
	{
		get
		{
			return this._Application.Entity;
		}
		set
		{
			Application previousValue = this._Application.Entity;
			if (((previousValue != value) 
						|| (this._Application.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Application.Entity = null;
					previousValue.ApplicationParameters.Remove(this);
				}
				this._Application.Entity = value;
				if ((value != null))
				{
					value.ApplicationParameters.Add(this);
					this._AppId = value.AppId;
				}
				else
				{
					this._AppId = default(Nullable<int>);
				}
				this.SendPropertyChanged("Application");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_ApplicationParameter", Storage="_tblLanguage", ThisKey="LangId", OtherKey="Id", IsForeignKey=true)]
	public Language Language
	{
		get
		{
			return this._tblLanguage.Entity;
		}
		set
		{
			Language previousValue = this._tblLanguage.Entity;
			if (((previousValue != value) 
						|| (this._tblLanguage.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tblLanguage.Entity = null;
					previousValue.ApplicationParameters.Remove(this);
				}
				this._tblLanguage.Entity = value;
				if ((value != null))
				{
					value.ApplicationParameters.Add(this);
					this._LangId = value.Id;
				}
				else
				{
					this._LangId = default(Nullable<int>);
				}
				this.SendPropertyChanged("Language");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblApplicationParameterVersion")]
public partial class ApplicationParameterVersion : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _VersionId;
	
	private int _AppId;
	
	private System.Nullable<System.DateTime> _UpdateDate;
	
	private EntityRef<Application> _Application;
	
	private EntityRef<Application> _Application1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVersionIdChanging(int value);
    partial void OnVersionIdChanged();
    partial void OnAppIdChanging(int value);
    partial void OnAppIdChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    #endregion
	
	public ApplicationParameterVersion()
	{
		this._Application = default(EntityRef<Application>);
		this._Application1 = default(EntityRef<Application>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionId", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int VersionId
	{
		get
		{
			return this._VersionId;
		}
		set
		{
			if ((this._VersionId != value))
			{
				this.OnVersionIdChanging(value);
				this.SendPropertyChanging();
				this._VersionId = value;
				this.SendPropertyChanged("VersionId");
				this.OnVersionIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppId", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int AppId
	{
		get
		{
			return this._AppId;
		}
		set
		{
			if ((this._AppId != value))
			{
				if ((this._Application.HasLoadedOrAssignedValue || this._Application1.HasLoadedOrAssignedValue))
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAppIdChanging(value);
				this.SendPropertyChanging();
				this._AppId = value;
				this.SendPropertyChanged("AppId");
				this.OnAppIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> UpdateDate
	{
		get
		{
			return this._UpdateDate;
		}
		set
		{
			if ((this._UpdateDate != value))
			{
				this.OnUpdateDateChanging(value);
				this.SendPropertyChanging();
				this._UpdateDate = value;
				this.SendPropertyChanged("UpdateDate");
				this.OnUpdateDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_ApplicationParameterVersion", Storage="_Application", ThisKey="AppId", OtherKey="AppId", IsForeignKey=true)]
	public Application Application
	{
		get
		{
			return this._Application.Entity;
		}
		set
		{
			Application previousValue = this._Application.Entity;
			if (((previousValue != value) 
						|| (this._Application.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Application.Entity = null;
					previousValue.tblApplicationParameterVersions.Remove(this);
				}
				this._Application.Entity = value;
				if ((value != null))
				{
					value.tblApplicationParameterVersions.Add(this);
					this._AppId = value.AppId;
				}
				else
				{
					this._AppId = default(int);
				}
				this.SendPropertyChanged("Application");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_ApplicationParameterVersion1", Storage="_Application1", ThisKey="AppId", OtherKey="AppId", IsForeignKey=true)]
	public Application Application1
	{
		get
		{
			return this._Application1.Entity;
		}
		set
		{
			Application previousValue = this._Application1.Entity;
			if (((previousValue != value) 
						|| (this._Application1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Application1.Entity = null;
					previousValue.ApplicationParameterVersions.Remove(this);
				}
				this._Application1.Entity = value;
				if ((value != null))
				{
					value.ApplicationParameterVersions.Add(this);
					this._AppId = value.AppId;
				}
				else
				{
					this._AppId = default(int);
				}
				this.SendPropertyChanged("Application1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblApplicationPush")]
public partial class ApplicationPush : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private int _AppId;
	
	private string _PushApplicationToken;
	
	private string _PushApplicationSecret;
	
	private string _PushApplicationMasterSecret;
	
	private System.Nullable<System.DateTime> _InsertDate;
	
	private System.Nullable<System.DateTime> _UpdateDate;
	
	private bool _PushEnabled;
	
	private EntityRef<Application> _Application;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAppIdChanging(int value);
    partial void OnAppIdChanged();
    partial void OnPushApplicationTokenChanging(string value);
    partial void OnPushApplicationTokenChanged();
    partial void OnPushApplicationSecretChanging(string value);
    partial void OnPushApplicationSecretChanged();
    partial void OnPushApplicationMasterSecretChanging(string value);
    partial void OnPushApplicationMasterSecretChanged();
    partial void OnInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertDateChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnPushEnabledChanging(bool value);
    partial void OnPushEnabledChanged();
    #endregion
	
	public ApplicationPush()
	{
		this._Application = default(EntityRef<Application>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppId", DbType="Int NOT NULL")]
	public int AppId
	{
		get
		{
			return this._AppId;
		}
		set
		{
			if ((this._AppId != value))
			{
				if (this._Application.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAppIdChanging(value);
				this.SendPropertyChanging();
				this._AppId = value;
				this.SendPropertyChanged("AppId");
				this.OnAppIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PushApplicationToken", DbType="NVarChar(100)")]
	public string PushApplicationToken
	{
		get
		{
			return this._PushApplicationToken;
		}
		set
		{
			if ((this._PushApplicationToken != value))
			{
				this.OnPushApplicationTokenChanging(value);
				this.SendPropertyChanging();
				this._PushApplicationToken = value;
				this.SendPropertyChanged("PushApplicationToken");
				this.OnPushApplicationTokenChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PushApplicationSecret", DbType="NVarChar(100)")]
	public string PushApplicationSecret
	{
		get
		{
			return this._PushApplicationSecret;
		}
		set
		{
			if ((this._PushApplicationSecret != value))
			{
				this.OnPushApplicationSecretChanging(value);
				this.SendPropertyChanging();
				this._PushApplicationSecret = value;
				this.SendPropertyChanged("PushApplicationSecret");
				this.OnPushApplicationSecretChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PushApplicationMasterSecret", DbType="NVarChar(100)")]
	public string PushApplicationMasterSecret
	{
		get
		{
			return this._PushApplicationMasterSecret;
		}
		set
		{
			if ((this._PushApplicationMasterSecret != value))
			{
				this.OnPushApplicationMasterSecretChanging(value);
				this.SendPropertyChanging();
				this._PushApplicationMasterSecret = value;
				this.SendPropertyChanged("PushApplicationMasterSecret");
				this.OnPushApplicationMasterSecretChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> InsertDate
	{
		get
		{
			return this._InsertDate;
		}
		set
		{
			if ((this._InsertDate != value))
			{
				this.OnInsertDateChanging(value);
				this.SendPropertyChanging();
				this._InsertDate = value;
				this.SendPropertyChanged("InsertDate");
				this.OnInsertDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> UpdateDate
	{
		get
		{
			return this._UpdateDate;
		}
		set
		{
			if ((this._UpdateDate != value))
			{
				this.OnUpdateDateChanging(value);
				this.SendPropertyChanging();
				this._UpdateDate = value;
				this.SendPropertyChanged("UpdateDate");
				this.OnUpdateDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PushEnabled", DbType="Bit NOT NULL")]
	public bool PushEnabled
	{
		get
		{
			return this._PushEnabled;
		}
		set
		{
			if ((this._PushEnabled != value))
			{
				this.OnPushEnabledChanging(value);
				this.SendPropertyChanging();
				this._PushEnabled = value;
				this.SendPropertyChanged("PushEnabled");
				this.OnPushEnabledChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_ApplicationPush", Storage="_Application", ThisKey="AppId", OtherKey="AppId", IsForeignKey=true)]
	public Application Application
	{
		get
		{
			return this._Application.Entity;
		}
		set
		{
			Application previousValue = this._Application.Entity;
			if (((previousValue != value) 
						|| (this._Application.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Application.Entity = null;
					previousValue.ApplicationPushes.Remove(this);
				}
				this._Application.Entity = value;
				if ((value != null))
				{
					value.ApplicationPushes.Add(this);
					this._AppId = value.AppId;
				}
				else
				{
					this._AppId = default(int);
				}
				this.SendPropertyChanged("Application");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblApplicationText")]
public partial class ApplicationText : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private System.Nullable<int> _AppId;
	
	private string _ParameterName;
	
	private string _Value;
	
	private string _Description;
	
	private int _LangId;
	
	private System.Nullable<System.DateTime> _InsertDate;
	
	private System.Nullable<System.DateTime> _UpdateDate;
	
	private EntityRef<Application> _Application;
	
	private EntityRef<Language> _tblLanguage;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAppIdChanging(System.Nullable<int> value);
    partial void OnAppIdChanged();
    partial void OnParameterNameChanging(string value);
    partial void OnParameterNameChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnLangIdChanging(int value);
    partial void OnLangIdChanged();
    partial void OnInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertDateChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    #endregion
	
	public ApplicationText()
	{
		this._Application = default(EntityRef<Application>);
		this._tblLanguage = default(EntityRef<Language>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppId", DbType="Int")]
	public System.Nullable<int> AppId
	{
		get
		{
			return this._AppId;
		}
		set
		{
			if ((this._AppId != value))
			{
				if (this._Application.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAppIdChanging(value);
				this.SendPropertyChanging();
				this._AppId = value;
				this.SendPropertyChanged("AppId");
				this.OnAppIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParameterName", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
	public string ParameterName
	{
		get
		{
			return this._ParameterName;
		}
		set
		{
			if ((this._ParameterName != value))
			{
				this.OnParameterNameChanging(value);
				this.SendPropertyChanging();
				this._ParameterName = value;
				this.SendPropertyChanged("ParameterName");
				this.OnParameterNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(100)")]
	public string Value
	{
		get
		{
			return this._Value;
		}
		set
		{
			if ((this._Value != value))
			{
				this.OnValueChanging(value);
				this.SendPropertyChanging();
				this._Value = value;
				this.SendPropertyChanged("Value");
				this.OnValueChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LangId", DbType="Int NOT NULL")]
	public int LangId
	{
		get
		{
			return this._LangId;
		}
		set
		{
			if ((this._LangId != value))
			{
				if (this._tblLanguage.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnLangIdChanging(value);
				this.SendPropertyChanging();
				this._LangId = value;
				this.SendPropertyChanged("LangId");
				this.OnLangIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> InsertDate
	{
		get
		{
			return this._InsertDate;
		}
		set
		{
			if ((this._InsertDate != value))
			{
				this.OnInsertDateChanging(value);
				this.SendPropertyChanging();
				this._InsertDate = value;
				this.SendPropertyChanged("InsertDate");
				this.OnInsertDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> UpdateDate
	{
		get
		{
			return this._UpdateDate;
		}
		set
		{
			if ((this._UpdateDate != value))
			{
				this.OnUpdateDateChanging(value);
				this.SendPropertyChanging();
				this._UpdateDate = value;
				this.SendPropertyChanged("UpdateDate");
				this.OnUpdateDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_ApplicationText", Storage="_Application", ThisKey="AppId", OtherKey="AppId", IsForeignKey=true)]
	public Application Application
	{
		get
		{
			return this._Application.Entity;
		}
		set
		{
			Application previousValue = this._Application.Entity;
			if (((previousValue != value) 
						|| (this._Application.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Application.Entity = null;
					previousValue.ApplicationTexts.Remove(this);
				}
				this._Application.Entity = value;
				if ((value != null))
				{
					value.ApplicationTexts.Add(this);
					this._AppId = value.AppId;
				}
				else
				{
					this._AppId = default(Nullable<int>);
				}
				this.SendPropertyChanged("Application");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_ApplicationText", Storage="_tblLanguage", ThisKey="LangId", OtherKey="Id", IsForeignKey=true)]
	public Language Language
	{
		get
		{
			return this._tblLanguage.Entity;
		}
		set
		{
			Language previousValue = this._tblLanguage.Entity;
			if (((previousValue != value) 
						|| (this._tblLanguage.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tblLanguage.Entity = null;
					previousValue.ApplicationTexts.Remove(this);
				}
				this._tblLanguage.Entity = value;
				if ((value != null))
				{
					value.ApplicationTexts.Add(this);
					this._LangId = value.Id;
				}
				else
				{
					this._LangId = default(int);
				}
				this.SendPropertyChanged("Language");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblApplicationTextVersion")]
public partial class ApplicationTextVersion : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _VersionId;
	
	private int _AppId;
	
	private System.Nullable<System.DateTime> _UpdateDate;
	
	private EntityRef<Application> _Application;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVersionIdChanging(int value);
    partial void OnVersionIdChanged();
    partial void OnAppIdChanging(int value);
    partial void OnAppIdChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    #endregion
	
	public ApplicationTextVersion()
	{
		this._Application = default(EntityRef<Application>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionId", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int VersionId
	{
		get
		{
			return this._VersionId;
		}
		set
		{
			if ((this._VersionId != value))
			{
				this.OnVersionIdChanging(value);
				this.SendPropertyChanging();
				this._VersionId = value;
				this.SendPropertyChanged("VersionId");
				this.OnVersionIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppId", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int AppId
	{
		get
		{
			return this._AppId;
		}
		set
		{
			if ((this._AppId != value))
			{
				if (this._Application.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAppIdChanging(value);
				this.SendPropertyChanging();
				this._AppId = value;
				this.SendPropertyChanged("AppId");
				this.OnAppIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> UpdateDate
	{
		get
		{
			return this._UpdateDate;
		}
		set
		{
			if ((this._UpdateDate != value))
			{
				this.OnUpdateDateChanging(value);
				this.SendPropertyChanging();
				this._UpdateDate = value;
				this.SendPropertyChanged("UpdateDate");
				this.OnUpdateDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_ApplicationTextVersion", Storage="_Application", ThisKey="AppId", OtherKey="AppId", IsForeignKey=true)]
	public Application Application
	{
		get
		{
			return this._Application.Entity;
		}
		set
		{
			Application previousValue = this._Application.Entity;
			if (((previousValue != value) 
						|| (this._Application.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Application.Entity = null;
					previousValue.ApplicationTextVersions.Remove(this);
				}
				this._Application.Entity = value;
				if ((value != null))
				{
					value.ApplicationTextVersions.Add(this);
					this._AppId = value.AppId;
				}
				else
				{
					this._AppId = default(int);
				}
				this.SendPropertyChanged("Application");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblApplicationVersion")]
public partial class ApplicationVersion : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _AppId;
	
	private int _PlatformType;
	
	private string _CurrentVersion;
	
	private System.Nullable<int> _UpdateStatus;
	
	private string _UpdateLink;
	
	private System.Nullable<System.DateTime> _InsertDate;
	
	private System.Nullable<System.DateTime> _UpdateDate;
	
	private string _UpdateMessage;
	
	private EntityRef<Application> _Application;
	
	private EntityRef<AppPlatformType> _AppPlatformType;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAppIdChanging(int value);
    partial void OnAppIdChanged();
    partial void OnPlatformTypeChanging(int value);
    partial void OnPlatformTypeChanged();
    partial void OnCurrentVersionChanging(string value);
    partial void OnCurrentVersionChanged();
    partial void OnUpdateStatusChanging(System.Nullable<int> value);
    partial void OnUpdateStatusChanged();
    partial void OnUpdateLinkChanging(string value);
    partial void OnUpdateLinkChanged();
    partial void OnInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertDateChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateMessageChanging(string value);
    partial void OnUpdateMessageChanged();
    #endregion
	
	public ApplicationVersion()
	{
		this._Application = default(EntityRef<Application>);
		this._AppPlatformType = default(EntityRef<AppPlatformType>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppId", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int AppId
	{
		get
		{
			return this._AppId;
		}
		set
		{
			if ((this._AppId != value))
			{
				if (this._Application.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAppIdChanging(value);
				this.SendPropertyChanging();
				this._AppId = value;
				this.SendPropertyChanged("AppId");
				this.OnAppIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlatformType", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int PlatformType
	{
		get
		{
			return this._PlatformType;
		}
		set
		{
			if ((this._PlatformType != value))
			{
				if (this._AppPlatformType.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnPlatformTypeChanging(value);
				this.SendPropertyChanging();
				this._PlatformType = value;
				this.SendPropertyChanged("PlatformType");
				this.OnPlatformTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentVersion", DbType="NVarChar(20)")]
	public string CurrentVersion
	{
		get
		{
			return this._CurrentVersion;
		}
		set
		{
			if ((this._CurrentVersion != value))
			{
				this.OnCurrentVersionChanging(value);
				this.SendPropertyChanging();
				this._CurrentVersion = value;
				this.SendPropertyChanged("CurrentVersion");
				this.OnCurrentVersionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateStatus", DbType="Int")]
	public System.Nullable<int> UpdateStatus
	{
		get
		{
			return this._UpdateStatus;
		}
		set
		{
			if ((this._UpdateStatus != value))
			{
				this.OnUpdateStatusChanging(value);
				this.SendPropertyChanging();
				this._UpdateStatus = value;
				this.SendPropertyChanged("UpdateStatus");
				this.OnUpdateStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateLink", DbType="NVarChar(1000)")]
	public string UpdateLink
	{
		get
		{
			return this._UpdateLink;
		}
		set
		{
			if ((this._UpdateLink != value))
			{
				this.OnUpdateLinkChanging(value);
				this.SendPropertyChanging();
				this._UpdateLink = value;
				this.SendPropertyChanged("UpdateLink");
				this.OnUpdateLinkChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> InsertDate
	{
		get
		{
			return this._InsertDate;
		}
		set
		{
			if ((this._InsertDate != value))
			{
				this.OnInsertDateChanging(value);
				this.SendPropertyChanging();
				this._InsertDate = value;
				this.SendPropertyChanged("InsertDate");
				this.OnInsertDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> UpdateDate
	{
		get
		{
			return this._UpdateDate;
		}
		set
		{
			if ((this._UpdateDate != value))
			{
				this.OnUpdateDateChanging(value);
				this.SendPropertyChanging();
				this._UpdateDate = value;
				this.SendPropertyChanged("UpdateDate");
				this.OnUpdateDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateMessage", DbType="NVarChar(1000)")]
	public string UpdateMessage
	{
		get
		{
			return this._UpdateMessage;
		}
		set
		{
			if ((this._UpdateMessage != value))
			{
				this.OnUpdateMessageChanging(value);
				this.SendPropertyChanging();
				this._UpdateMessage = value;
				this.SendPropertyChanged("UpdateMessage");
				this.OnUpdateMessageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_ApplicationVersion", Storage="_Application", ThisKey="AppId", OtherKey="AppId", IsForeignKey=true)]
	public Application Application
	{
		get
		{
			return this._Application.Entity;
		}
		set
		{
			Application previousValue = this._Application.Entity;
			if (((previousValue != value) 
						|| (this._Application.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Application.Entity = null;
					previousValue.ApplicationVersions.Remove(this);
				}
				this._Application.Entity = value;
				if ((value != null))
				{
					value.ApplicationVersions.Add(this);
					this._AppId = value.AppId;
				}
				else
				{
					this._AppId = default(int);
				}
				this.SendPropertyChanged("Application");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AppPlatformType_ApplicationVersion", Storage="_AppPlatformType", ThisKey="PlatformType", OtherKey="Id", IsForeignKey=true)]
	public AppPlatformType AppPlatformType
	{
		get
		{
			return this._AppPlatformType.Entity;
		}
		set
		{
			AppPlatformType previousValue = this._AppPlatformType.Entity;
			if (((previousValue != value) 
						|| (this._AppPlatformType.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._AppPlatformType.Entity = null;
					previousValue.ApplicationVersions.Remove(this);
				}
				this._AppPlatformType.Entity = value;
				if ((value != null))
				{
					value.ApplicationVersions.Add(this);
					this._PlatformType = value.Id;
				}
				else
				{
					this._PlatformType = default(int);
				}
				this.SendPropertyChanged("AppPlatformType");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblLanguage")]
public partial class Language : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _LanguageCode;
	
	private string _LanguageName;
	
	private EntitySet<ApplicationParameter> _ApplicationParameters;
	
	private EntitySet<ApplicationText> _ApplicationTexts;
	
	private EntitySet<Splash> _Splashes;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLanguageCodeChanging(string value);
    partial void OnLanguageCodeChanged();
    partial void OnLanguageNameChanging(string value);
    partial void OnLanguageNameChanged();
    #endregion
	
	public Language()
	{
		this._ApplicationParameters = new EntitySet<ApplicationParameter>(new Action<ApplicationParameter>(this.attach_ApplicationParameters), new Action<ApplicationParameter>(this.detach_ApplicationParameters));
		this._ApplicationTexts = new EntitySet<ApplicationText>(new Action<ApplicationText>(this.attach_ApplicationTexts), new Action<ApplicationText>(this.detach_ApplicationTexts));
		this._Splashes = new EntitySet<Splash>(new Action<Splash>(this.attach_Splashes), new Action<Splash>(this.detach_Splashes));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageCode", DbType="NVarChar(10)")]
	public string LanguageCode
	{
		get
		{
			return this._LanguageCode;
		}
		set
		{
			if ((this._LanguageCode != value))
			{
				this.OnLanguageCodeChanging(value);
				this.SendPropertyChanging();
				this._LanguageCode = value;
				this.SendPropertyChanged("LanguageCode");
				this.OnLanguageCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageName", DbType="NVarChar(20)")]
	public string LanguageName
	{
		get
		{
			return this._LanguageName;
		}
		set
		{
			if ((this._LanguageName != value))
			{
				this.OnLanguageNameChanging(value);
				this.SendPropertyChanging();
				this._LanguageName = value;
				this.SendPropertyChanged("LanguageName");
				this.OnLanguageNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_ApplicationParameter", Storage="_ApplicationParameters", ThisKey="Id", OtherKey="LangId")]
	public EntitySet<ApplicationParameter> ApplicationParameters
	{
		get
		{
			return this._ApplicationParameters;
		}
		set
		{
			this._ApplicationParameters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_ApplicationText", Storage="_ApplicationTexts", ThisKey="Id", OtherKey="LangId")]
	public EntitySet<ApplicationText> ApplicationTexts
	{
		get
		{
			return this._ApplicationTexts;
		}
		set
		{
			this._ApplicationTexts.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_Splash", Storage="_Splashes", ThisKey="Id", OtherKey="LangId")]
	public EntitySet<Splash> Splashes
	{
		get
		{
			return this._Splashes;
		}
		set
		{
			this._Splashes.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_ApplicationParameters(ApplicationParameter entity)
	{
		this.SendPropertyChanging();
		entity.Language = this;
	}
	
	private void detach_ApplicationParameters(ApplicationParameter entity)
	{
		this.SendPropertyChanging();
		entity.Language = null;
	}
	
	private void attach_ApplicationTexts(ApplicationText entity)
	{
		this.SendPropertyChanging();
		entity.Language = this;
	}
	
	private void detach_ApplicationTexts(ApplicationText entity)
	{
		this.SendPropertyChanging();
		entity.Language = null;
	}
	
	private void attach_Splashes(Splash entity)
	{
		this.SendPropertyChanging();
		entity.Language = this;
	}
	
	private void detach_Splashes(Splash entity)
	{
		this.SendPropertyChanging();
		entity.Language = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblOTP_V2")]
public partial class OTP_V2 : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _OTPId;
	
	private int _AppId;
	
	private string _TransactionId;
	
	private string _UserAgent;
	
	private string _OTPCode;
	
	private System.Nullable<System.DateTime> _InsertDate;
	
	private System.Nullable<System.DateTime> _ExpirationDate;
	
	private System.Nullable<System.DateTime> _VerificationDate;
	
	private string _Identifier;
	
	private string _PhoneNumber;
	
	private System.Nullable<int> _Tries;
	
	private System.Nullable<int> _Tried;
	
	private System.Nullable<int> _TodayCount;
	
	private bool _APICreated;
	
	private bool _APIValidated;
	
	private EntityRef<Application> _Application;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOTPIdChanging(int value);
    partial void OnOTPIdChanged();
    partial void OnAppIdChanging(int value);
    partial void OnAppIdChanged();
    partial void OnTransactionIdChanging(string value);
    partial void OnTransactionIdChanged();
    partial void OnUserAgentChanging(string value);
    partial void OnUserAgentChanged();
    partial void OnOTPCodeChanging(string value);
    partial void OnOTPCodeChanged();
    partial void OnInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertDateChanged();
    partial void OnExpirationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpirationDateChanged();
    partial void OnVerificationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnVerificationDateChanged();
    partial void OnIdentifierChanging(string value);
    partial void OnIdentifierChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnTriesChanging(System.Nullable<int> value);
    partial void OnTriesChanged();
    partial void OnTriedChanging(System.Nullable<int> value);
    partial void OnTriedChanged();
    partial void OnTodayCountChanging(System.Nullable<int> value);
    partial void OnTodayCountChanged();
    partial void OnAPICreatedChanging(bool value);
    partial void OnAPICreatedChanged();
    partial void OnAPIValidatedChanging(bool value);
    partial void OnAPIValidatedChanged();
    #endregion
	
	public OTP_V2()
	{
		this._Application = default(EntityRef<Application>);
		OnCreated();
	}
    [FilterUIHint("Int_Range")]
    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OTPId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int OTPId
	{
		get
		{
			return this._OTPId;
		}
		set
		{
			if ((this._OTPId != value))
			{
				this.OnOTPIdChanging(value);
				this.SendPropertyChanging();
				this._OTPId = value;
				this.SendPropertyChanged("OTPId");
				this.OnOTPIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppId", DbType="Int NOT NULL")]
	public int AppId
	{
		get
		{
			return this._AppId;
		}
		set
		{
			if ((this._AppId != value))
			{
				if (this._Application.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAppIdChanging(value);
				this.SendPropertyChanging();
				this._AppId = value;
				this.SendPropertyChanged("AppId");
				this.OnAppIdChanged();
			}
		}
	}
    [FilterUIHint("Search")]
    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionId", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
	public string TransactionId
	{
		get
		{
			return this._TransactionId;
		}
		set
		{
			if ((this._TransactionId != value))
			{
				this.OnTransactionIdChanging(value);
				this.SendPropertyChanging();
				this._TransactionId = value;
				this.SendPropertyChanged("TransactionId");
				this.OnTransactionIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAgent", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
	public string UserAgent
	{
		get
		{
			return this._UserAgent;
		}
		set
		{
			if ((this._UserAgent != value))
			{
				this.OnUserAgentChanging(value);
				this.SendPropertyChanging();
				this._UserAgent = value;
				this.SendPropertyChanged("UserAgent");
				this.OnUserAgentChanged();
			}
		}
	}
    [FilterUIHint("Search")]
    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OTPCode", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
	public string OTPCode
	{
		get
		{
			return this._OTPCode;
		}
		set
		{
			if ((this._OTPCode != value))
			{
				this.OnOTPCodeChanging(value);
				this.SendPropertyChanging();
				this._OTPCode = value;
				this.SendPropertyChanged("OTPCode");
				this.OnOTPCodeChanged();
			}
		}
	}
    [FilterUIHint("Date")]
    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> InsertDate
	{
		get
		{
			return this._InsertDate;
		}
		set
		{
			if ((this._InsertDate != value))
			{
				this.OnInsertDateChanging(value);
				this.SendPropertyChanging();
				this._InsertDate = value;
				this.SendPropertyChanged("InsertDate");
				this.OnInsertDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpirationDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> ExpirationDate
	{
		get
		{
			return this._ExpirationDate;
		}
		set
		{
			if ((this._ExpirationDate != value))
			{
				this.OnExpirationDateChanging(value);
				this.SendPropertyChanging();
				this._ExpirationDate = value;
				this.SendPropertyChanged("ExpirationDate");
				this.OnExpirationDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerificationDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> VerificationDate
	{
		get
		{
			return this._VerificationDate;
		}
		set
		{
			if ((this._VerificationDate != value))
			{
				this.OnVerificationDateChanging(value);
				this.SendPropertyChanging();
				this._VerificationDate = value;
				this.SendPropertyChanged("VerificationDate");
				this.OnVerificationDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Identifier", DbType="NVarChar(4000)")]
	public string Identifier
	{
		get
		{
			return this._Identifier;
		}
		set
		{
			if ((this._Identifier != value))
			{
				this.OnIdentifierChanging(value);
				this.SendPropertyChanging();
				this._Identifier = value;
				this.SendPropertyChanged("Identifier");
				this.OnIdentifierChanged();
			}
		}
	}
    [FilterUIHint("Search")]
    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(100)")]
	public string PhoneNumber
	{
		get
		{
			return this._PhoneNumber;
		}
		set
		{
			if ((this._PhoneNumber != value))
			{
				this.OnPhoneNumberChanging(value);
				this.SendPropertyChanging();
				this._PhoneNumber = value;
				this.SendPropertyChanged("PhoneNumber");
				this.OnPhoneNumberChanged();
			}
		}
	}
    [FilterUIHint("Int_Range")]
    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tries", DbType="Int")]
	public System.Nullable<int> Tries
	{
		get
		{
			return this._Tries;
		}
		set
		{
			if ((this._Tries != value))
			{
				this.OnTriesChanging(value);
				this.SendPropertyChanging();
				this._Tries = value;
				this.SendPropertyChanged("Tries");
				this.OnTriesChanged();
			}
		}
	}
    [FilterUIHint("Int_Range")]
    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tried", DbType="Int")]
	public System.Nullable<int> Tried
	{
		get
		{
			return this._Tried;
		}
		set
		{
			if ((this._Tried != value))
			{
				this.OnTriedChanging(value);
				this.SendPropertyChanging();
				this._Tried = value;
				this.SendPropertyChanged("Tried");
				this.OnTriedChanged();
			}
		}
	}
    [FilterUIHint("Int_Range")]
    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TodayCount", DbType="Int")]
	public System.Nullable<int> TodayCount
	{
		get
		{
			return this._TodayCount;
		}
		set
		{
			if ((this._TodayCount != value))
			{
				this.OnTodayCountChanging(value);
				this.SendPropertyChanging();
				this._TodayCount = value;
				this.SendPropertyChanged("TodayCount");
				this.OnTodayCountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APICreated", DbType="Bit NOT NULL")]
	public bool APICreated
	{
		get
		{
			return this._APICreated;
		}
		set
		{
			if ((this._APICreated != value))
			{
				this.OnAPICreatedChanging(value);
				this.SendPropertyChanging();
				this._APICreated = value;
				this.SendPropertyChanged("APICreated");
				this.OnAPICreatedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APIValidated", DbType="Bit NOT NULL")]
	public bool APIValidated
	{
		get
		{
			return this._APIValidated;
		}
		set
		{
			if ((this._APIValidated != value))
			{
				this.OnAPIValidatedChanging(value);
				this.SendPropertyChanging();
				this._APIValidated = value;
				this.SendPropertyChanged("APIValidated");
				this.OnAPIValidatedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_OTP_V2", Storage="_Application", ThisKey="AppId", OtherKey="AppId", IsForeignKey=true)]
	public Application Application
	{
		get
		{
			return this._Application.Entity;
		}
		set
		{
			Application previousValue = this._Application.Entity;
			if (((previousValue != value) 
						|| (this._Application.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Application.Entity = null;
					previousValue.OTP_V2s.Remove(this);
				}
				this._Application.Entity = value;
				if ((value != null))
				{
					value.OTP_V2s.Add(this);
					this._AppId = value.AppId;
				}
				else
				{
					this._AppId = default(int);
				}
				this.SendPropertyChanged("Application");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblOTPMessages")]
public partial class OTPMessage : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private int _AppId;
	
	private string _MessageToUser;
	
	private EntityRef<Application> _Application;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAppIdChanging(int value);
    partial void OnAppIdChanged();
    partial void OnMessageToUserChanging(string value);
    partial void OnMessageToUserChanged();
    #endregion
	
	public OTPMessage()
	{
		this._Application = default(EntityRef<Application>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppId", DbType="Int NOT NULL")]
	public int AppId
	{
		get
		{
			return this._AppId;
		}
		set
		{
			if ((this._AppId != value))
			{
				if (this._Application.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAppIdChanging(value);
				this.SendPropertyChanging();
				this._AppId = value;
				this.SendPropertyChanged("AppId");
				this.OnAppIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageToUser", DbType="NVarChar(MAX)")]
	public string MessageToUser
	{
		get
		{
			return this._MessageToUser;
		}
		set
		{
			if ((this._MessageToUser != value))
			{
				this.OnMessageToUserChanging(value);
				this.SendPropertyChanging();
				this._MessageToUser = value;
				this.SendPropertyChanged("MessageToUser");
				this.OnMessageToUserChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_OTPMessage", Storage="_Application", ThisKey="AppId", OtherKey="AppId", IsForeignKey=true)]
	public Application Application
	{
		get
		{
			return this._Application.Entity;
		}
		set
		{
			Application previousValue = this._Application.Entity;
			if (((previousValue != value) 
						|| (this._Application.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Application.Entity = null;
					previousValue.OTPMessages.Remove(this);
				}
				this._Application.Entity = value;
				if ((value != null))
				{
					value.OTPMessages.Add(this);
					this._AppId = value.AppId;
				}
				else
				{
					this._AppId = default(int);
				}
				this.SendPropertyChanged("Application");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblPlatformType")]
public partial class AppPlatformType : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _PlatformName;
	
	private EntitySet<ApplicationVersion> _ApplicationVersions;
	
	private EntitySet<Splash> _Splashes;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPlatformNameChanging(string value);
    partial void OnPlatformNameChanged();
    #endregion
	
	public AppPlatformType()
	{
		this._ApplicationVersions = new EntitySet<ApplicationVersion>(new Action<ApplicationVersion>(this.attach_ApplicationVersions), new Action<ApplicationVersion>(this.detach_ApplicationVersions));
		this._Splashes = new EntitySet<Splash>(new Action<Splash>(this.attach_Splashes), new Action<Splash>(this.detach_Splashes));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlatformName", DbType="NVarChar(100)")]
	public string PlatformName
	{
		get
		{
			return this._PlatformName;
		}
		set
		{
			if ((this._PlatformName != value))
			{
				this.OnPlatformNameChanging(value);
				this.SendPropertyChanging();
				this._PlatformName = value;
				this.SendPropertyChanged("PlatformName");
				this.OnPlatformNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AppPlatformType_ApplicationVersion", Storage="_ApplicationVersions", ThisKey="Id", OtherKey="PlatformType")]
	public EntitySet<ApplicationVersion> ApplicationVersions
	{
		get
		{
			return this._ApplicationVersions;
		}
		set
		{
			this._ApplicationVersions.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AppPlatformType_Splash", Storage="_Splashes", ThisKey="Id", OtherKey="PlatformTypeId")]
	public EntitySet<Splash> Splashes
	{
		get
		{
			return this._Splashes;
		}
		set
		{
			this._Splashes.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_ApplicationVersions(ApplicationVersion entity)
	{
		this.SendPropertyChanging();
		entity.AppPlatformType = this;
	}
	
	private void detach_ApplicationVersions(ApplicationVersion entity)
	{
		this.SendPropertyChanging();
		entity.AppPlatformType = null;
	}
	
	private void attach_Splashes(Splash entity)
	{
		this.SendPropertyChanging();
		entity.AppPlatformType = this;
	}
	
	private void detach_Splashes(Splash entity)
	{
		this.SendPropertyChanging();
		entity.AppPlatformType = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblSplash")]
public partial class Splash : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private System.Nullable<int> _AppId;
	
	private string _Name;
	
	private string _ImageUrl;
	
	private string _SplashLink;
	
	private string _Description;
	
	private System.Nullable<System.DateTime> _StartTime;
	
	private System.Nullable<System.DateTime> _EndTime;
	
	private System.Nullable<System.DateTime> _InsertDate;
	
	private System.Nullable<System.DateTime> _UpdateDate;
	
	private System.Nullable<int> _PlatformTypeId;
	
	private System.Nullable<int> _LangId;
	
	private EntityRef<Application> _Application;
	
	private EntityRef<AppPlatformType> _AppPlatformType;
	
	private EntityRef<Language> _tblLanguage;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAppIdChanging(System.Nullable<int> value);
    partial void OnAppIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnImageUrlChanging(string value);
    partial void OnImageUrlChanged();
    partial void OnSplashLinkChanging(string value);
    partial void OnSplashLinkChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnStartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEndTimeChanged();
    partial void OnInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertDateChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnPlatformTypeIdChanging(System.Nullable<int> value);
    partial void OnPlatformTypeIdChanged();
    partial void OnLangIdChanging(System.Nullable<int> value);
    partial void OnLangIdChanged();
    #endregion
	
	public Splash()
	{
		this._Application = default(EntityRef<Application>);
		this._AppPlatformType = default(EntityRef<AppPlatformType>);
		this._tblLanguage = default(EntityRef<Language>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppId", DbType="Int")]
	public System.Nullable<int> AppId
	{
		get
		{
			return this._AppId;
		}
		set
		{
			if ((this._AppId != value))
			{
				if (this._Application.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAppIdChanging(value);
				this.SendPropertyChanging();
				this._AppId = value;
				this.SendPropertyChanged("AppId");
				this.OnAppIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageUrl", DbType="NVarChar(MAX)")]
	public string ImageUrl
	{
		get
		{
			return this._ImageUrl;
		}
		set
		{
			if ((this._ImageUrl != value))
			{
				this.OnImageUrlChanging(value);
				this.SendPropertyChanging();
				this._ImageUrl = value;
				this.SendPropertyChanged("ImageUrl");
				this.OnImageUrlChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SplashLink", DbType="NVarChar(MAX)")]
	public string SplashLink
	{
		get
		{
			return this._SplashLink;
		}
		set
		{
			if ((this._SplashLink != value))
			{
				this.OnSplashLinkChanging(value);
				this.SendPropertyChanging();
				this._SplashLink = value;
				this.SendPropertyChanged("SplashLink");
				this.OnSplashLinkChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="DateTime")]
	public System.Nullable<System.DateTime> StartTime
	{
		get
		{
			return this._StartTime;
		}
		set
		{
			if ((this._StartTime != value))
			{
				this.OnStartTimeChanging(value);
				this.SendPropertyChanging();
				this._StartTime = value;
				this.SendPropertyChanged("StartTime");
				this.OnStartTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="DateTime")]
	public System.Nullable<System.DateTime> EndTime
	{
		get
		{
			return this._EndTime;
		}
		set
		{
			if ((this._EndTime != value))
			{
				this.OnEndTimeChanging(value);
				this.SendPropertyChanging();
				this._EndTime = value;
				this.SendPropertyChanged("EndTime");
				this.OnEndTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> InsertDate
	{
		get
		{
			return this._InsertDate;
		}
		set
		{
			if ((this._InsertDate != value))
			{
				this.OnInsertDateChanging(value);
				this.SendPropertyChanging();
				this._InsertDate = value;
				this.SendPropertyChanged("InsertDate");
				this.OnInsertDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> UpdateDate
	{
		get
		{
			return this._UpdateDate;
		}
		set
		{
			if ((this._UpdateDate != value))
			{
				this.OnUpdateDateChanging(value);
				this.SendPropertyChanging();
				this._UpdateDate = value;
				this.SendPropertyChanged("UpdateDate");
				this.OnUpdateDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlatformTypeId", DbType="Int")]
	public System.Nullable<int> PlatformTypeId
	{
		get
		{
			return this._PlatformTypeId;
		}
		set
		{
			if ((this._PlatformTypeId != value))
			{
				if (this._AppPlatformType.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnPlatformTypeIdChanging(value);
				this.SendPropertyChanging();
				this._PlatformTypeId = value;
				this.SendPropertyChanged("PlatformTypeId");
				this.OnPlatformTypeIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LangId", DbType="Int")]
	public System.Nullable<int> LangId
	{
		get
		{
			return this._LangId;
		}
		set
		{
			if ((this._LangId != value))
			{
				if (this._tblLanguage.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnLangIdChanging(value);
				this.SendPropertyChanging();
				this._LangId = value;
				this.SendPropertyChanged("LangId");
				this.OnLangIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_Splash", Storage="_Application", ThisKey="AppId", OtherKey="AppId", IsForeignKey=true)]
	public Application Application
	{
		get
		{
			return this._Application.Entity;
		}
		set
		{
			Application previousValue = this._Application.Entity;
			if (((previousValue != value) 
						|| (this._Application.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Application.Entity = null;
					previousValue.Splashes.Remove(this);
				}
				this._Application.Entity = value;
				if ((value != null))
				{
					value.Splashes.Add(this);
					this._AppId = value.AppId;
				}
				else
				{
					this._AppId = default(Nullable<int>);
				}
				this.SendPropertyChanged("Application");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AppPlatformType_Splash", Storage="_AppPlatformType", ThisKey="PlatformTypeId", OtherKey="Id", IsForeignKey=true)]
	public AppPlatformType AppPlatformType
	{
		get
		{
			return this._AppPlatformType.Entity;
		}
		set
		{
			AppPlatformType previousValue = this._AppPlatformType.Entity;
			if (((previousValue != value) 
						|| (this._AppPlatformType.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._AppPlatformType.Entity = null;
					previousValue.Splashes.Remove(this);
				}
				this._AppPlatformType.Entity = value;
				if ((value != null))
				{
					value.Splashes.Add(this);
					this._PlatformTypeId = value.Id;
				}
				else
				{
					this._PlatformTypeId = default(Nullable<int>);
				}
				this.SendPropertyChanged("AppPlatformType");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_Splash", Storage="_tblLanguage", ThisKey="LangId", OtherKey="Id", IsForeignKey=true)]
	public Language Language
	{
		get
		{
			return this._tblLanguage.Entity;
		}
		set
		{
			Language previousValue = this._tblLanguage.Entity;
			if (((previousValue != value) 
						|| (this._tblLanguage.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tblLanguage.Entity = null;
					previousValue.Splashes.Remove(this);
				}
				this._tblLanguage.Entity = value;
				if ((value != null))
				{
					value.Splashes.Add(this);
					this._LangId = value.Id;
				}
				else
				{
					this._LangId = default(Nullable<int>);
				}
				this.SendPropertyChanged("Language");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblUser")]
public partial class tblUser : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Email;
	
	private string _Password;
	
	private System.Nullable<System.DateTime> _InsertDate;
	
	private System.Nullable<System.DateTime> _UpdateDate;
	
	private int _AppID;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertDateChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnAppIDChanging(int value);
    partial void OnAppIDChanged();
    #endregion
	
	public tblUser()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(100)")]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> InsertDate
	{
		get
		{
			return this._InsertDate;
		}
		set
		{
			if ((this._InsertDate != value))
			{
				this.OnInsertDateChanging(value);
				this.SendPropertyChanging();
				this._InsertDate = value;
				this.SendPropertyChanged("InsertDate");
				this.OnInsertDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> UpdateDate
	{
		get
		{
			return this._UpdateDate;
		}
		set
		{
			if ((this._UpdateDate != value))
			{
				this.OnUpdateDateChanging(value);
				this.SendPropertyChanging();
				this._UpdateDate = value;
				this.SendPropertyChanged("UpdateDate");
				this.OnUpdateDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppID", DbType="Int NOT NULL")]
	public int AppID
	{
		get
		{
			return this._AppID;
		}
		set
		{
			if ((this._AppID != value))
			{
				this.OnAppIDChanging(value);
				this.SendPropertyChanging();
				this._AppID = value;
				this.SendPropertyChanged("AppID");
				this.OnAppIDChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblUtilitiesLog")]
public partial class UtilitiesLog : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private System.Nullable<int> _ActionTypeId;
	
	private System.Nullable<int> _AppId;
	
	private string _TransactionId;
	
	private string _Data;
	
	private System.Nullable<System.DateTime> _InsertDate;
	
	private string _Exception;
	
	private EntityRef<Application> _Application;
	
	private EntityRef<ActionType> _ActionType;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnActionTypeIdChanging(System.Nullable<int> value);
    partial void OnActionTypeIdChanged();
    partial void OnAppIdChanging(System.Nullable<int> value);
    partial void OnAppIdChanged();
    partial void OnTransactionIdChanging(string value);
    partial void OnTransactionIdChanged();
    partial void OnDataChanging(string value);
    partial void OnDataChanged();
    partial void OnInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertDateChanged();
    partial void OnExceptionChanging(string value);
    partial void OnExceptionChanged();
    #endregion
	
	public UtilitiesLog()
	{
		this._Application = default(EntityRef<Application>);
		this._ActionType = default(EntityRef<ActionType>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionTypeId", DbType="Int")]
	public System.Nullable<int> ActionTypeId
	{
		get
		{
			return this._ActionTypeId;
		}
		set
		{
			if ((this._ActionTypeId != value))
			{
				if (this._ActionType.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnActionTypeIdChanging(value);
				this.SendPropertyChanging();
				this._ActionTypeId = value;
				this.SendPropertyChanged("ActionTypeId");
				this.OnActionTypeIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppId", DbType="Int")]
	public System.Nullable<int> AppId
	{
		get
		{
			return this._AppId;
		}
		set
		{
			if ((this._AppId != value))
			{
				if (this._Application.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAppIdChanging(value);
				this.SendPropertyChanging();
				this._AppId = value;
				this.SendPropertyChanged("AppId");
				this.OnAppIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionId", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
	public string TransactionId
	{
		get
		{
			return this._TransactionId;
		}
		set
		{
			if ((this._TransactionId != value))
			{
				this.OnTransactionIdChanging(value);
				this.SendPropertyChanging();
				this._TransactionId = value;
				this.SendPropertyChanged("TransactionId");
				this.OnTransactionIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Data
	{
		get
		{
			return this._Data;
		}
		set
		{
			if ((this._Data != value))
			{
				this.OnDataChanging(value);
				this.SendPropertyChanging();
				this._Data = value;
				this.SendPropertyChanged("Data");
				this.OnDataChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> InsertDate
	{
		get
		{
			return this._InsertDate;
		}
		set
		{
			if ((this._InsertDate != value))
			{
				this.OnInsertDateChanging(value);
				this.SendPropertyChanging();
				this._InsertDate = value;
				this.SendPropertyChanged("InsertDate");
				this.OnInsertDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exception", DbType="NVarChar(MAX)")]
	public string Exception
	{
		get
		{
			return this._Exception;
		}
		set
		{
			if ((this._Exception != value))
			{
				this.OnExceptionChanging(value);
				this.SendPropertyChanging();
				this._Exception = value;
				this.SendPropertyChanged("Exception");
				this.OnExceptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_UtilitiesLog", Storage="_Application", ThisKey="AppId", OtherKey="AppId", IsForeignKey=true)]
	public Application Application
	{
		get
		{
			return this._Application.Entity;
		}
		set
		{
			Application previousValue = this._Application.Entity;
			if (((previousValue != value) 
						|| (this._Application.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Application.Entity = null;
					previousValue.UtilitiesLogs.Remove(this);
				}
				this._Application.Entity = value;
				if ((value != null))
				{
					value.UtilitiesLogs.Add(this);
					this._AppId = value.AppId;
				}
				else
				{
					this._AppId = default(Nullable<int>);
				}
				this.SendPropertyChanged("Application");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActionType_UtilitiesLog", Storage="_ActionType", ThisKey="ActionTypeId", OtherKey="ActionTypeId", IsForeignKey=true)]
	public ActionType ActionType
	{
		get
		{
			return this._ActionType.Entity;
		}
		set
		{
			ActionType previousValue = this._ActionType.Entity;
			if (((previousValue != value) 
						|| (this._ActionType.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ActionType.Entity = null;
					previousValue.UtilitiesLogs.Remove(this);
				}
				this._ActionType.Entity = value;
				if ((value != null))
				{
					value.UtilitiesLogs.Add(this);
					this._ActionTypeId = value.ActionTypeId;
				}
				else
				{
					this._ActionTypeId = default(Nullable<int>);
				}
				this.SendPropertyChanged("ActionType");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ApplicationCapability")]
public partial class Capability_SMS : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private int _AppID;
	
	private int _CapabilityType;
	
	private bool _Enabled;
	
	private string _SenderName;
	
	private string _DataFormat;
	
	private string _AddRejectLink;
	
	private System.Nullable<int> _SMSProviderID;
	
	private string _RejectLink;
	
	private string _RejectAddedText;
	
	private System.Nullable<int> _MaxPerRestriction;
	
	private System.Nullable<int> _MinutesRestriction;
	
	private EntityRef<Application> _tblApplication;
	
	private EntityRef<Application_CapabilityType> _Application_CapabilityType;
	
	private EntityRef<EnableRejectLink> _EnableRejectLink;
	
	private EntityRef<SMS_Provider> _SMS_Provider;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAppIDChanging(int value);
    partial void OnAppIDChanged();
    partial void OnCapabilityTypeChanging(int value);
    partial void OnCapabilityTypeChanged();
    partial void OnEnabledChanging(bool value);
    partial void OnEnabledChanged();
    partial void OnSenderNameChanging(string value);
    partial void OnSenderNameChanged();
    partial void OnEncodingKeyChanging(string value);
    partial void OnEncodingKeyChanged();
    partial void OnAddRejectLinkChanging(string value);
    partial void OnAddRejectLinkChanged();
    partial void OnSMSProviderIDChanging(System.Nullable<int> value);
    partial void OnSMSProviderIDChanged();
    partial void OnRejectLinkChanging(string value);
    partial void OnRejectLinkChanged();
    partial void OnRejectAddedTextChanging(string value);
    partial void OnRejectAddedTextChanged();
    partial void OnMaxPerRestrictionChanging(System.Nullable<int> value);
    partial void OnMaxPerRestrictionChanged();
    partial void OnMinutesRestrictionChanging(System.Nullable<int> value);
    partial void OnMinutesRestrictionChanged();
    #endregion
	
	public Capability_SMS()
	{
		this._tblApplication = default(EntityRef<Application>);
		this._Application_CapabilityType = default(EntityRef<Application_CapabilityType>);
		this._EnableRejectLink = default(EntityRef<EnableRejectLink>);
		this._SMS_Provider = default(EntityRef<SMS_Provider>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppID", DbType="Int NOT NULL")]
	public int AppID
	{
		get
		{
			return this._AppID;
		}
		set
		{
			if ((this._AppID != value))
			{
				if (this._tblApplication.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAppIDChanging(value);
				this.SendPropertyChanging();
				this._AppID = value;
				this.SendPropertyChanged("AppID");
				this.OnAppIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CapabilityType", DbType="Int NOT NULL")]
	public int CapabilityType
	{
		get
		{
			return this._CapabilityType;
		}
		set
		{
			if ((this._CapabilityType != value))
			{
				if (this._Application_CapabilityType.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCapabilityTypeChanging(value);
				this.SendPropertyChanging();
				this._CapabilityType = value;
				this.SendPropertyChanged("CapabilityType");
				this.OnCapabilityTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enabled", DbType="Bit NOT NULL")]
	public bool Enabled
	{
		get
		{
			return this._Enabled;
		}
		set
		{
			if ((this._Enabled != value))
			{
				this.OnEnabledChanging(value);
				this.SendPropertyChanging();
				this._Enabled = value;
				this.SendPropertyChanged("Enabled");
				this.OnEnabledChanged();
			}
		}
	}
    [FilterUIHint("Search")]
    [global::System.Data.Linq.Mapping.ColumnAttribute(Name="Data", Storage="_SenderName", DbType="NVarChar(MAX)")]
	public string SenderName
	{
		get
		{
			return this._SenderName;
		}
		set
		{
			if ((this._SenderName != value))
			{
				this.OnSenderNameChanging(value);
				this.SendPropertyChanging();
				this._SenderName = value;
				this.SendPropertyChanged("SenderName");
				this.OnSenderNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="DataFormat", Storage="_DataFormat", DbType="NVarChar(MAX)")]
	public string EncodingKey
	{
		get
		{
			return this._DataFormat;
		}
		set
		{
			if ((this._DataFormat != value))
			{
				this.OnEncodingKeyChanging(value);
				this.SendPropertyChanging();
				this._DataFormat = value;
				this.SendPropertyChanged("EncodingKey");
				this.OnEncodingKeyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="DataTwo", Storage="_AddRejectLink", DbType="NVarChar(MAX)", CanBeNull=false)]
	public string AddRejectLink
	{
		get
		{
			return this._AddRejectLink;
		}
		set
		{
			if ((this._AddRejectLink != value))
			{
				this.OnAddRejectLinkChanging(value);
				this.SendPropertyChanging();
				this._AddRejectLink = value;
				this.SendPropertyChanged("AddRejectLink");
				this.OnAddRejectLinkChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMSProviderID", DbType="Int")]
	public System.Nullable<int> SMSProviderID
	{
		get
		{
			return this._SMSProviderID;
		}
		set
		{
			if ((this._SMSProviderID != value))
			{
				if (this._SMS_Provider.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSMSProviderIDChanging(value);
				this.SendPropertyChanging();
				this._SMSProviderID = value;
				this.SendPropertyChanged("SMSProviderID");
				this.OnSMSProviderIDChanged();
			}
		}
	}
	[FilterUIHint("Search")]
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="DataThree", Storage="_RejectLink", DbType="NVarChar(MAX)")]
	public string RejectLink
	{
		get
		{
			return this._RejectLink;
		}
		set
		{
			if ((this._RejectLink != value))
			{
				this.OnRejectLinkChanging(value);
				this.SendPropertyChanging();
				this._RejectLink = value;
				this.SendPropertyChanged("RejectLink");
				this.OnRejectLinkChanged();
			}
		}
	}
	[FilterUIHint("Search")]
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="DataFour", Storage="_RejectAddedText", DbType="NVarChar(MAX)")]
	public string RejectAddedText
	{
		get
		{
			return this._RejectAddedText;
		}
		set
		{
			if ((this._RejectAddedText != value))
			{
				this.OnRejectAddedTextChanging(value);
				this.SendPropertyChanging();
				this._RejectAddedText = value;
				this.SendPropertyChanged("RejectAddedText");
				this.OnRejectAddedTextChanged();
			}
		}
	}

    [RegularExpression("^([1-9]|[1-9][0-9])$", ErrorMessage = "Between 1 to 99")]
    [Required]
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxPerRestriction", DbType="Int")]
	public System.Nullable<int> MaxPerRestriction
	{
		get
		{
			return this._MaxPerRestriction;
		}
		set
		{
			if ((this._MaxPerRestriction != value))
			{
				this.OnMaxPerRestrictionChanging(value);
				this.SendPropertyChanging();
				this._MaxPerRestriction = value;
				this.SendPropertyChanged("MaxPerRestriction");
				this.OnMaxPerRestrictionChanged();
			}
		}
	}

    [RegularExpression("^([1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9])$", ErrorMessage = "Between 1 to 1999")]
    [Required]
    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinutesRestriction", DbType="Int")]
	public System.Nullable<int> MinutesRestriction
	{
		get
		{
			return this._MinutesRestriction;
		}
		set
		{
			if ((this._MinutesRestriction != value))
			{
				this.OnMinutesRestrictionChanging(value);
				this.SendPropertyChanging();
				this._MinutesRestriction = value;
				this.SendPropertyChanged("MinutesRestriction");
				this.OnMinutesRestrictionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_Capability_SMS", Storage="_tblApplication", ThisKey="AppID", OtherKey="AppId", IsForeignKey=true)]
	public Application Application
	{
		get
		{
			return this._tblApplication.Entity;
		}
		set
		{
			Application previousValue = this._tblApplication.Entity;
			if (((previousValue != value) 
						|| (this._tblApplication.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tblApplication.Entity = null;
					previousValue.Capability_SMS.Remove(this);
				}
				this._tblApplication.Entity = value;
				if ((value != null))
				{
					value.Capability_SMS.Add(this);
					this._AppID = value.AppId;
				}
				else
				{
					this._AppID = default(int);
				}
				this.SendPropertyChanged("Application");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_CapabilityType_Capability_SMS", Storage="_Application_CapabilityType", ThisKey="CapabilityType", OtherKey="ID", IsForeignKey=true)]
	public Application_CapabilityType Application_CapabilityType
	{
		get
		{
			return this._Application_CapabilityType.Entity;
		}
		set
		{
			Application_CapabilityType previousValue = this._Application_CapabilityType.Entity;
			if (((previousValue != value) 
						|| (this._Application_CapabilityType.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Application_CapabilityType.Entity = null;
					previousValue.Capability_SMS.Remove(this);
				}
				this._Application_CapabilityType.Entity = value;
				if ((value != null))
				{
					value.Capability_SMS.Add(this);
					this._CapabilityType = value.ID;
				}
				else
				{
					this._CapabilityType = default(int);
				}
				this.SendPropertyChanged("Application_CapabilityType");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EnableRejectLink_Capability_SMS", Storage="_EnableRejectLink", ThisKey="AddRejectLink", OtherKey="Name", IsForeignKey=true)]
	public EnableRejectLink EnableRejectLink
	{
		get
		{
			return this._EnableRejectLink.Entity;
		}
		set
		{
			EnableRejectLink previousValue = this._EnableRejectLink.Entity;
			if (((previousValue != value) 
						|| (this._EnableRejectLink.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._EnableRejectLink.Entity = null;
					previousValue.Capability_SMS.Remove(this);
				}
				this._EnableRejectLink.Entity = value;
				if ((value != null))
				{
					value.Capability_SMS.Add(this);
					this._AddRejectLink = value.Name;
				}
				else
				{
					this._AddRejectLink = default(string);
				}
				this.SendPropertyChanged("EnableRejectLink");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SMS_Provider_Capability_SMS", Storage="_SMS_Provider", ThisKey="SMSProviderID", OtherKey="ID", IsForeignKey=true)]
	public SMS_Provider SMS_Provider
	{
		get
		{
			return this._SMS_Provider.Entity;
		}
		set
		{
			SMS_Provider previousValue = this._SMS_Provider.Entity;
			if (((previousValue != value) 
						|| (this._SMS_Provider.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SMS_Provider.Entity = null;
					previousValue.Capability_SMS.Remove(this);
				}
				this._SMS_Provider.Entity = value;
				if ((value != null))
				{
					value.Capability_SMS.Add(this);
					this._SMSProviderID = value.ID;
				}
				else
				{
					this._SMSProviderID = default(Nullable<int>);
				}
				this.SendPropertyChanged("SMS_Provider");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ApplicationCapability")]
public partial class Capability_OTP : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private int _AppID;
	
	private int _CapabilityType;
	
	private bool _Enabled;
	
	private string _OTPMinutes;
	
	private string _OTPText;
	
	private string _OTPLength;
	
	private string _OTPType;
	
	private string _OTPTries;
	
	private System.Nullable<int> _MaxPerRestriction;
	
	private System.Nullable<int> _MinutesRestriction;
	
	private EntityRef<Application> _Application;
	
	private EntityRef<Application_CapabilityType> _Application_CapabilityType;
	
	private EntityRef<OTPType_0_Digit_1_Mix> _OTPType_0_Digit_1_Mix;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAppIDChanging(int value);
    partial void OnAppIDChanged();
    partial void OnCapabilityTypeChanging(int value);
    partial void OnCapabilityTypeChanged();
    partial void OnEnabledChanging(bool value);
    partial void OnEnabledChanged();
    partial void OnOTPMinutesChanging(string value);
    partial void OnOTPMinutesChanged();
    partial void OnOTPTextChanging(string value);
    partial void OnOTPTextChanged();
    partial void OnOTPLengthChanging(string value);
    partial void OnOTPLengthChanged();
    partial void OnOTPTypeChanging(string value);
    partial void OnOTPTypeChanged();
    partial void OnOTPTriesChanging(string value);
    partial void OnOTPTriesChanged();
    partial void OnMaxPerRestrictionChanging(System.Nullable<int> value);
    partial void OnMaxPerRestrictionChanged();
    partial void OnMinutesRestrictionChanging(System.Nullable<int> value);
    partial void OnMinutesRestrictionChanged();
    #endregion
	
	public Capability_OTP()
	{
		this._Application = default(EntityRef<Application>);
		this._Application_CapabilityType = default(EntityRef<Application_CapabilityType>);
		this._OTPType_0_Digit_1_Mix = default(EntityRef<OTPType_0_Digit_1_Mix>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppID", DbType="Int NOT NULL")]
	public int AppID
	{
		get
		{
			return this._AppID;
		}
		set
		{
			if ((this._AppID != value))
			{
				if (this._Application.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAppIDChanging(value);
				this.SendPropertyChanging();
				this._AppID = value;
				this.SendPropertyChanged("AppID");
				this.OnAppIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CapabilityType", DbType="Int NOT NULL")]
	public int CapabilityType
	{
		get
		{
			return this._CapabilityType;
		}
		set
		{
			if ((this._CapabilityType != value))
			{
				if (this._Application_CapabilityType.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCapabilityTypeChanging(value);
				this.SendPropertyChanging();
				this._CapabilityType = value;
				this.SendPropertyChanged("CapabilityType");
				this.OnCapabilityTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enabled", DbType="Bit NOT NULL")]
	public bool Enabled
	{
		get
		{
			return this._Enabled;
		}
		set
		{
			if ((this._Enabled != value))
			{
				this.OnEnabledChanging(value);
				this.SendPropertyChanging();
				this._Enabled = value;
				this.SendPropertyChanged("Enabled");
				this.OnEnabledChanged();
			}
		}
	}

    [RegularExpression("^([1-9]|[1-9][0-9]|[1-9][0-9][0-9])$", ErrorMessage = "Between 1 to 999")]
    [Required]
    [global::System.Data.Linq.Mapping.ColumnAttribute(Name="Data", Storage="_OTPMinutes", DbType="NVarChar(MAX)", CanBeNull=false)]
	public string OTPMinutes
	{
		get
		{
			return this._OTPMinutes;
		}
		set
		{
			if ((this._OTPMinutes != value))
			{
				this.OnOTPMinutesChanging(value);
				this.SendPropertyChanging();
				this._OTPMinutes = value;
				this.SendPropertyChanged("OTPMinutes");
				this.OnOTPMinutesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="DataFormat", Storage="_OTPText", DbType="NVarChar(MAX)")]
	public string OTPText
	{
		get
		{
			return this._OTPText;
		}
		set
		{
			if ((this._OTPText != value))
			{
				this.OnOTPTextChanging(value);
				this.SendPropertyChanging();
				this._OTPText = value;
				this.SendPropertyChanged("OTPText");
				this.OnOTPTextChanged();
			}
		}
	}
    [RegularExpression("^([4-9]|[1][0-4])$", ErrorMessage = "Between 4 to 14")]
    [Required]
    [global::System.Data.Linq.Mapping.ColumnAttribute(Name="DataTwo", Storage="_OTPLength", DbType="NVarChar(MAX)", CanBeNull=false)]
	public string OTPLength
	{
		get
		{
			return this._OTPLength;
		}
		set
		{
			if ((this._OTPLength != value))
			{
				this.OnOTPLengthChanging(value);
				this.SendPropertyChanging();
				this._OTPLength = value;
				this.SendPropertyChanged("OTPLength");
				this.OnOTPLengthChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="DataThree", Storage="_OTPType", DbType="NVarChar(MAX)", CanBeNull=false)]
	public string OTPType
	{
		get
		{
			return this._OTPType;
		}
		set
		{
			if ((this._OTPType != value))
			{
				this.OnOTPTypeChanging(value);
				this.SendPropertyChanging();
				this._OTPType = value;
				this.SendPropertyChanged("OTPType");
				this.OnOTPTypeChanged();
			}
		}
	}

    [RegularExpression("^([1-9]|[1][0-9])$", ErrorMessage = "Between 1 to 19")]
    [Required]
    [global::System.Data.Linq.Mapping.ColumnAttribute(Name="DataFour", Storage="_OTPTries", DbType="NVarChar(MAX)")]
	public string OTPTries
	{
		get
		{
			return this._OTPTries;
		}
		set
		{
			if ((this._OTPTries != value))
			{
				this.OnOTPTriesChanging(value);
				this.SendPropertyChanging();
				this._OTPTries = value;
				this.SendPropertyChanged("OTPTries");
				this.OnOTPTriesChanged();
			}
		}
	}
    [RegularExpression("^([1-9]|[1][0-9])$", ErrorMessage = "Between 1 to 19")]
    [Required]
    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxPerRestriction", DbType="Int")]
	public System.Nullable<int> MaxPerRestriction
	{
		get
		{
			return this._MaxPerRestriction;
		}
		set
		{
			if ((this._MaxPerRestriction != value))
			{
				this.OnMaxPerRestrictionChanging(value);
				this.SendPropertyChanging();
				this._MaxPerRestriction = value;
				this.SendPropertyChanged("MaxPerRestriction");
				this.OnMaxPerRestrictionChanged();
			}
		}
	}

    [RegularExpression("^([1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9])$", ErrorMessage = "Between 1 to 1999")]
    [Required]
    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinutesRestriction", DbType="Int")]
	public System.Nullable<int> MinutesRestriction
	{
		get
		{
			return this._MinutesRestriction;
		}
		set
		{
			if ((this._MinutesRestriction != value))
			{
				this.OnMinutesRestrictionChanging(value);
				this.SendPropertyChanging();
				this._MinutesRestriction = value;
				this.SendPropertyChanged("MinutesRestriction");
				this.OnMinutesRestrictionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_Capability_OTP", Storage="_Application", ThisKey="AppID", OtherKey="AppId", IsForeignKey=true)]
	public Application Application
	{
		get
		{
			return this._Application.Entity;
		}
		set
		{
			Application previousValue = this._Application.Entity;
			if (((previousValue != value) 
						|| (this._Application.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Application.Entity = null;
					previousValue.Capability_OTPs.Remove(this);
				}
				this._Application.Entity = value;
				if ((value != null))
				{
					value.Capability_OTPs.Add(this);
					this._AppID = value.AppId;
				}
				else
				{
					this._AppID = default(int);
				}
				this.SendPropertyChanged("Application");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_CapabilityType_Capability_OTP", Storage="_Application_CapabilityType", ThisKey="CapabilityType", OtherKey="ID", IsForeignKey=true)]
	public Application_CapabilityType Application_CapabilityType
	{
		get
		{
			return this._Application_CapabilityType.Entity;
		}
		set
		{
			Application_CapabilityType previousValue = this._Application_CapabilityType.Entity;
			if (((previousValue != value) 
						|| (this._Application_CapabilityType.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Application_CapabilityType.Entity = null;
					previousValue.Capability_OTPs.Remove(this);
				}
				this._Application_CapabilityType.Entity = value;
				if ((value != null))
				{
					value.Capability_OTPs.Add(this);
					this._CapabilityType = value.ID;
				}
				else
				{
					this._CapabilityType = default(int);
				}
				this.SendPropertyChanged("Application_CapabilityType");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OTPType_0_Digit_1_Mix_Capability_OTP", Storage="_OTPType_0_Digit_1_Mix", ThisKey="OTPType", OtherKey="Name", IsForeignKey=true)]
	public OTPType_0_Digit_1_Mix OTPType_0_Digit_1_Mix
	{
		get
		{
			return this._OTPType_0_Digit_1_Mix.Entity;
		}
		set
		{
			OTPType_0_Digit_1_Mix previousValue = this._OTPType_0_Digit_1_Mix.Entity;
			if (((previousValue != value) 
						|| (this._OTPType_0_Digit_1_Mix.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._OTPType_0_Digit_1_Mix.Entity = null;
					previousValue.Capability_OTPs.Remove(this);
				}
				this._OTPType_0_Digit_1_Mix.Entity = value;
				if ((value != null))
				{
					value.Capability_OTPs.Add(this);
					this._OTPType = value.Name;
				}
				else
				{
					this._OTPType = default(string);
				}
				this.SendPropertyChanged("OTPType_0_Digit_1_Mix");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.v_AddRejectLink")]
public partial class EnableRejectLink : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Name;
	
	private EntitySet<Capability_SMS> _ApplicationCapability_SMS;
	
	private EntitySet<Capability_EmailToUser> _Capability_EmailToUsers;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
	
	public EnableRejectLink()
	{
		this._ApplicationCapability_SMS = new EntitySet<Capability_SMS>(new Action<Capability_SMS>(this.attach_ApplicationCapability_SMS), new Action<Capability_SMS>(this.detach_ApplicationCapability_SMS));
		this._Capability_EmailToUsers = new EntitySet<Capability_EmailToUser>(new Action<Capability_EmailToUser>(this.attach_Capability_EmailToUsers), new Action<Capability_EmailToUser>(this.detach_Capability_EmailToUsers));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EnableRejectLink_Capability_SMS", Storage="_ApplicationCapability_SMS", ThisKey="Name", OtherKey="AddRejectLink")]
	public EntitySet<Capability_SMS> Capability_SMS
	{
		get
		{
			return this._ApplicationCapability_SMS;
		}
		set
		{
			this._ApplicationCapability_SMS.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EnableRejectLink_Capability_EmailToUser", Storage="_Capability_EmailToUsers", ThisKey="Name", OtherKey="AddRejectLink")]
	public EntitySet<Capability_EmailToUser> Capability_EmailToUsers
	{
		get
		{
			return this._Capability_EmailToUsers;
		}
		set
		{
			this._Capability_EmailToUsers.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_ApplicationCapability_SMS(Capability_SMS entity)
	{
		this.SendPropertyChanging();
		entity.EnableRejectLink = this;
	}
	
	private void detach_ApplicationCapability_SMS(Capability_SMS entity)
	{
		this.SendPropertyChanging();
		entity.EnableRejectLink = null;
	}
	
	private void attach_Capability_EmailToUsers(Capability_EmailToUser entity)
	{
		this.SendPropertyChanging();
		entity.EnableRejectLink = this;
	}
	
	private void detach_Capability_EmailToUsers(Capability_EmailToUser entity)
	{
		this.SendPropertyChanging();
		entity.EnableRejectLink = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.v_OTPType")]
public partial class OTPType_0_Digit_1_Mix : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Name;
	
	private EntitySet<Capability_OTP> _ApplicationCapability_OTPs;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
	
	public OTPType_0_Digit_1_Mix()
	{
		this._ApplicationCapability_OTPs = new EntitySet<Capability_OTP>(new Action<Capability_OTP>(this.attach_ApplicationCapability_OTPs), new Action<Capability_OTP>(this.detach_ApplicationCapability_OTPs));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OTPType_0_Digit_1_Mix_Capability_OTP", Storage="_ApplicationCapability_OTPs", ThisKey="Name", OtherKey="OTPType")]
	public EntitySet<Capability_OTP> Capability_OTPs
	{
		get
		{
			return this._ApplicationCapability_OTPs;
		}
		set
		{
			this._ApplicationCapability_OTPs.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_ApplicationCapability_OTPs(Capability_OTP entity)
	{
		this.SendPropertyChanging();
		entity.OTPType_0_Digit_1_Mix = this;
	}
	
	private void detach_ApplicationCapability_OTPs(Capability_OTP entity)
	{
		this.SendPropertyChanging();
		entity.OTPType_0_Digit_1_Mix = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ApplicationCapability")]
public partial class Capability_Barcode : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private int _AppID;
	
	private int _CapabilityType;
	
	private bool _Enabled;
	
	private EntityRef<Application> _Application;
	
	private EntityRef<Application_CapabilityType> _Application_CapabilityType;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAppIDChanging(int value);
    partial void OnAppIDChanged();
    partial void OnCapabilityTypeChanging(int value);
    partial void OnCapabilityTypeChanged();
    partial void OnEnabledChanging(bool value);
    partial void OnEnabledChanged();
    #endregion
	
	public Capability_Barcode()
	{
		this._Application = default(EntityRef<Application>);
		this._Application_CapabilityType = default(EntityRef<Application_CapabilityType>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppID", DbType="Int NOT NULL")]
	public int AppID
	{
		get
		{
			return this._AppID;
		}
		set
		{
			if ((this._AppID != value))
			{
				if (this._Application.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAppIDChanging(value);
				this.SendPropertyChanging();
				this._AppID = value;
				this.SendPropertyChanged("AppID");
				this.OnAppIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CapabilityType", DbType="Int NOT NULL")]
	public int CapabilityType
	{
		get
		{
			return this._CapabilityType;
		}
		set
		{
			if ((this._CapabilityType != value))
			{
				if (this._Application_CapabilityType.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCapabilityTypeChanging(value);
				this.SendPropertyChanging();
				this._CapabilityType = value;
				this.SendPropertyChanged("CapabilityType");
				this.OnCapabilityTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enabled", DbType="Bit NOT NULL")]
	public bool Enabled
	{
		get
		{
			return this._Enabled;
		}
		set
		{
			if ((this._Enabled != value))
			{
				this.OnEnabledChanging(value);
				this.SendPropertyChanging();
				this._Enabled = value;
				this.SendPropertyChanged("Enabled");
				this.OnEnabledChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_Capability_Barcode", Storage="_Application", ThisKey="AppID", OtherKey="AppId", IsForeignKey=true)]
	public Application Application
	{
		get
		{
			return this._Application.Entity;
		}
		set
		{
			Application previousValue = this._Application.Entity;
			if (((previousValue != value) 
						|| (this._Application.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Application.Entity = null;
					previousValue.Capability_Barcodes.Remove(this);
				}
				this._Application.Entity = value;
				if ((value != null))
				{
					value.Capability_Barcodes.Add(this);
					this._AppID = value.AppId;
				}
				else
				{
					this._AppID = default(int);
				}
				this.SendPropertyChanged("Application");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_CapabilityType_Capability_Barcode", Storage="_Application_CapabilityType", ThisKey="CapabilityType", OtherKey="ID", IsForeignKey=true)]
	public Application_CapabilityType Application_CapabilityType
	{
		get
		{
			return this._Application_CapabilityType.Entity;
		}
		set
		{
			Application_CapabilityType previousValue = this._Application_CapabilityType.Entity;
			if (((previousValue != value) 
						|| (this._Application_CapabilityType.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Application_CapabilityType.Entity = null;
					previousValue.Capability_Barcodes.Remove(this);
				}
				this._Application_CapabilityType.Entity = value;
				if ((value != null))
				{
					value.Capability_Barcodes.Add(this);
					this._CapabilityType = value.ID;
				}
				else
				{
					this._CapabilityType = default(int);
				}
				this.SendPropertyChanged("Application_CapabilityType");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ApplicationCapability")]
public partial class Capability_EmailToUser : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private int _AppID;
	
	private int _CapabilityType;
	
	private bool _Enabled;
	
	private string _DataFormat;
	
	private string _DataTwo;
	
	private string _DataThree;
	
	private string _DataFour;
	
	private System.Nullable<int> _MaxPerRestriction;
	
	private System.Nullable<int> _MinutesRestriction;
	
	private EntityRef<Application> _Application;
	
	private EntityRef<Application_CapabilityType> _Application_CapabilityType;
	
	private EntityRef<EnableRejectLink> _EnableRejectLink;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAppIDChanging(int value);
    partial void OnAppIDChanged();
    partial void OnCapabilityTypeChanging(int value);
    partial void OnCapabilityTypeChanged();
    partial void OnEnabledChanging(bool value);
    partial void OnEnabledChanged();
    partial void OnEncodingKeyChanging(string value);
    partial void OnEncodingKeyChanged();
    partial void OnAddRejectLinkChanging(string value);
    partial void OnAddRejectLinkChanged();
    partial void OnRejectLinkChanging(string value);
    partial void OnRejectLinkChanged();
    partial void OnRejectLinkTextChanging(string value);
    partial void OnRejectLinkTextChanged();
    partial void OnMaxPerRestrictionChanging(System.Nullable<int> value);
    partial void OnMaxPerRestrictionChanged();
    partial void OnMinutesRestrictionChanging(System.Nullable<int> value);
    partial void OnMinutesRestrictionChanged();
    #endregion
	
	public Capability_EmailToUser()
	{
		this._Application = default(EntityRef<Application>);
		this._Application_CapabilityType = default(EntityRef<Application_CapabilityType>);
		this._EnableRejectLink = default(EntityRef<EnableRejectLink>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppID", DbType="Int NOT NULL")]
	public int AppID
	{
		get
		{
			return this._AppID;
		}
		set
		{
			if ((this._AppID != value))
			{
				if (this._Application.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAppIDChanging(value);
				this.SendPropertyChanging();
				this._AppID = value;
				this.SendPropertyChanged("AppID");
				this.OnAppIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CapabilityType", DbType="Int NOT NULL")]
	public int CapabilityType
	{
		get
		{
			return this._CapabilityType;
		}
		set
		{
			if ((this._CapabilityType != value))
			{
				if (this._Application_CapabilityType.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCapabilityTypeChanging(value);
				this.SendPropertyChanging();
				this._CapabilityType = value;
				this.SendPropertyChanged("CapabilityType");
				this.OnCapabilityTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enabled", DbType="Bit NOT NULL")]
	public bool Enabled
	{
		get
		{
			return this._Enabled;
		}
		set
		{
			if ((this._Enabled != value))
			{
				this.OnEnabledChanging(value);
				this.SendPropertyChanging();
				this._Enabled = value;
				this.SendPropertyChanged("Enabled");
				this.OnEnabledChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="DataFormat", Storage="_DataFormat", DbType="NVarChar(MAX)")]
	public string EncodingKey
	{
		get
		{
			return this._DataFormat;
		}
		set
		{
			if ((this._DataFormat != value))
			{
				this.OnEncodingKeyChanging(value);
				this.SendPropertyChanging();
				this._DataFormat = value;
				this.SendPropertyChanged("EncodingKey");
				this.OnEncodingKeyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="DataTwo", Storage="_DataTwo", DbType="NVarChar(MAX)", CanBeNull=false)]
	public string AddRejectLink
	{
		get
		{
			return this._DataTwo;
		}
		set
		{
			if ((this._DataTwo != value))
			{
				this.OnAddRejectLinkChanging(value);
				this.SendPropertyChanging();
				this._DataTwo = value;
				this.SendPropertyChanged("AddRejectLink");
				this.OnAddRejectLinkChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="DataThree", Storage="_DataThree", DbType="NVarChar(MAX)")]
	public string RejectLink
	{
		get
		{
			return this._DataThree;
		}
		set
		{
			if ((this._DataThree != value))
			{
				this.OnRejectLinkChanging(value);
				this.SendPropertyChanging();
				this._DataThree = value;
				this.SendPropertyChanged("RejectLink");
				this.OnRejectLinkChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="DataFour", Storage="_DataFour", DbType="NVarChar(MAX)")]
	public string RejectLinkText
	{
		get
		{
			return this._DataFour;
		}
		set
		{
			if ((this._DataFour != value))
			{
				this.OnRejectLinkTextChanging(value);
				this.SendPropertyChanging();
				this._DataFour = value;
				this.SendPropertyChanged("RejectLinkText");
				this.OnRejectLinkTextChanged();
			}
		}
	}

    [RegularExpression("^([1-9]|[1-9][0-9])$", ErrorMessage = "Between 1 to 99 minutes")]
    [Required]
    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxPerRestriction", DbType="Int")]
	public System.Nullable<int> MaxPerRestriction
	{
		get
		{
			return this._MaxPerRestriction;
		}
		set
		{
			if ((this._MaxPerRestriction != value))
			{
				this.OnMaxPerRestrictionChanging(value);
				this.SendPropertyChanging();
				this._MaxPerRestriction = value;
				this.SendPropertyChanged("MaxPerRestriction");
				this.OnMaxPerRestrictionChanged();
			}
		}
	}

    [RegularExpression("^([1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9])$", ErrorMessage = "Between 1 to 1999 minutes")]
    [Required]
    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinutesRestriction", DbType="Int")]
	public System.Nullable<int> MinutesRestriction
	{
		get
		{
			return this._MinutesRestriction;
		}
		set
		{
			if ((this._MinutesRestriction != value))
			{
				this.OnMinutesRestrictionChanging(value);
				this.SendPropertyChanging();
				this._MinutesRestriction = value;
				this.SendPropertyChanged("MinutesRestriction");
				this.OnMinutesRestrictionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_Capability_EmailToUser", Storage="_Application", ThisKey="AppID", OtherKey="AppId", IsForeignKey=true)]
	public Application Application
	{
		get
		{
			return this._Application.Entity;
		}
		set
		{
			Application previousValue = this._Application.Entity;
			if (((previousValue != value) 
						|| (this._Application.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Application.Entity = null;
					previousValue.Capability_EmailToUsers.Remove(this);
				}
				this._Application.Entity = value;
				if ((value != null))
				{
					value.Capability_EmailToUsers.Add(this);
					this._AppID = value.AppId;
				}
				else
				{
					this._AppID = default(int);
				}
				this.SendPropertyChanged("Application");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_CapabilityType_Capability_EmailToUser", Storage="_Application_CapabilityType", ThisKey="CapabilityType", OtherKey="ID", IsForeignKey=true)]
	public Application_CapabilityType Application_CapabilityType
	{
		get
		{
			return this._Application_CapabilityType.Entity;
		}
		set
		{
			Application_CapabilityType previousValue = this._Application_CapabilityType.Entity;
			if (((previousValue != value) 
						|| (this._Application_CapabilityType.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Application_CapabilityType.Entity = null;
					previousValue.Capability_EmailToUsers.Remove(this);
				}
				this._Application_CapabilityType.Entity = value;
				if ((value != null))
				{
					value.Capability_EmailToUsers.Add(this);
					this._CapabilityType = value.ID;
				}
				else
				{
					this._CapabilityType = default(int);
				}
				this.SendPropertyChanged("Application_CapabilityType");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EnableRejectLink_Capability_EmailToUser", Storage="_EnableRejectLink", ThisKey="AddRejectLink", OtherKey="Name", IsForeignKey=true)]
	public EnableRejectLink EnableRejectLink
	{
		get
		{
			return this._EnableRejectLink.Entity;
		}
		set
		{
			EnableRejectLink previousValue = this._EnableRejectLink.Entity;
			if (((previousValue != value) 
						|| (this._EnableRejectLink.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._EnableRejectLink.Entity = null;
					previousValue.Capability_EmailToUsers.Remove(this);
				}
				this._EnableRejectLink.Entity = value;
				if ((value != null))
				{
					value.Capability_EmailToUsers.Add(this);
					this._DataTwo = value.Name;
				}
				else
				{
					this._DataTwo = default(string);
				}
				this.SendPropertyChanged("EnableRejectLink");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ApplicationCapability")]
public partial class Capability_EmailToVendor : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private int _AppID;
	
	private int _CapabilityType;
	
	private bool _Enabled;
	
	private string _Data;
	
	private string _DataFormat;
	
	private string _DataTwo;
	
	private System.Nullable<int> _MaxPerRestriction;
	
	private System.Nullable<int> _MinutesRestriction;
	
	private EntityRef<Application> _Application;
	
	private EntityRef<Application_CapabilityType> _Application_CapabilityType;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAppIDChanging(int value);
    partial void OnAppIDChanged();
    partial void OnCapabilityTypeChanging(int value);
    partial void OnCapabilityTypeChanged();
    partial void OnEnabledChanging(bool value);
    partial void OnEnabledChanged();
    partial void OnMailingListChanging(string value);
    partial void OnMailingListChanged();
    partial void OnHTMLFormChanging(string value);
    partial void OnHTMLFormChanged();
    partial void OnMailSubjectChanging(string value);
    partial void OnMailSubjectChanged();
    partial void OnMaxPerRestrictionChanging(System.Nullable<int> value);
    partial void OnMaxPerRestrictionChanged();
    partial void OnMinutesRestrictionChanging(System.Nullable<int> value);
    partial void OnMinutesRestrictionChanged();
    #endregion
	
	public Capability_EmailToVendor()
	{
		this._Application = default(EntityRef<Application>);
		this._Application_CapabilityType = default(EntityRef<Application_CapabilityType>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppID", DbType="Int NOT NULL")]
	public int AppID
	{
		get
		{
			return this._AppID;
		}
		set
		{
			if ((this._AppID != value))
			{
				if (this._Application.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAppIDChanging(value);
				this.SendPropertyChanging();
				this._AppID = value;
				this.SendPropertyChanged("AppID");
				this.OnAppIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CapabilityType", DbType="Int NOT NULL")]
	public int CapabilityType
	{
		get
		{
			return this._CapabilityType;
		}
		set
		{
			if ((this._CapabilityType != value))
			{
				if (this._Application_CapabilityType.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCapabilityTypeChanging(value);
				this.SendPropertyChanging();
				this._CapabilityType = value;
				this.SendPropertyChanged("CapabilityType");
				this.OnCapabilityTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enabled", DbType="Bit NOT NULL")]
	public bool Enabled
	{
		get
		{
			return this._Enabled;
		}
		set
		{
			if ((this._Enabled != value))
			{
				this.OnEnabledChanging(value);
				this.SendPropertyChanging();
				this._Enabled = value;
				this.SendPropertyChanged("Enabled");
				this.OnEnabledChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Data", Storage="_Data", DbType="NVarChar(MAX)")]
	public string MailingList
	{
		get
		{
			return this._Data;
		}
		set
		{
			if ((this._Data != value))
			{
				this.OnMailingListChanging(value);
				this.SendPropertyChanging();
				this._Data = value;
				this.SendPropertyChanged("MailingList");
				this.OnMailingListChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="DataFormat", Storage="_DataFormat", DbType="NVarChar(MAX)")]
	public string HTMLForm
	{
		get
		{
			return this._DataFormat;
		}
		set
		{
			if ((this._DataFormat != value))
			{
				this.OnHTMLFormChanging(value);
				this.SendPropertyChanging();
				this._DataFormat = value;
				this.SendPropertyChanged("HTMLForm");
				this.OnHTMLFormChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="DataTwo", Storage="_DataTwo", DbType="NVarChar(MAX)")]
	public string MailSubject
	{
		get
		{
			return this._DataTwo;
		}
		set
		{
			if ((this._DataTwo != value))
			{
				this.OnMailSubjectChanging(value);
				this.SendPropertyChanging();
				this._DataTwo = value;
				this.SendPropertyChanged("MailSubject");
				this.OnMailSubjectChanged();
			}
		}
	}
    [RegularExpression("^([1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9])$", ErrorMessage = "Between 1 to 19999 minutes")]
    [Required]
    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxPerRestriction", DbType="Int")]
	public System.Nullable<int> MaxPerRestriction
	{
		get
		{
			return this._MaxPerRestriction;
		}
		set
		{
			if ((this._MaxPerRestriction != value))
			{
				this.OnMaxPerRestrictionChanging(value);
				this.SendPropertyChanging();
				this._MaxPerRestriction = value;
				this.SendPropertyChanged("MaxPerRestriction");
				this.OnMaxPerRestrictionChanged();
			}
		}
	}
    [RegularExpression("^([1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9])$", ErrorMessage = "Between 1 to 1999 minutes")]
    [Required]
    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinutesRestriction", DbType="Int")]
	public System.Nullable<int> MinutesRestriction
	{
		get
		{
			return this._MinutesRestriction;
		}
		set
		{
			if ((this._MinutesRestriction != value))
			{
				this.OnMinutesRestrictionChanging(value);
				this.SendPropertyChanging();
				this._MinutesRestriction = value;
				this.SendPropertyChanged("MinutesRestriction");
				this.OnMinutesRestrictionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_Capability_EmailToVendor", Storage="_Application", ThisKey="AppID", OtherKey="AppId", IsForeignKey=true)]
	public Application Application
	{
		get
		{
			return this._Application.Entity;
		}
		set
		{
			Application previousValue = this._Application.Entity;
			if (((previousValue != value) 
						|| (this._Application.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Application.Entity = null;
					previousValue.Capability_EmailToVendors.Remove(this);
				}
				this._Application.Entity = value;
				if ((value != null))
				{
					value.Capability_EmailToVendors.Add(this);
					this._AppID = value.AppId;
				}
				else
				{
					this._AppID = default(int);
				}
				this.SendPropertyChanged("Application");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_CapabilityType_Capability_EmailToVendor", Storage="_Application_CapabilityType", ThisKey="CapabilityType", OtherKey="ID", IsForeignKey=true)]
	public Application_CapabilityType Application_CapabilityType
	{
		get
		{
			return this._Application_CapabilityType.Entity;
		}
		set
		{
			Application_CapabilityType previousValue = this._Application_CapabilityType.Entity;
			if (((previousValue != value) 
						|| (this._Application_CapabilityType.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Application_CapabilityType.Entity = null;
					previousValue.Capability_EmailToVendors.Remove(this);
				}
				this._Application_CapabilityType.Entity = value;
				if ((value != null))
				{
					value.Capability_EmailToVendors.Add(this);
					this._CapabilityType = value.ID;
				}
				else
				{
					this._CapabilityType = default(int);
				}
				this.SendPropertyChanged("Application_CapabilityType");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ApplicationCapability")]
public partial class Capability_ImageUpload : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private int _AppID;
	
	private int _CapabilityType;
	
	private bool _Enabled;
	
	private string _Container;
	
	private EntityRef<Application> _Application;
	
	private EntityRef<Application_CapabilityType> _Application_CapabilityType;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAppIDChanging(int value);
    partial void OnAppIDChanged();
    partial void OnCapabilityTypeChanging(int value);
    partial void OnCapabilityTypeChanged();
    partial void OnEnabledChanging(bool value);
    partial void OnEnabledChanged();
    partial void OnContainerChanging(string value);
    partial void OnContainerChanged();
    #endregion
	
	public Capability_ImageUpload()
	{
		this._Application = default(EntityRef<Application>);
		this._Application_CapabilityType = default(EntityRef<Application_CapabilityType>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppID", DbType="Int NOT NULL")]
	public int AppID
	{
		get
		{
			return this._AppID;
		}
		set
		{
			if ((this._AppID != value))
			{
				if (this._Application.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAppIDChanging(value);
				this.SendPropertyChanging();
				this._AppID = value;
				this.SendPropertyChanged("AppID");
				this.OnAppIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CapabilityType", DbType="Int NOT NULL")]
	public int CapabilityType
	{
		get
		{
			return this._CapabilityType;
		}
		set
		{
			if ((this._CapabilityType != value))
			{
				if (this._Application_CapabilityType.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCapabilityTypeChanging(value);
				this.SendPropertyChanging();
				this._CapabilityType = value;
				this.SendPropertyChanged("CapabilityType");
				this.OnCapabilityTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enabled", DbType="Bit NOT NULL")]
	public bool Enabled
	{
		get
		{
			return this._Enabled;
		}
		set
		{
			if ((this._Enabled != value))
			{
				this.OnEnabledChanging(value);
				this.SendPropertyChanging();
				this._Enabled = value;
				this.SendPropertyChanged("Enabled");
				this.OnEnabledChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Data", Storage="_Container", DbType="NVarChar(MAX)", CanBeNull=false)]
	public string Container
	{
		get
		{
			return this._Container;
		}
		set
		{
			if ((this._Container != value))
			{
				this.OnContainerChanging(value);
				this.SendPropertyChanging();
				this._Container = value;
				this.SendPropertyChanged("Container");
				this.OnContainerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_Capability_ImageUpload", Storage="_Application", ThisKey="AppID", OtherKey="AppId", IsForeignKey=true)]
	public Application Application
	{
		get
		{
			return this._Application.Entity;
		}
		set
		{
			Application previousValue = this._Application.Entity;
			if (((previousValue != value) 
						|| (this._Application.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Application.Entity = null;
					previousValue.Capability_ImageUploads.Remove(this);
				}
				this._Application.Entity = value;
				if ((value != null))
				{
					value.Capability_ImageUploads.Add(this);
					this._AppID = value.AppId;
				}
				else
				{
					this._AppID = default(int);
				}
				this.SendPropertyChanged("Application");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_CapabilityType_Capability_ImageUpload", Storage="_Application_CapabilityType", ThisKey="CapabilityType", OtherKey="ID", IsForeignKey=true)]
	public Application_CapabilityType Application_CapabilityType
	{
		get
		{
			return this._Application_CapabilityType.Entity;
		}
		set
		{
			Application_CapabilityType previousValue = this._Application_CapabilityType.Entity;
			if (((previousValue != value) 
						|| (this._Application_CapabilityType.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Application_CapabilityType.Entity = null;
					previousValue.Capability_ImageUploads.Remove(this);
				}
				this._Application_CapabilityType.Entity = value;
				if ((value != null))
				{
					value.Capability_ImageUploads.Add(this);
					this._CapabilityType = value.ID;
				}
				else
				{
					this._CapabilityType = default(int);
				}
				this.SendPropertyChanged("Application_CapabilityType");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ApplicationCapability")]
public partial class Capability_OTPView : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private int _AppID;
	
	private int _CapabilityType;
	
	private bool _Enabled;
	
	private string _Data;
	
	private string _DataFormat;
	
	private string _DataTwo;
	
	private string _DataThree;
	
	private string _DataFour;
	
	private System.Nullable<int> _MaxPerRestriction;
	
	private System.Nullable<int> _MinutesRestriction;
	
	private EntityRef<Application> _Application;
	
	private EntityRef<Application_CapabilityType> _Application_CapabilityType;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAppIDChanging(int value);
    partial void OnAppIDChanged();
    partial void OnCapabilityTypeChanging(int value);
    partial void OnCapabilityTypeChanged();
    partial void OnEnabledChanging(bool value);
    partial void OnEnabledChanged();
    partial void OnDataChanging(string value);
    partial void OnDataChanged();
    partial void OnDataFormatChanging(string value);
    partial void OnDataFormatChanged();
    partial void OnDataTwoChanging(string value);
    partial void OnDataTwoChanged();
    partial void OnDataThreeChanging(string value);
    partial void OnDataThreeChanged();
    partial void OnDataFourChanging(string value);
    partial void OnDataFourChanged();
    partial void OnMaxPerRestrictionChanging(System.Nullable<int> value);
    partial void OnMaxPerRestrictionChanged();
    partial void OnMinutesRestrictionChanging(System.Nullable<int> value);
    partial void OnMinutesRestrictionChanged();
    #endregion
	
	public Capability_OTPView()
	{
		this._Application = default(EntityRef<Application>);
		this._Application_CapabilityType = default(EntityRef<Application_CapabilityType>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppID", DbType="Int NOT NULL")]
	public int AppID
	{
		get
		{
			return this._AppID;
		}
		set
		{
			if ((this._AppID != value))
			{
				if (this._Application.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAppIDChanging(value);
				this.SendPropertyChanging();
				this._AppID = value;
				this.SendPropertyChanged("AppID");
				this.OnAppIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CapabilityType", DbType="Int NOT NULL")]
	public int CapabilityType
	{
		get
		{
			return this._CapabilityType;
		}
		set
		{
			if ((this._CapabilityType != value))
			{
				if (this._Application_CapabilityType.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCapabilityTypeChanging(value);
				this.SendPropertyChanging();
				this._CapabilityType = value;
				this.SendPropertyChanged("CapabilityType");
				this.OnCapabilityTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enabled", DbType="Bit NOT NULL")]
	public bool Enabled
	{
		get
		{
			return this._Enabled;
		}
		set
		{
			if ((this._Enabled != value))
			{
				this.OnEnabledChanging(value);
				this.SendPropertyChanging();
				this._Enabled = value;
				this.SendPropertyChanged("Enabled");
				this.OnEnabledChanged();
			}
		}
	}
	[FilterUIHint("Search")]
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="NVarChar(MAX)")]
	public string Data
	{
		get
		{
			return this._Data;
		}
		set
		{
			if ((this._Data != value))
			{
				this.OnDataChanging(value);
				this.SendPropertyChanging();
				this._Data = value;
				this.SendPropertyChanged("Data");
				this.OnDataChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataFormat", DbType="NVarChar(MAX)")]
	public string DataFormat
	{
		get
		{
			return this._DataFormat;
		}
		set
		{
			if ((this._DataFormat != value))
			{
				this.OnDataFormatChanging(value);
				this.SendPropertyChanging();
				this._DataFormat = value;
				this.SendPropertyChanged("DataFormat");
				this.OnDataFormatChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataTwo", DbType="NVarChar(MAX)")]
	public string DataTwo
	{
		get
		{
			return this._DataTwo;
		}
		set
		{
			if ((this._DataTwo != value))
			{
				this.OnDataTwoChanging(value);
				this.SendPropertyChanging();
				this._DataTwo = value;
				this.SendPropertyChanged("DataTwo");
				this.OnDataTwoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataThree", DbType="NVarChar(MAX)")]
	public string DataThree
	{
		get
		{
			return this._DataThree;
		}
		set
		{
			if ((this._DataThree != value))
			{
				this.OnDataThreeChanging(value);
				this.SendPropertyChanging();
				this._DataThree = value;
				this.SendPropertyChanged("DataThree");
				this.OnDataThreeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataFour", DbType="NVarChar(MAX)")]
	public string DataFour
	{
		get
		{
			return this._DataFour;
		}
		set
		{
			if ((this._DataFour != value))
			{
				this.OnDataFourChanging(value);
				this.SendPropertyChanging();
				this._DataFour = value;
				this.SendPropertyChanged("DataFour");
				this.OnDataFourChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxPerRestriction", DbType="Int")]
	public System.Nullable<int> MaxPerRestriction
	{
		get
		{
			return this._MaxPerRestriction;
		}
		set
		{
			if ((this._MaxPerRestriction != value))
			{
				this.OnMaxPerRestrictionChanging(value);
				this.SendPropertyChanging();
				this._MaxPerRestriction = value;
				this.SendPropertyChanged("MaxPerRestriction");
				this.OnMaxPerRestrictionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinutesRestriction", DbType="Int")]
	public System.Nullable<int> MinutesRestriction
	{
		get
		{
			return this._MinutesRestriction;
		}
		set
		{
			if ((this._MinutesRestriction != value))
			{
				this.OnMinutesRestrictionChanging(value);
				this.SendPropertyChanging();
				this._MinutesRestriction = value;
				this.SendPropertyChanged("MinutesRestriction");
				this.OnMinutesRestrictionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_Capability_OTPView", Storage="_Application", ThisKey="AppID", OtherKey="AppId", IsForeignKey=true)]
	public Application Application
	{
		get
		{
			return this._Application.Entity;
		}
		set
		{
			Application previousValue = this._Application.Entity;
			if (((previousValue != value) 
						|| (this._Application.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Application.Entity = null;
					previousValue.Capability_OTPViews.Remove(this);
				}
				this._Application.Entity = value;
				if ((value != null))
				{
					value.Capability_OTPViews.Add(this);
					this._AppID = value.AppId;
				}
				else
				{
					this._AppID = default(int);
				}
				this.SendPropertyChanged("Application");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_CapabilityType_Capability_OTPView", Storage="_Application_CapabilityType", ThisKey="CapabilityType", OtherKey="ID", IsForeignKey=true)]
	public Application_CapabilityType Application_CapabilityType
	{
		get
		{
			return this._Application_CapabilityType.Entity;
		}
		set
		{
			Application_CapabilityType previousValue = this._Application_CapabilityType.Entity;
			if (((previousValue != value) 
						|| (this._Application_CapabilityType.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Application_CapabilityType.Entity = null;
					previousValue.Capability_OTPViews.Remove(this);
				}
				this._Application_CapabilityType.Entity = value;
				if ((value != null))
				{
					value.Capability_OTPViews.Add(this);
					this._CapabilityType = value.ID;
				}
				else
				{
					this._CapabilityType = default(int);
				}
				this.SendPropertyChanged("Application_CapabilityType");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_Admin_Last_X_Days_LogSending")]
public partial class Admin_X_Days_LogSending : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Nullable<long> _ID = default(System.Nullable<long>);
	
	private int _AppID;
	
	private string _ApplicationName;
	
	private System.Nullable<System.DateTime> _StartAt;
	
	private System.Nullable<System.DateTime> _EndsAt;
	
	private int _logtypeid;
	
	private string _LogName;
	
	private System.Nullable<System.DateTime> _YearMonth;
	
	private System.Nullable<int> _RealTotal;
	
	private System.Nullable<int> _StraightCount;
	
	private EntityRef<VCMS_AppID> _VCMS_AppID;
	
	private EntityRef<VCMS_SendingLogType> _VCMS_SendingLogType;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAppIDChanging(int value);
    partial void OnAppIDChanged();
    partial void OnApplicationNameChanging(string value);
    partial void OnApplicationNameChanged();
    partial void OnStartAtChanging(System.Nullable<System.DateTime> value);
    partial void OnStartAtChanged();
    partial void OnEndsAtChanging(System.Nullable<System.DateTime> value);
    partial void OnEndsAtChanged();
    partial void OnLog_TypeChanging(int value);
    partial void OnLog_TypeChanged();
    partial void OnLogNameChanging(string value);
    partial void OnLogNameChanged();
    partial void OnYearMonthChanging(System.Nullable<System.DateTime> value);
    partial void OnYearMonthChanged();
    partial void OnRealTotalChanging(System.Nullable<int> value);
    partial void OnRealTotalChanged();
    partial void OnStraightCountChanging(System.Nullable<int> value);
    partial void OnStraightCountChanged();
    #endregion
	
	public Admin_X_Days_LogSending()
	{
		this._VCMS_AppID = default(EntityRef<VCMS_AppID>);
		this._VCMS_SendingLogType = default(EntityRef<VCMS_SendingLogType>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
	public System.Nullable<long> ID
	{
		get
		{
			return this._ID;
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppID", DbType="Int")]
	public int AppID
	{
		get
		{
			return this._AppID;
		}
		set
		{
			if ((this._AppID != value))
			{
				if (this._VCMS_AppID.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAppIDChanging(value);
				this.SendPropertyChanging();
				this._AppID = value;
				this.SendPropertyChanged("AppID");
				this.OnAppIDChanged();
			}
		}
	}
    [FilterUIHint("Search")]
    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationName", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
	public string ApplicationName
	{
		get
		{
			return this._ApplicationName;
		}
		set
		{
			if ((this._ApplicationName != value))
			{
				this.OnApplicationNameChanging(value);
				this.SendPropertyChanging();
				this._ApplicationName = value;
				this.SendPropertyChanged("ApplicationName");
				this.OnApplicationNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartAt", DbType="DateTime")]
	public System.Nullable<System.DateTime> StartAt
	{
		get
		{
			return this._StartAt;
		}
		set
		{
			if ((this._StartAt != value))
			{
				this.OnStartAtChanging(value);
				this.SendPropertyChanging();
				this._StartAt = value;
				this.SendPropertyChanged("StartAt");
				this.OnStartAtChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndsAt", DbType="DateTime")]
	public System.Nullable<System.DateTime> EndsAt
	{
		get
		{
			return this._EndsAt;
		}
		set
		{
			if ((this._EndsAt != value))
			{
				this.OnEndsAtChanging(value);
				this.SendPropertyChanging();
				this._EndsAt = value;
				this.SendPropertyChanged("EndsAt");
				this.OnEndsAtChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="logtypeid", Storage="_logtypeid", DbType="Int")]
	public int Log_Type
	{
		get
		{
			return this._logtypeid;
		}
		set
		{
			if ((this._logtypeid != value))
			{
				this.OnLog_TypeChanging(value);
				this.SendPropertyChanging();
				this._logtypeid = value;
				this.SendPropertyChanged("Log_Type");
				this.OnLog_TypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string LogName
	{
		get
		{
			return this._LogName;
		}
		set
		{
			if ((this._LogName != value))
			{
				this.OnLogNameChanging(value);
				this.SendPropertyChanging();
				this._LogName = value;
				this.SendPropertyChanged("LogName");
				this.OnLogNameChanged();
			}
		}
	}
    [FilterUIHint("Date")]
    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearMonth", DbType="Date")]
	public System.Nullable<System.DateTime> YearMonth
	{
		get
		{
			return this._YearMonth;
		}
		set
		{
			if ((this._YearMonth != value))
			{
				this.OnYearMonthChanging(value);
				this.SendPropertyChanging();
				this._YearMonth = value;
				this.SendPropertyChanged("YearMonth");
				this.OnYearMonthChanged();
			}
		}
	}
    [FilterUIHint("Int_Range")]
    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealTotal", DbType="Int")]
	public System.Nullable<int> RealTotal
	{
		get
		{
			return this._RealTotal;
		}
		set
		{
			if ((this._RealTotal != value))
			{
				this.OnRealTotalChanging(value);
				this.SendPropertyChanging();
				this._RealTotal = value;
				this.SendPropertyChanged("RealTotal");
				this.OnRealTotalChanged();
			}
		}
	}
    [FilterUIHint("Int_Range")]
    [global::System.Data.Linq.Mapping.ColumnAttribute(Name="SataightCount", Storage="_StraightCount", DbType="Int")]
	public System.Nullable<int> StraightCount
	{
		get
		{
			return this._StraightCount;
		}
		set
		{
			if ((this._StraightCount != value))
			{
				this.OnStraightCountChanging(value);
				this.SendPropertyChanging();
				this._StraightCount = value;
				this.SendPropertyChanged("StraightCount");
				this.OnStraightCountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VCMS_AppID_Admin_X_Days_LogSending", Storage="_VCMS_AppID", ThisKey="AppID", OtherKey="AppID", IsForeignKey=true)]
	public VCMS_AppID VCMS_AppID
	{
		get
		{
			return this._VCMS_AppID.Entity;
		}
		set
		{
			VCMS_AppID previousValue = this._VCMS_AppID.Entity;
			if (((previousValue != value) 
						|| (this._VCMS_AppID.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._VCMS_AppID.Entity = null;
					previousValue.Admin_X_Days_LogSendings.Remove(this);
				}
				this._VCMS_AppID.Entity = value;
				if ((value != null))
				{
					value.Admin_X_Days_LogSendings.Add(this);
					this._AppID = value.AppID;
				}
				else
				{
					this._AppID = default(int);
				}
				this.SendPropertyChanged("VCMS_AppID");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VCMS_SendingLogType_Admin_X_Days_LogSending", Storage="_VCMS_SendingLogType", ThisKey="Log_Type", OtherKey="ID", IsForeignKey=true)]
	public VCMS_SendingLogType VCMS_SendingLogType
	{
		get
		{
			return this._VCMS_SendingLogType.Entity;
		}
		set
		{
			VCMS_SendingLogType previousValue = this._VCMS_SendingLogType.Entity;
			if (((previousValue != value) 
						|| (this._VCMS_SendingLogType.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._VCMS_SendingLogType.Entity = null;
					previousValue.Admin_X_Days_LogSendings.Remove(this);
				}
				this._VCMS_SendingLogType.Entity = value;
				if ((value != null))
				{
					value.Admin_X_Days_LogSendings.Add(this);
					this._logtypeid = value.ID;
				}
				else
				{
					this._logtypeid = default(int);
				}
				this.SendPropertyChanged("VCMS_SendingLogType");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CMS_v_SMS_Provider")]
public partial class SMS_Provider : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _MNGProviderTypeName;
	
	private string _UserName;
	
	private string _Password;
	
	private string _CellActFrom;
	
	private string _ClickATell_AppID;
	
	private int _ProviderTypeID;
	
	private System.Nullable<System.DateTime> _InsertDate;
	
	private EntitySet<Capability_SMS> _Capability_SMS;
	
	private EntityRef<SMSProviderType> _SMSProviderType;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMNGProviderTypeNameChanging(string value);
    partial void OnMNGProviderTypeNameChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnCellActFromChanging(string value);
    partial void OnCellActFromChanged();
    partial void OnClickATell_AppIDChanging(string value);
    partial void OnClickATell_AppIDChanged();
    partial void OnProviderTypeIDChanging(int value);
    partial void OnProviderTypeIDChanged();
    partial void OnInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertDateChanged();
    #endregion
	
	public SMS_Provider()
	{
		this._Capability_SMS = new EntitySet<Capability_SMS>(new Action<Capability_SMS>(this.attach_Capability_SMS), new Action<Capability_SMS>(this.detach_Capability_SMS));
		this._SMSProviderType = default(EntityRef<SMSProviderType>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MNGProviderTypeName", DbType="VarChar(50)", CanBeNull=false)]
	public string MNGProviderTypeName
	{
		get
		{
			return this._MNGProviderTypeName;
		}
		set
		{
			if ((this._MNGProviderTypeName != value))
			{
				this.OnMNGProviderTypeNameChanging(value);
				this.SendPropertyChanging();
				this._MNGProviderTypeName = value;
				this.SendPropertyChanged("MNGProviderTypeName");
				this.OnMNGProviderTypeNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string UserName
	{
		get
		{
			return this._UserName;
		}
		set
		{
			if ((this._UserName != value))
			{
				this.OnUserNameChanging(value);
				this.SendPropertyChanging();
				this._UserName = value;
				this.SendPropertyChanged("UserName");
				this.OnUserNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellActFrom", DbType="VarChar(50)")]
	public string CellActFrom
	{
		get
		{
			return this._CellActFrom;
		}
		set
		{
			if ((this._CellActFrom != value))
			{
				this.OnCellActFromChanging(value);
				this.SendPropertyChanging();
				this._CellActFrom = value;
				this.SendPropertyChanged("CellActFrom");
				this.OnCellActFromChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClickATell_AppID", DbType="VarChar(50)")]
	public string ClickATell_AppID
	{
		get
		{
			return this._ClickATell_AppID;
		}
		set
		{
			if ((this._ClickATell_AppID != value))
			{
				this.OnClickATell_AppIDChanging(value);
				this.SendPropertyChanging();
				this._ClickATell_AppID = value;
				this.SendPropertyChanged("ClickATell_AppID");
				this.OnClickATell_AppIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderTypeID", DbType="Int NOT NULL")]
	public int ProviderTypeID
	{
		get
		{
			return this._ProviderTypeID;
		}
		set
		{
			if ((this._ProviderTypeID != value))
			{
				if (this._SMSProviderType.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnProviderTypeIDChanging(value);
				this.SendPropertyChanging();
				this._ProviderTypeID = value;
				this.SendPropertyChanged("ProviderTypeID");
				this.OnProviderTypeIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> InsertDate
	{
		get
		{
			return this._InsertDate;
		}
		set
		{
			if ((this._InsertDate != value))
			{
				this.OnInsertDateChanging(value);
				this.SendPropertyChanging();
				this._InsertDate = value;
				this.SendPropertyChanged("InsertDate");
				this.OnInsertDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SMS_Provider_Capability_SMS", Storage="_Capability_SMS", ThisKey="ID", OtherKey="SMSProviderID")]
	public EntitySet<Capability_SMS> Capability_SMS
	{
		get
		{
			return this._Capability_SMS;
		}
		set
		{
			this._Capability_SMS.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SMSProviderType_SMS_Provider", Storage="_SMSProviderType", ThisKey="ProviderTypeID", OtherKey="ID", IsForeignKey=true)]
	public SMSProviderType SMSProviderType
	{
		get
		{
			return this._SMSProviderType.Entity;
		}
		set
		{
			SMSProviderType previousValue = this._SMSProviderType.Entity;
			if (((previousValue != value) 
						|| (this._SMSProviderType.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SMSProviderType.Entity = null;
					previousValue.SMS_Providers.Remove(this);
				}
				this._SMSProviderType.Entity = value;
				if ((value != null))
				{
					value.SMS_Providers.Add(this);
					this._ProviderTypeID = value.ID;
				}
				else
				{
					this._ProviderTypeID = default(int);
				}
				this.SendPropertyChanged("SMSProviderType");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Capability_SMS(Capability_SMS entity)
	{
		this.SendPropertyChanging();
		entity.SMS_Provider = this;
	}
	
	private void detach_Capability_SMS(Capability_SMS entity)
	{
		this.SendPropertyChanging();
		entity.SMS_Provider = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.v_cms_logsending_appID")]
public partial class VCMS_AppID : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _AppID;
	
	private string _Name;
	
	private EntitySet<Admin_X_Days_LogSending> _Admin_X_Days_LogSendings;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAppIDChanging(int value);
    partial void OnAppIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
	
	public VCMS_AppID()
	{
		this._Admin_X_Days_LogSendings = new EntitySet<Admin_X_Days_LogSending>(new Action<Admin_X_Days_LogSending>(this.attach_Admin_X_Days_LogSendings), new Action<Admin_X_Days_LogSending>(this.detach_Admin_X_Days_LogSendings));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppID", DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int AppID
	{
		get
		{
			return this._AppID;
		}
		set
		{
			if ((this._AppID != value))
			{
				this.OnAppIDChanging(value);
				this.SendPropertyChanging();
				this._AppID = value;
				this.SendPropertyChanged("AppID");
				this.OnAppIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VCMS_AppID_Admin_X_Days_LogSending", Storage="_Admin_X_Days_LogSendings", ThisKey="AppID", OtherKey="AppID")]
	public EntitySet<Admin_X_Days_LogSending> Admin_X_Days_LogSendings
	{
		get
		{
			return this._Admin_X_Days_LogSendings;
		}
		set
		{
			this._Admin_X_Days_LogSendings.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Admin_X_Days_LogSendings(Admin_X_Days_LogSending entity)
	{
		this.SendPropertyChanging();
		entity.VCMS_AppID = this;
	}
	
	private void detach_Admin_X_Days_LogSendings(Admin_X_Days_LogSending entity)
	{
		this.SendPropertyChanging();
		entity.VCMS_AppID = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.v_cms_logsending_logtype")]
public partial class VCMS_SendingLogType : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Name;
	
	private EntitySet<Admin_X_Days_LogSending> _Admin_X_Days_LogSendings;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
	
	public VCMS_SendingLogType()
	{
		this._Admin_X_Days_LogSendings = new EntitySet<Admin_X_Days_LogSending>(new Action<Admin_X_Days_LogSending>(this.attach_Admin_X_Days_LogSendings), new Action<Admin_X_Days_LogSending>(this.detach_Admin_X_Days_LogSendings));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VCMS_SendingLogType_Admin_X_Days_LogSending", Storage="_Admin_X_Days_LogSendings", ThisKey="ID", OtherKey="Log_Type")]
	public EntitySet<Admin_X_Days_LogSending> Admin_X_Days_LogSendings
	{
		get
		{
			return this._Admin_X_Days_LogSendings;
		}
		set
		{
			this._Admin_X_Days_LogSendings.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Admin_X_Days_LogSendings(Admin_X_Days_LogSending entity)
	{
		this.SendPropertyChanging();
		entity.VCMS_SendingLogType = this;
	}
	
	private void detach_Admin_X_Days_LogSendings(Admin_X_Days_LogSending entity)
	{
		this.SendPropertyChanging();
		entity.VCMS_SendingLogType = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.v_cms_logsending_alllogtype")]
public partial class v_cms_logsending_alllogtype : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Name;
	
	private EntitySet<LogSending> _LogSendings;
	
	private EntitySet<LogSending_Viewer> _LogSending_Viewers;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
	
	public v_cms_logsending_alllogtype()
	{
		this._LogSendings = new EntitySet<LogSending>(new Action<LogSending>(this.attach_LogSendings), new Action<LogSending>(this.detach_LogSendings));
		this._LogSending_Viewers = new EntitySet<LogSending_Viewer>(new Action<LogSending_Viewer>(this.attach_LogSending_Viewers), new Action<LogSending_Viewer>(this.detach_LogSending_Viewers));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="v_cms_logsending_alllogtype_LogSending", Storage="_LogSendings", ThisKey="ID", OtherKey="LogTypeID")]
	public EntitySet<LogSending> LogSendings
	{
		get
		{
			return this._LogSendings;
		}
		set
		{
			this._LogSendings.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="v_cms_logsending_alllogtype_LogSending_Viewer", Storage="_LogSending_Viewers", ThisKey="ID", OtherKey="LogTypeID")]
	public EntitySet<LogSending_Viewer> LogSending_Viewers
	{
		get
		{
			return this._LogSending_Viewers;
		}
		set
		{
			this._LogSending_Viewers.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_LogSendings(LogSending entity)
	{
		this.SendPropertyChanging();
		entity.LogTypeSending = this;
	}
	
	private void detach_LogSendings(LogSending entity)
	{
		this.SendPropertyChanging();
		entity.LogTypeSending = null;
	}
	
	private void attach_LogSending_Viewers(LogSending_Viewer entity)
	{
		this.SendPropertyChanging();
		entity.LogTypeSending = this;
	}
	
	private void detach_LogSending_Viewers(LogSending_Viewer entity)
	{
		this.SendPropertyChanging();
		entity.LogTypeSending = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.v_cms_capabilityRejectIdentity")]
public partial class v_cms_capabilityRejectIdentity : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Name;
	
	private EntitySet<ApplicationRejectNewsletterIdentity> _ApplicationRejectNewsletterIdentities;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
	
	public v_cms_capabilityRejectIdentity()
	{
		this._ApplicationRejectNewsletterIdentities = new EntitySet<ApplicationRejectNewsletterIdentity>(new Action<ApplicationRejectNewsletterIdentity>(this.attach_ApplicationRejectNewsletterIdentities), new Action<ApplicationRejectNewsletterIdentity>(this.detach_ApplicationRejectNewsletterIdentities));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="v_cms_capabilityRejectIdentity_ApplicationRejectNewsletterIdentity", Storage="_ApplicationRejectNewsletterIdentities", ThisKey="ID", OtherKey="CapabilityTypeID")]
	public EntitySet<ApplicationRejectNewsletterIdentity> ApplicationRejectNewsletterIdentities
	{
		get
		{
			return this._ApplicationRejectNewsletterIdentities;
		}
		set
		{
			this._ApplicationRejectNewsletterIdentities.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_ApplicationRejectNewsletterIdentities(ApplicationRejectNewsletterIdentity entity)
	{
		this.SendPropertyChanging();
		entity.VRejectCapabilityType = this;
	}
	
	private void detach_ApplicationRejectNewsletterIdentities(ApplicationRejectNewsletterIdentity entity)
	{
		this.SendPropertyChanging();
		entity.VRejectCapabilityType = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.v_cms_capabilityIdentity")]
public partial class v_cms_capabilityIdentity : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Name;
	
	private EntitySet<ApplicationCapabilityIdentity> _ApplicationCapabilityIdentities;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
	
	public v_cms_capabilityIdentity()
	{
		this._ApplicationCapabilityIdentities = new EntitySet<ApplicationCapabilityIdentity>(new Action<ApplicationCapabilityIdentity>(this.attach_ApplicationCapabilityIdentities), new Action<ApplicationCapabilityIdentity>(this.detach_ApplicationCapabilityIdentities));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="v_cms_capabilityIdentity_ApplicationCapabilityIdentity", Storage="_ApplicationCapabilityIdentities", ThisKey="ID", OtherKey="CapabilityTypeID")]
	public EntitySet<ApplicationCapabilityIdentity> ApplicationCapabilityIdentities
	{
		get
		{
			return this._ApplicationCapabilityIdentities;
		}
		set
		{
			this._ApplicationCapabilityIdentities.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_ApplicationCapabilityIdentities(ApplicationCapabilityIdentity entity)
	{
		this.SendPropertyChanging();
		entity.VCapabilityType = this;
	}
	
	private void detach_ApplicationCapabilityIdentities(ApplicationCapabilityIdentity entity)
	{
		this.SendPropertyChanging();
		entity.VCapabilityType = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.v_cms_Identity_AppID")]
public partial class v_cms_Identity_AppID : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _AppID;
	
	private string _Name;
	
	private EntitySet<ApplicationCapabilityIdentity> _ApplicationCapabilityIdentities;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAppIDChanging(int value);
    partial void OnAppIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
	
	public v_cms_Identity_AppID()
	{
		this._ApplicationCapabilityIdentities = new EntitySet<ApplicationCapabilityIdentity>(new Action<ApplicationCapabilityIdentity>(this.attach_ApplicationCapabilityIdentities), new Action<ApplicationCapabilityIdentity>(this.detach_ApplicationCapabilityIdentities));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppID", DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int AppID
	{
		get
		{
			return this._AppID;
		}
		set
		{
			if ((this._AppID != value))
			{
				this.OnAppIDChanging(value);
				this.SendPropertyChanging();
				this._AppID = value;
				this.SendPropertyChanged("AppID");
				this.OnAppIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="v_cms_Identity_AppID_ApplicationCapabilityIdentity", Storage="_ApplicationCapabilityIdentities", ThisKey="AppID", OtherKey="AppID")]
	public EntitySet<ApplicationCapabilityIdentity> ApplicationCapabilityIdentities
	{
		get
		{
			return this._ApplicationCapabilityIdentities;
		}
		set
		{
			this._ApplicationCapabilityIdentities.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_ApplicationCapabilityIdentities(ApplicationCapabilityIdentity entity)
	{
		this.SendPropertyChanging();
		entity.VAppID = this;
	}
	
	private void detach_ApplicationCapabilityIdentities(ApplicationCapabilityIdentity entity)
	{
		this.SendPropertyChanging();
		entity.VAppID = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.v_cms_reject_Identity_AppID")]
public partial class v_cms_reject_Identity_AppID : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _AppID;
	
	private string _Name;
	
	private EntitySet<ApplicationRejectNewsletterIdentity> _ApplicationRejectNewsletterIdentities;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAppIDChanging(int value);
    partial void OnAppIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
	
	public v_cms_reject_Identity_AppID()
	{
		this._ApplicationRejectNewsletterIdentities = new EntitySet<ApplicationRejectNewsletterIdentity>(new Action<ApplicationRejectNewsletterIdentity>(this.attach_ApplicationRejectNewsletterIdentities), new Action<ApplicationRejectNewsletterIdentity>(this.detach_ApplicationRejectNewsletterIdentities));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppID", DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int AppID
	{
		get
		{
			return this._AppID;
		}
		set
		{
			if ((this._AppID != value))
			{
				this.OnAppIDChanging(value);
				this.SendPropertyChanging();
				this._AppID = value;
				this.SendPropertyChanged("AppID");
				this.OnAppIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="v_cms_reject_Identity_AppID_ApplicationRejectNewsletterIdentity", Storage="_ApplicationRejectNewsletterIdentities", ThisKey="AppID", OtherKey="AppID")]
	public EntitySet<ApplicationRejectNewsletterIdentity> ApplicationRejectNewsletterIdentities
	{
		get
		{
			return this._ApplicationRejectNewsletterIdentities;
		}
		set
		{
			this._ApplicationRejectNewsletterIdentities.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_ApplicationRejectNewsletterIdentities(ApplicationRejectNewsletterIdentity entity)
	{
		this.SendPropertyChanging();
		entity.VAppID = this;
	}
	
	private void detach_ApplicationRejectNewsletterIdentities(ApplicationRejectNewsletterIdentity entity)
	{
		this.SendPropertyChanging();
		entity.VAppID = null;
	}
}
#pragma warning restore 1591
