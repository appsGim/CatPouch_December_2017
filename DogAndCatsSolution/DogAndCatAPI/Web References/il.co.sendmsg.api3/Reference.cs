//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace DogAndCatAPI.il.co.sendmsg.api3 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_ISendMsgService", Namespace="http://api2.sendmsg.co.il/SendMsgService")]
    public partial class SendMsgService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AddUsersOnlyOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUsersAndSendOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUsersAndSendTransectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUsersToListsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUsersToListAndSendOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateMessageOnlyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMsgBasicStatisticsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMsgFullStatisticsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserMessagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSystemUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMailingListUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSentMessagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMailingListNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTemplatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnDelTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnDelMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback PauseMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnPauseMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_ErrorsEmailAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback set_ErrorsEmailAddressOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SendMsgService() {
            this.Url = global::DogAndCatAPI.Properties.Settings.Default.DogAndCatAPI_il_co_sendmsg_api3_SendMsgService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AddUsersOnlyCompletedEventHandler AddUsersOnlyCompleted;
        
        /// <remarks/>
        public event AddUsersAndSendCompletedEventHandler AddUsersAndSendCompleted;
        
        /// <remarks/>
        public event AddUsersAndSendTransectionCompletedEventHandler AddUsersAndSendTransectionCompleted;
        
        /// <remarks/>
        public event AddUsersToListsCompletedEventHandler AddUsersToListsCompleted;
        
        /// <remarks/>
        public event AddUsersToListAndSendCompletedEventHandler AddUsersToListAndSendCompleted;
        
        /// <remarks/>
        public event CreateMessageOnlyCompletedEventHandler CreateMessageOnlyCompleted;
        
        /// <remarks/>
        public event GetMsgBasicStatisticsCompletedEventHandler GetMsgBasicStatisticsCompleted;
        
        /// <remarks/>
        public event GetMsgFullStatisticsCompletedEventHandler GetMsgFullStatisticsCompleted;
        
        /// <remarks/>
        public event GetUserDetailsCompletedEventHandler GetUserDetailsCompleted;
        
        /// <remarks/>
        public event GetUserMessagesCompletedEventHandler GetUserMessagesCompleted;
        
        /// <remarks/>
        public event GetSystemUsersCompletedEventHandler GetSystemUsersCompleted;
        
        /// <remarks/>
        public event GetMailingListUsersCompletedEventHandler GetMailingListUsersCompleted;
        
        /// <remarks/>
        public event GetSentMessagesCompletedEventHandler GetSentMessagesCompleted;
        
        /// <remarks/>
        public event GetMailingListNamesCompletedEventHandler GetMailingListNamesCompleted;
        
        /// <remarks/>
        public event GetTemplatesCompletedEventHandler GetTemplatesCompleted;
        
        /// <remarks/>
        public event GetTemplateCompletedEventHandler GetTemplateCompleted;
        
        /// <remarks/>
        public event DelTemplateCompletedEventHandler DelTemplateCompleted;
        
        /// <remarks/>
        public event UnDelTemplateCompletedEventHandler UnDelTemplateCompleted;
        
        /// <remarks/>
        public event DelMessageCompletedEventHandler DelMessageCompleted;
        
        /// <remarks/>
        public event UnDelMessageCompletedEventHandler UnDelMessageCompleted;
        
        /// <remarks/>
        public event PauseMessageCompletedEventHandler PauseMessageCompleted;
        
        /// <remarks/>
        public event UnPauseMessageCompletedEventHandler UnPauseMessageCompleted;
        
        /// <remarks/>
        public event get_ErrorsEmailAddressCompletedEventHandler get_ErrorsEmailAddressCompleted;
        
        /// <remarks/>
        public event set_ErrorsEmailAddressCompletedEventHandler set_ErrorsEmailAddressCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api2.sendmsg.co.il/SendMsgService/ISendMsgService/AddUsersOnly", RequestNamespace="http://api2.sendmsg.co.il/SendMsgService", ResponseNamespace="http://api2.sendmsg.co.il/SendMsgService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddUsersOnly(int SiteID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool SiteIDSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ApiPassword, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] SendMsgUser[] Users, out bool AddUsersOnlyResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool AddUsersOnlyResultSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out SendMsgResults result) {
            object[] results = this.Invoke("AddUsersOnly", new object[] {
                        SiteID,
                        SiteIDSpecified,
                        ApiPassword,
                        Users});
            AddUsersOnlyResult = ((bool)(results[0]));
            AddUsersOnlyResultSpecified = ((bool)(results[1]));
            result = ((SendMsgResults)(results[2]));
        }
        
        /// <remarks/>
        public void AddUsersOnlyAsync(int SiteID, bool SiteIDSpecified, string ApiPassword, SendMsgUser[] Users) {
            this.AddUsersOnlyAsync(SiteID, SiteIDSpecified, ApiPassword, Users, null);
        }
        
        /// <remarks/>
        public void AddUsersOnlyAsync(int SiteID, bool SiteIDSpecified, string ApiPassword, SendMsgUser[] Users, object userState) {
            if ((this.AddUsersOnlyOperationCompleted == null)) {
                this.AddUsersOnlyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUsersOnlyOperationCompleted);
            }
            this.InvokeAsync("AddUsersOnly", new object[] {
                        SiteID,
                        SiteIDSpecified,
                        ApiPassword,
                        Users}, this.AddUsersOnlyOperationCompleted, userState);
        }
        
        private void OnAddUsersOnlyOperationCompleted(object arg) {
            if ((this.AddUsersOnlyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUsersOnlyCompleted(this, new AddUsersOnlyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api2.sendmsg.co.il/SendMsgService/ISendMsgService/AddUsersAndSend", RequestNamespace="http://api2.sendmsg.co.il/SendMsgService", ResponseNamespace="http://api2.sendmsg.co.il/SendMsgService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddUsersAndSend(int SiteID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool SiteIDSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ApiPassword, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] SendMsgUser[] Users, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] SendMsgMessage Messgae, out bool AddUsersAndSendResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool AddUsersAndSendResultSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out SendMsgResults result) {
            object[] results = this.Invoke("AddUsersAndSend", new object[] {
                        SiteID,
                        SiteIDSpecified,
                        ApiPassword,
                        Users,
                        Messgae});
            AddUsersAndSendResult = ((bool)(results[0]));
            AddUsersAndSendResultSpecified = ((bool)(results[1]));
            result = ((SendMsgResults)(results[2]));
        }
        
        /// <remarks/>
        public void AddUsersAndSendAsync(int SiteID, bool SiteIDSpecified, string ApiPassword, SendMsgUser[] Users, SendMsgMessage Messgae) {
            this.AddUsersAndSendAsync(SiteID, SiteIDSpecified, ApiPassword, Users, Messgae, null);
        }
        
        /// <remarks/>
        public void AddUsersAndSendAsync(int SiteID, bool SiteIDSpecified, string ApiPassword, SendMsgUser[] Users, SendMsgMessage Messgae, object userState) {
            if ((this.AddUsersAndSendOperationCompleted == null)) {
                this.AddUsersAndSendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUsersAndSendOperationCompleted);
            }
            this.InvokeAsync("AddUsersAndSend", new object[] {
                        SiteID,
                        SiteIDSpecified,
                        ApiPassword,
                        Users,
                        Messgae}, this.AddUsersAndSendOperationCompleted, userState);
        }
        
        private void OnAddUsersAndSendOperationCompleted(object arg) {
            if ((this.AddUsersAndSendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUsersAndSendCompleted(this, new AddUsersAndSendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api2.sendmsg.co.il/SendMsgService/ISendMsgService/AddUsersAndSendTransecti" +
            "on", RequestNamespace="http://api2.sendmsg.co.il/SendMsgService", ResponseNamespace="http://api2.sendmsg.co.il/SendMsgService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddUsersAndSendTransection(int SiteID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool SiteIDSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ApiPassword, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] SendMsgUser[] Users, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] SendMsgMessage Messgae, out bool AddUsersAndSendTransectionResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool AddUsersAndSendTransectionResultSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out SendMsgResults result) {
            object[] results = this.Invoke("AddUsersAndSendTransection", new object[] {
                        SiteID,
                        SiteIDSpecified,
                        ApiPassword,
                        Users,
                        Messgae});
            AddUsersAndSendTransectionResult = ((bool)(results[0]));
            AddUsersAndSendTransectionResultSpecified = ((bool)(results[1]));
            result = ((SendMsgResults)(results[2]));
        }
        
        /// <remarks/>
        public void AddUsersAndSendTransectionAsync(int SiteID, bool SiteIDSpecified, string ApiPassword, SendMsgUser[] Users, SendMsgMessage Messgae) {
            this.AddUsersAndSendTransectionAsync(SiteID, SiteIDSpecified, ApiPassword, Users, Messgae, null);
        }
        
        /// <remarks/>
        public void AddUsersAndSendTransectionAsync(int SiteID, bool SiteIDSpecified, string ApiPassword, SendMsgUser[] Users, SendMsgMessage Messgae, object userState) {
            if ((this.AddUsersAndSendTransectionOperationCompleted == null)) {
                this.AddUsersAndSendTransectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUsersAndSendTransectionOperationCompleted);
            }
            this.InvokeAsync("AddUsersAndSendTransection", new object[] {
                        SiteID,
                        SiteIDSpecified,
                        ApiPassword,
                        Users,
                        Messgae}, this.AddUsersAndSendTransectionOperationCompleted, userState);
        }
        
        private void OnAddUsersAndSendTransectionOperationCompleted(object arg) {
            if ((this.AddUsersAndSendTransectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUsersAndSendTransectionCompleted(this, new AddUsersAndSendTransectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api2.sendmsg.co.il/SendMsgService/ISendMsgService/AddUsersToLists", RequestNamespace="http://api2.sendmsg.co.il/SendMsgService", ResponseNamespace="http://api2.sendmsg.co.il/SendMsgService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddUsersToLists(int SiteID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool SiteIDSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ApiPassword, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] SendMsgUser[] Users, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] SendMsgList[] MailingLists, out bool AddUsersToListsResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool AddUsersToListsResultSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out SendMsgResults result) {
            object[] results = this.Invoke("AddUsersToLists", new object[] {
                        SiteID,
                        SiteIDSpecified,
                        ApiPassword,
                        Users,
                        MailingLists});
            AddUsersToListsResult = ((bool)(results[0]));
            AddUsersToListsResultSpecified = ((bool)(results[1]));
            result = ((SendMsgResults)(results[2]));
        }
        
        /// <remarks/>
        public void AddUsersToListsAsync(int SiteID, bool SiteIDSpecified, string ApiPassword, SendMsgUser[] Users, SendMsgList[] MailingLists) {
            this.AddUsersToListsAsync(SiteID, SiteIDSpecified, ApiPassword, Users, MailingLists, null);
        }
        
        /// <remarks/>
        public void AddUsersToListsAsync(int SiteID, bool SiteIDSpecified, string ApiPassword, SendMsgUser[] Users, SendMsgList[] MailingLists, object userState) {
            if ((this.AddUsersToListsOperationCompleted == null)) {
                this.AddUsersToListsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUsersToListsOperationCompleted);
            }
            this.InvokeAsync("AddUsersToLists", new object[] {
                        SiteID,
                        SiteIDSpecified,
                        ApiPassword,
                        Users,
                        MailingLists}, this.AddUsersToListsOperationCompleted, userState);
        }
        
        private void OnAddUsersToListsOperationCompleted(object arg) {
            if ((this.AddUsersToListsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUsersToListsCompleted(this, new AddUsersToListsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api2.sendmsg.co.il/SendMsgService/ISendMsgService/AddUsersToListAndSend", RequestNamespace="http://api2.sendmsg.co.il/SendMsgService", ResponseNamespace="http://api2.sendmsg.co.il/SendMsgService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddUsersToListAndSend(int SiteID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool SiteIDSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ApiPassword, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] SendMsgUser[] Users, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] SendMsgMessage Message, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] SendMsgList[] MailingLists, out bool AddUsersToListAndSendResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool AddUsersToListAndSendResultSpecified, out int newMessageID, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool newMessageIDSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out SendMsgResults result) {
            object[] results = this.Invoke("AddUsersToListAndSend", new object[] {
                        SiteID,
                        SiteIDSpecified,
                        ApiPassword,
                        Users,
                        Message,
                        MailingLists});
            AddUsersToListAndSendResult = ((bool)(results[0]));
            AddUsersToListAndSendResultSpecified = ((bool)(results[1]));
            newMessageID = ((int)(results[2]));
            newMessageIDSpecified = ((bool)(results[3]));
            result = ((SendMsgResults)(results[4]));
        }
        
        /// <remarks/>
        public void AddUsersToListAndSendAsync(int SiteID, bool SiteIDSpecified, string ApiPassword, SendMsgUser[] Users, SendMsgMessage Message, SendMsgList[] MailingLists) {
            this.AddUsersToListAndSendAsync(SiteID, SiteIDSpecified, ApiPassword, Users, Message, MailingLists, null);
        }
        
        /// <remarks/>
        public void AddUsersToListAndSendAsync(int SiteID, bool SiteIDSpecified, string ApiPassword, SendMsgUser[] Users, SendMsgMessage Message, SendMsgList[] MailingLists, object userState) {
            if ((this.AddUsersToListAndSendOperationCompleted == null)) {
                this.AddUsersToListAndSendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUsersToListAndSendOperationCompleted);
            }
            this.InvokeAsync("AddUsersToListAndSend", new object[] {
                        SiteID,
                        SiteIDSpecified,
                        ApiPassword,
                        Users,
                        Message,
                        MailingLists}, this.AddUsersToListAndSendOperationCompleted, userState);
        }
        
        private void OnAddUsersToListAndSendOperationCompleted(object arg) {
            if ((this.AddUsersToListAndSendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUsersToListAndSendCompleted(this, new AddUsersToListAndSendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api2.sendmsg.co.il/SendMsgService/ISendMsgService/CreateMessageOnly", RequestNamespace="http://api2.sendmsg.co.il/SendMsgService", ResponseNamespace="http://api2.sendmsg.co.il/SendMsgService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateMessageOnly(int SiteID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool SiteIDSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ApiPassword, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] SendMsgMessage Message, out bool CreateMessageOnlyResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool CreateMessageOnlyResultSpecified, out int newMessageID, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool newMessageIDSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out SendMsgResults result) {
            object[] results = this.Invoke("CreateMessageOnly", new object[] {
                        SiteID,
                        SiteIDSpecified,
                        ApiPassword,
                        Message});
            CreateMessageOnlyResult = ((bool)(results[0]));
            CreateMessageOnlyResultSpecified = ((bool)(results[1]));
            newMessageID = ((int)(results[2]));
            newMessageIDSpecified = ((bool)(results[3]));
            result = ((SendMsgResults)(results[4]));
        }
        
        /// <remarks/>
        public void CreateMessageOnlyAsync(int SiteID, bool SiteIDSpecified, string ApiPassword, SendMsgMessage Message) {
            this.CreateMessageOnlyAsync(SiteID, SiteIDSpecified, ApiPassword, Message, null);
        }
        
        /// <remarks/>
        public void CreateMessageOnlyAsync(int SiteID, bool SiteIDSpecified, string ApiPassword, SendMsgMessage Message, object userState) {
            if ((this.CreateMessageOnlyOperationCompleted == null)) {
                this.CreateMessageOnlyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateMessageOnlyOperationCompleted);
            }
            this.InvokeAsync("CreateMessageOnly", new object[] {
                        SiteID,
                        SiteIDSpecified,
                        ApiPassword,
                        Message}, this.CreateMessageOnlyOperationCompleted, userState);
        }
        
        private void OnCreateMessageOnlyOperationCompleted(object arg) {
            if ((this.CreateMessageOnlyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateMessageOnlyCompleted(this, new CreateMessageOnlyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api2.sendmsg.co.il/SendMsgService/ISendMsgService/GetMsgBasicStatistics", RequestNamespace="http://api2.sendmsg.co.il/SendMsgService", ResponseNamespace="http://api2.sendmsg.co.il/SendMsgService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetMsgBasicStatistics(int SiteID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool SiteIDSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ApiPassword, int messageID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool messageIDSpecified, out bool GetMsgBasicStatisticsResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool GetMsgBasicStatisticsResultSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out SendMsgStatistics msgStatistics, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out SendMsgResults result) {
            object[] results = this.Invoke("GetMsgBasicStatistics", new object[] {
                        SiteID,
                        SiteIDSpecified,
                        ApiPassword,
                        messageID,
                        messageIDSpecified});
            GetMsgBasicStatisticsResult = ((bool)(results[0]));
            GetMsgBasicStatisticsResultSpecified = ((bool)(results[1]));
            msgStatistics = ((SendMsgStatistics)(results[2]));
            result = ((SendMsgResults)(results[3]));
        }
        
        /// <remarks/>
        public void GetMsgBasicStatisticsAsync(int SiteID, bool SiteIDSpecified, string ApiPassword, int messageID, bool messageIDSpecified) {
            this.GetMsgBasicStatisticsAsync(SiteID, SiteIDSpecified, ApiPassword, messageID, messageIDSpecified, null);
        }
        
        /// <remarks/>
        public void GetMsgBasicStatisticsAsync(int SiteID, bool SiteIDSpecified, string ApiPassword, int messageID, bool messageIDSpecified, object userState) {
            if ((this.GetMsgBasicStatisticsOperationCompleted == null)) {
                this.GetMsgBasicStatisticsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMsgBasicStatisticsOperationCompleted);
            }
            this.InvokeAsync("GetMsgBasicStatistics", new object[] {
                        SiteID,
                        SiteIDSpecified,
                        ApiPassword,
                        messageID,
                        messageIDSpecified}, this.GetMsgBasicStatisticsOperationCompleted, userState);
        }
        
        private void OnGetMsgBasicStatisticsOperationCompleted(object arg) {
            if ((this.GetMsgBasicStatisticsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMsgBasicStatisticsCompleted(this, new GetMsgBasicStatisticsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api2.sendmsg.co.il/SendMsgService/ISendMsgService/GetMsgFullStatistics", RequestNamespace="http://api2.sendmsg.co.il/SendMsgService", ResponseNamespace="http://api2.sendmsg.co.il/SendMsgService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetMsgFullStatistics(int SiteID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool SiteIDSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ApiPassword, int messageID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool messageIDSpecified, out bool GetMsgFullStatisticsResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool GetMsgFullStatisticsResultSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out SendMsgMessage OriginalMsg, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] out SendMsgUserStatistics[] UsersStats, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out SendMsgResults result) {
            object[] results = this.Invoke("GetMsgFullStatistics", new object[] {
                        SiteID,
                        SiteIDSpecified,
                        ApiPassword,
                        messageID,
                        messageIDSpecified});
            GetMsgFullStatisticsResult = ((bool)(results[0]));
            GetMsgFullStatisticsResultSpecified = ((bool)(results[1]));
            OriginalMsg = ((SendMsgMessage)(results[2]));
            UsersStats = ((SendMsgUserStatistics[])(results[3]));
            result = ((SendMsgResults)(results[4]));
        }
        
        /// <remarks/>
        public void GetMsgFullStatisticsAsync(int SiteID, bool SiteIDSpecified, string ApiPassword, int messageID, bool messageIDSpecified) {
            this.GetMsgFullStatisticsAsync(SiteID, SiteIDSpecified, ApiPassword, messageID, messageIDSpecified, null);
        }
        
        /// <remarks/>
        public void GetMsgFullStatisticsAsync(int SiteID, bool SiteIDSpecified, string ApiPassword, int messageID, bool messageIDSpecified, object userState) {
            if ((this.GetMsgFullStatisticsOperationCompleted == null)) {
                this.GetMsgFullStatisticsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMsgFullStatisticsOperationCompleted);
            }
            this.InvokeAsync("GetMsgFullStatistics", new object[] {
                        SiteID,
                        SiteIDSpecified,
                        ApiPassword,
                        messageID,
                        messageIDSpecified}, this.GetMsgFullStatisticsOperationCompleted, userState);
        }
        
        private void OnGetMsgFullStatisticsOperationCompleted(object arg) {
            if ((this.GetMsgFullStatisticsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMsgFullStatisticsCompleted(this, new GetMsgFullStatisticsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api2.sendmsg.co.il/SendMsgService/ISendMsgService/GetUserDetails", RequestNamespace="http://api2.sendmsg.co.il/SendMsgService", ResponseNamespace="http://api2.sendmsg.co.il/SendMsgService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetUserDetails(int SiteID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool SiteIDSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ApiPassword, int userID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool userIDSpecified, out bool GetUserDetailsResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool GetUserDetailsResultSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out SendMsgUser user, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out SendMsgResults result) {
            object[] results = this.Invoke("GetUserDetails", new object[] {
                        SiteID,
                        SiteIDSpecified,
                        ApiPassword,
                        userID,
                        userIDSpecified});
            GetUserDetailsResult = ((bool)(results[0]));
            GetUserDetailsResultSpecified = ((bool)(results[1]));
            user = ((SendMsgUser)(results[2]));
            result = ((SendMsgResults)(results[3]));
        }
        
        /// <remarks/>
        public void GetUserDetailsAsync(int SiteID, bool SiteIDSpecified, string ApiPassword, int userID, bool userIDSpecified) {
            this.GetUserDetailsAsync(SiteID, SiteIDSpecified, ApiPassword, userID, userIDSpecified, null);
        }
        
        /// <remarks/>
        public void GetUserDetailsAsync(int SiteID, bool SiteIDSpecified, string ApiPassword, int userID, bool userIDSpecified, object userState) {
            if ((this.GetUserDetailsOperationCompleted == null)) {
                this.GetUserDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserDetailsOperationCompleted);
            }
            this.InvokeAsync("GetUserDetails", new object[] {
                        SiteID,
                        SiteIDSpecified,
                        ApiPassword,
                        userID,
                        userIDSpecified}, this.GetUserDetailsOperationCompleted, userState);
        }
        
        private void OnGetUserDetailsOperationCompleted(object arg) {
            if ((this.GetUserDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserDetailsCompleted(this, new GetUserDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api2.sendmsg.co.il/SendMsgService/ISendMsgService/GetUserMessages", RequestNamespace="http://api2.sendmsg.co.il/SendMsgService", ResponseNamespace="http://api2.sendmsg.co.il/SendMsgService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetUserMessages(int SiteID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool SiteIDSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ApiPassword, int userID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool userIDSpecified, out bool GetUserMessagesResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool GetUserMessagesResultSpecified, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] out SendMsgStatistics[] UserMsgStats, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out SendMsgResults result) {
            object[] results = this.Invoke("GetUserMessages", new object[] {
                        SiteID,
                        SiteIDSpecified,
                        ApiPassword,
                        userID,
                        userIDSpecified});
            GetUserMessagesResult = ((bool)(results[0]));
            GetUserMessagesResultSpecified = ((bool)(results[1]));
            UserMsgStats = ((SendMsgStatistics[])(results[2]));
            result = ((SendMsgResults)(results[3]));
        }
        
        /// <remarks/>
        public void GetUserMessagesAsync(int SiteID, bool SiteIDSpecified, string ApiPassword, int userID, bool userIDSpecified) {
            this.GetUserMessagesAsync(SiteID, SiteIDSpecified, ApiPassword, userID, userIDSpecified, null);
        }
        
        /// <remarks/>
        public void GetUserMessagesAsync(int SiteID, bool SiteIDSpecified, string ApiPassword, int userID, bool userIDSpecified, object userState) {
            if ((this.GetUserMessagesOperationCompleted == null)) {
                this.GetUserMessagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserMessagesOperationCompleted);
            }
            this.InvokeAsync("GetUserMessages", new object[] {
                        SiteID,
                        SiteIDSpecified,
                        ApiPassword,
                        userID,
                        userIDSpecified}, this.GetUserMessagesOperationCompleted, userState);
        }
        
        private void OnGetUserMessagesOperationCompleted(object arg) {
            if ((this.GetUserMessagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserMessagesCompleted(this, new GetUserMessagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api2.sendmsg.co.il/SendMsgService/ISendMsgService/GetSystemUsers", RequestNamespace="http://api2.sendmsg.co.il/SendMsgService", ResponseNamespace="http://api2.sendmsg.co.il/SendMsgService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetSystemUsers(int SiteID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool SiteIDSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ApiPassword, SendMsgUsersRequestType requestType, [System.Xml.Serialization.XmlIgnoreAttribute()] bool requestTypeSpecified, out bool GetSystemUsersResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool GetSystemUsersResultSpecified, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] out SendMsgUser[] users, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out SendMsgResults result) {
            object[] results = this.Invoke("GetSystemUsers", new object[] {
                        SiteID,
                        SiteIDSpecified,
                        ApiPassword,
                        requestType,
                        requestTypeSpecified});
            GetSystemUsersResult = ((bool)(results[0]));
            GetSystemUsersResultSpecified = ((bool)(results[1]));
            users = ((SendMsgUser[])(results[2]));
            result = ((SendMsgResults)(results[3]));
        }
        
        /// <remarks/>
        public void GetSystemUsersAsync(int SiteID, bool SiteIDSpecified, string ApiPassword, SendMsgUsersRequestType requestType, bool requestTypeSpecified) {
            this.GetSystemUsersAsync(SiteID, SiteIDSpecified, ApiPassword, requestType, requestTypeSpecified, null);
        }
        
        /// <remarks/>
        public void GetSystemUsersAsync(int SiteID, bool SiteIDSpecified, string ApiPassword, SendMsgUsersRequestType requestType, bool requestTypeSpecified, object userState) {
            if ((this.GetSystemUsersOperationCompleted == null)) {
                this.GetSystemUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSystemUsersOperationCompleted);
            }
            this.InvokeAsync("GetSystemUsers", new object[] {
                        SiteID,
                        SiteIDSpecified,
                        ApiPassword,
                        requestType,
                        requestTypeSpecified}, this.GetSystemUsersOperationCompleted, userState);
        }
        
        private void OnGetSystemUsersOperationCompleted(object arg) {
            if ((this.GetSystemUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSystemUsersCompleted(this, new GetSystemUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api2.sendmsg.co.il/SendMsgService/ISendMsgService/GetMailingListUsers", RequestNamespace="http://api2.sendmsg.co.il/SendMsgService", ResponseNamespace="http://api2.sendmsg.co.il/SendMsgService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetMailingListUsers(int SiteID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool SiteIDSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ApiPassword, int ListID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool ListIDSpecified, SendMsgUsersRequestType requestType, [System.Xml.Serialization.XmlIgnoreAttribute()] bool requestTypeSpecified, out bool GetMailingListUsersResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool GetMailingListUsersResultSpecified, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] out SendMsgUser[] users, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out SendMsgResults result) {
            object[] results = this.Invoke("GetMailingListUsers", new object[] {
                        SiteID,
                        SiteIDSpecified,
                        ApiPassword,
                        ListID,
                        ListIDSpecified,
                        requestType,
                        requestTypeSpecified});
            GetMailingListUsersResult = ((bool)(results[0]));
            GetMailingListUsersResultSpecified = ((bool)(results[1]));
            users = ((SendMsgUser[])(results[2]));
            result = ((SendMsgResults)(results[3]));
        }
        
        /// <remarks/>
        public void GetMailingListUsersAsync(int SiteID, bool SiteIDSpecified, string ApiPassword, int ListID, bool ListIDSpecified, SendMsgUsersRequestType requestType, bool requestTypeSpecified) {
            this.GetMailingListUsersAsync(SiteID, SiteIDSpecified, ApiPassword, ListID, ListIDSpecified, requestType, requestTypeSpecified, null);
        }
        
        /// <remarks/>
        public void GetMailingListUsersAsync(int SiteID, bool SiteIDSpecified, string ApiPassword, int ListID, bool ListIDSpecified, SendMsgUsersRequestType requestType, bool requestTypeSpecified, object userState) {
            if ((this.GetMailingListUsersOperationCompleted == null)) {
                this.GetMailingListUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMailingListUsersOperationCompleted);
            }
            this.InvokeAsync("GetMailingListUsers", new object[] {
                        SiteID,
                        SiteIDSpecified,
                        ApiPassword,
                        ListID,
                        ListIDSpecified,
                        requestType,
                        requestTypeSpecified}, this.GetMailingListUsersOperationCompleted, userState);
        }
        
        private void OnGetMailingListUsersOperationCompleted(object arg) {
            if ((this.GetMailingListUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMailingListUsersCompleted(this, new GetMailingListUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api2.sendmsg.co.il/SendMsgService/ISendMsgService/GetSentMessages", RequestNamespace="http://api2.sendmsg.co.il/SendMsgService", ResponseNamespace="http://api2.sendmsg.co.il/SendMsgService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetSentMessages(int SiteID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool SiteIDSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ApiPassword, out bool GetSentMessagesResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool GetSentMessagesResultSpecified, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] out SendMsgMessage[] MsgList, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out SendMsgResults result) {
            object[] results = this.Invoke("GetSentMessages", new object[] {
                        SiteID,
                        SiteIDSpecified,
                        ApiPassword});
            GetSentMessagesResult = ((bool)(results[0]));
            GetSentMessagesResultSpecified = ((bool)(results[1]));
            MsgList = ((SendMsgMessage[])(results[2]));
            result = ((SendMsgResults)(results[3]));
        }
        
        /// <remarks/>
        public void GetSentMessagesAsync(int SiteID, bool SiteIDSpecified, string ApiPassword) {
            this.GetSentMessagesAsync(SiteID, SiteIDSpecified, ApiPassword, null);
        }
        
        /// <remarks/>
        public void GetSentMessagesAsync(int SiteID, bool SiteIDSpecified, string ApiPassword, object userState) {
            if ((this.GetSentMessagesOperationCompleted == null)) {
                this.GetSentMessagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSentMessagesOperationCompleted);
            }
            this.InvokeAsync("GetSentMessages", new object[] {
                        SiteID,
                        SiteIDSpecified,
                        ApiPassword}, this.GetSentMessagesOperationCompleted, userState);
        }
        
        private void OnGetSentMessagesOperationCompleted(object arg) {
            if ((this.GetSentMessagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSentMessagesCompleted(this, new GetSentMessagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api2.sendmsg.co.il/SendMsgService/ISendMsgService/GetMailingListNames", RequestNamespace="http://api2.sendmsg.co.il/SendMsgService", ResponseNamespace="http://api2.sendmsg.co.il/SendMsgService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetMailingListNames(int SiteID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool SiteIDSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ApiPassword, out bool GetMailingListNamesResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool GetMailingListNamesResultSpecified, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] out SendMsgList[] listNames, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out SendMsgResults result) {
            object[] results = this.Invoke("GetMailingListNames", new object[] {
                        SiteID,
                        SiteIDSpecified,
                        ApiPassword});
            GetMailingListNamesResult = ((bool)(results[0]));
            GetMailingListNamesResultSpecified = ((bool)(results[1]));
            listNames = ((SendMsgList[])(results[2]));
            result = ((SendMsgResults)(results[3]));
        }
        
        /// <remarks/>
        public void GetMailingListNamesAsync(int SiteID, bool SiteIDSpecified, string ApiPassword) {
            this.GetMailingListNamesAsync(SiteID, SiteIDSpecified, ApiPassword, null);
        }
        
        /// <remarks/>
        public void GetMailingListNamesAsync(int SiteID, bool SiteIDSpecified, string ApiPassword, object userState) {
            if ((this.GetMailingListNamesOperationCompleted == null)) {
                this.GetMailingListNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMailingListNamesOperationCompleted);
            }
            this.InvokeAsync("GetMailingListNames", new object[] {
                        SiteID,
                        SiteIDSpecified,
                        ApiPassword}, this.GetMailingListNamesOperationCompleted, userState);
        }
        
        private void OnGetMailingListNamesOperationCompleted(object arg) {
            if ((this.GetMailingListNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMailingListNamesCompleted(this, new GetMailingListNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api2.sendmsg.co.il/SendMsgService/ISendMsgService/GetTemplates", RequestNamespace="http://api2.sendmsg.co.il/SendMsgService", ResponseNamespace="http://api2.sendmsg.co.il/SendMsgService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetTemplates(int SiteID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool SiteIDSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ApiPassword, out bool GetTemplatesResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool GetTemplatesResultSpecified, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] out SendMsgTemplate[] tplList, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out SendMsgResults result) {
            object[] results = this.Invoke("GetTemplates", new object[] {
                        SiteID,
                        SiteIDSpecified,
                        ApiPassword});
            GetTemplatesResult = ((bool)(results[0]));
            GetTemplatesResultSpecified = ((bool)(results[1]));
            tplList = ((SendMsgTemplate[])(results[2]));
            result = ((SendMsgResults)(results[3]));
        }
        
        /// <remarks/>
        public void GetTemplatesAsync(int SiteID, bool SiteIDSpecified, string ApiPassword) {
            this.GetTemplatesAsync(SiteID, SiteIDSpecified, ApiPassword, null);
        }
        
        /// <remarks/>
        public void GetTemplatesAsync(int SiteID, bool SiteIDSpecified, string ApiPassword, object userState) {
            if ((this.GetTemplatesOperationCompleted == null)) {
                this.GetTemplatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTemplatesOperationCompleted);
            }
            this.InvokeAsync("GetTemplates", new object[] {
                        SiteID,
                        SiteIDSpecified,
                        ApiPassword}, this.GetTemplatesOperationCompleted, userState);
        }
        
        private void OnGetTemplatesOperationCompleted(object arg) {
            if ((this.GetTemplatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTemplatesCompleted(this, new GetTemplatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api2.sendmsg.co.il/SendMsgService/ISendMsgService/GetTemplate", RequestNamespace="http://api2.sendmsg.co.il/SendMsgService", ResponseNamespace="http://api2.sendmsg.co.il/SendMsgService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetTemplate(int SiteID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool SiteIDSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ApiPassword, int TplID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool TplIDSpecified, out bool GetTemplateResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool GetTemplateResultSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out SendMsgTemplate Template, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out SendMsgResults result) {
            object[] results = this.Invoke("GetTemplate", new object[] {
                        SiteID,
                        SiteIDSpecified,
                        ApiPassword,
                        TplID,
                        TplIDSpecified});
            GetTemplateResult = ((bool)(results[0]));
            GetTemplateResultSpecified = ((bool)(results[1]));
            Template = ((SendMsgTemplate)(results[2]));
            result = ((SendMsgResults)(results[3]));
        }
        
        /// <remarks/>
        public void GetTemplateAsync(int SiteID, bool SiteIDSpecified, string ApiPassword, int TplID, bool TplIDSpecified) {
            this.GetTemplateAsync(SiteID, SiteIDSpecified, ApiPassword, TplID, TplIDSpecified, null);
        }
        
        /// <remarks/>
        public void GetTemplateAsync(int SiteID, bool SiteIDSpecified, string ApiPassword, int TplID, bool TplIDSpecified, object userState) {
            if ((this.GetTemplateOperationCompleted == null)) {
                this.GetTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTemplateOperationCompleted);
            }
            this.InvokeAsync("GetTemplate", new object[] {
                        SiteID,
                        SiteIDSpecified,
                        ApiPassword,
                        TplID,
                        TplIDSpecified}, this.GetTemplateOperationCompleted, userState);
        }
        
        private void OnGetTemplateOperationCompleted(object arg) {
            if ((this.GetTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTemplateCompleted(this, new GetTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api2.sendmsg.co.il/SendMsgService/ISendMsgService/DelTemplate", RequestNamespace="http://api2.sendmsg.co.il/SendMsgService", ResponseNamespace="http://api2.sendmsg.co.il/SendMsgService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DelTemplate(int SiteID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool SiteIDSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ApiPassword, int TplID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool TplIDSpecified, out bool DelTemplateResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool DelTemplateResultSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out SendMsgResults result) {
            object[] results = this.Invoke("DelTemplate", new object[] {
                        SiteID,
                        SiteIDSpecified,
                        ApiPassword,
                        TplID,
                        TplIDSpecified});
            DelTemplateResult = ((bool)(results[0]));
            DelTemplateResultSpecified = ((bool)(results[1]));
            result = ((SendMsgResults)(results[2]));
        }
        
        /// <remarks/>
        public void DelTemplateAsync(int SiteID, bool SiteIDSpecified, string ApiPassword, int TplID, bool TplIDSpecified) {
            this.DelTemplateAsync(SiteID, SiteIDSpecified, ApiPassword, TplID, TplIDSpecified, null);
        }
        
        /// <remarks/>
        public void DelTemplateAsync(int SiteID, bool SiteIDSpecified, string ApiPassword, int TplID, bool TplIDSpecified, object userState) {
            if ((this.DelTemplateOperationCompleted == null)) {
                this.DelTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelTemplateOperationCompleted);
            }
            this.InvokeAsync("DelTemplate", new object[] {
                        SiteID,
                        SiteIDSpecified,
                        ApiPassword,
                        TplID,
                        TplIDSpecified}, this.DelTemplateOperationCompleted, userState);
        }
        
        private void OnDelTemplateOperationCompleted(object arg) {
            if ((this.DelTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelTemplateCompleted(this, new DelTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api2.sendmsg.co.il/SendMsgService/ISendMsgService/UnDelTemplate", RequestNamespace="http://api2.sendmsg.co.il/SendMsgService", ResponseNamespace="http://api2.sendmsg.co.il/SendMsgService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UnDelTemplate(int SiteID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool SiteIDSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ApiPassword, int TplID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool TplIDSpecified, out bool UnDelTemplateResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool UnDelTemplateResultSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out SendMsgResults result) {
            object[] results = this.Invoke("UnDelTemplate", new object[] {
                        SiteID,
                        SiteIDSpecified,
                        ApiPassword,
                        TplID,
                        TplIDSpecified});
            UnDelTemplateResult = ((bool)(results[0]));
            UnDelTemplateResultSpecified = ((bool)(results[1]));
            result = ((SendMsgResults)(results[2]));
        }
        
        /// <remarks/>
        public void UnDelTemplateAsync(int SiteID, bool SiteIDSpecified, string ApiPassword, int TplID, bool TplIDSpecified) {
            this.UnDelTemplateAsync(SiteID, SiteIDSpecified, ApiPassword, TplID, TplIDSpecified, null);
        }
        
        /// <remarks/>
        public void UnDelTemplateAsync(int SiteID, bool SiteIDSpecified, string ApiPassword, int TplID, bool TplIDSpecified, object userState) {
            if ((this.UnDelTemplateOperationCompleted == null)) {
                this.UnDelTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnDelTemplateOperationCompleted);
            }
            this.InvokeAsync("UnDelTemplate", new object[] {
                        SiteID,
                        SiteIDSpecified,
                        ApiPassword,
                        TplID,
                        TplIDSpecified}, this.UnDelTemplateOperationCompleted, userState);
        }
        
        private void OnUnDelTemplateOperationCompleted(object arg) {
            if ((this.UnDelTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnDelTemplateCompleted(this, new UnDelTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api2.sendmsg.co.il/SendMsgService/ISendMsgService/DelMessage", RequestNamespace="http://api2.sendmsg.co.il/SendMsgService", ResponseNamespace="http://api2.sendmsg.co.il/SendMsgService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DelMessage(int SiteID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool SiteIDSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ApiPassword, int MsglID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool MsglIDSpecified, out bool DelMessageResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool DelMessageResultSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out SendMsgResults result) {
            object[] results = this.Invoke("DelMessage", new object[] {
                        SiteID,
                        SiteIDSpecified,
                        ApiPassword,
                        MsglID,
                        MsglIDSpecified});
            DelMessageResult = ((bool)(results[0]));
            DelMessageResultSpecified = ((bool)(results[1]));
            result = ((SendMsgResults)(results[2]));
        }
        
        /// <remarks/>
        public void DelMessageAsync(int SiteID, bool SiteIDSpecified, string ApiPassword, int MsglID, bool MsglIDSpecified) {
            this.DelMessageAsync(SiteID, SiteIDSpecified, ApiPassword, MsglID, MsglIDSpecified, null);
        }
        
        /// <remarks/>
        public void DelMessageAsync(int SiteID, bool SiteIDSpecified, string ApiPassword, int MsglID, bool MsglIDSpecified, object userState) {
            if ((this.DelMessageOperationCompleted == null)) {
                this.DelMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelMessageOperationCompleted);
            }
            this.InvokeAsync("DelMessage", new object[] {
                        SiteID,
                        SiteIDSpecified,
                        ApiPassword,
                        MsglID,
                        MsglIDSpecified}, this.DelMessageOperationCompleted, userState);
        }
        
        private void OnDelMessageOperationCompleted(object arg) {
            if ((this.DelMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelMessageCompleted(this, new DelMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api2.sendmsg.co.il/SendMsgService/ISendMsgService/UnDelMessage", RequestNamespace="http://api2.sendmsg.co.il/SendMsgService", ResponseNamespace="http://api2.sendmsg.co.il/SendMsgService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UnDelMessage(int SiteID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool SiteIDSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ApiPassword, int MsglID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool MsglIDSpecified, out bool UnDelMessageResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool UnDelMessageResultSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out SendMsgResults result) {
            object[] results = this.Invoke("UnDelMessage", new object[] {
                        SiteID,
                        SiteIDSpecified,
                        ApiPassword,
                        MsglID,
                        MsglIDSpecified});
            UnDelMessageResult = ((bool)(results[0]));
            UnDelMessageResultSpecified = ((bool)(results[1]));
            result = ((SendMsgResults)(results[2]));
        }
        
        /// <remarks/>
        public void UnDelMessageAsync(int SiteID, bool SiteIDSpecified, string ApiPassword, int MsglID, bool MsglIDSpecified) {
            this.UnDelMessageAsync(SiteID, SiteIDSpecified, ApiPassword, MsglID, MsglIDSpecified, null);
        }
        
        /// <remarks/>
        public void UnDelMessageAsync(int SiteID, bool SiteIDSpecified, string ApiPassword, int MsglID, bool MsglIDSpecified, object userState) {
            if ((this.UnDelMessageOperationCompleted == null)) {
                this.UnDelMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnDelMessageOperationCompleted);
            }
            this.InvokeAsync("UnDelMessage", new object[] {
                        SiteID,
                        SiteIDSpecified,
                        ApiPassword,
                        MsglID,
                        MsglIDSpecified}, this.UnDelMessageOperationCompleted, userState);
        }
        
        private void OnUnDelMessageOperationCompleted(object arg) {
            if ((this.UnDelMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnDelMessageCompleted(this, new UnDelMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api2.sendmsg.co.il/SendMsgService/ISendMsgService/PauseMessage", RequestNamespace="http://api2.sendmsg.co.il/SendMsgService", ResponseNamespace="http://api2.sendmsg.co.il/SendMsgService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PauseMessage(int SiteID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool SiteIDSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ApiPassword, int MsglID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool MsglIDSpecified, out bool PauseMessageResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool PauseMessageResultSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out SendMsgResults result) {
            object[] results = this.Invoke("PauseMessage", new object[] {
                        SiteID,
                        SiteIDSpecified,
                        ApiPassword,
                        MsglID,
                        MsglIDSpecified});
            PauseMessageResult = ((bool)(results[0]));
            PauseMessageResultSpecified = ((bool)(results[1]));
            result = ((SendMsgResults)(results[2]));
        }
        
        /// <remarks/>
        public void PauseMessageAsync(int SiteID, bool SiteIDSpecified, string ApiPassword, int MsglID, bool MsglIDSpecified) {
            this.PauseMessageAsync(SiteID, SiteIDSpecified, ApiPassword, MsglID, MsglIDSpecified, null);
        }
        
        /// <remarks/>
        public void PauseMessageAsync(int SiteID, bool SiteIDSpecified, string ApiPassword, int MsglID, bool MsglIDSpecified, object userState) {
            if ((this.PauseMessageOperationCompleted == null)) {
                this.PauseMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPauseMessageOperationCompleted);
            }
            this.InvokeAsync("PauseMessage", new object[] {
                        SiteID,
                        SiteIDSpecified,
                        ApiPassword,
                        MsglID,
                        MsglIDSpecified}, this.PauseMessageOperationCompleted, userState);
        }
        
        private void OnPauseMessageOperationCompleted(object arg) {
            if ((this.PauseMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PauseMessageCompleted(this, new PauseMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api2.sendmsg.co.il/SendMsgService/ISendMsgService/UnPauseMessage", RequestNamespace="http://api2.sendmsg.co.il/SendMsgService", ResponseNamespace="http://api2.sendmsg.co.il/SendMsgService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UnPauseMessage(int SiteID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool SiteIDSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ApiPassword, int MsglID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool MsglIDSpecified, out bool UnPauseMessageResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool UnPauseMessageResultSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out SendMsgResults result) {
            object[] results = this.Invoke("UnPauseMessage", new object[] {
                        SiteID,
                        SiteIDSpecified,
                        ApiPassword,
                        MsglID,
                        MsglIDSpecified});
            UnPauseMessageResult = ((bool)(results[0]));
            UnPauseMessageResultSpecified = ((bool)(results[1]));
            result = ((SendMsgResults)(results[2]));
        }
        
        /// <remarks/>
        public void UnPauseMessageAsync(int SiteID, bool SiteIDSpecified, string ApiPassword, int MsglID, bool MsglIDSpecified) {
            this.UnPauseMessageAsync(SiteID, SiteIDSpecified, ApiPassword, MsglID, MsglIDSpecified, null);
        }
        
        /// <remarks/>
        public void UnPauseMessageAsync(int SiteID, bool SiteIDSpecified, string ApiPassword, int MsglID, bool MsglIDSpecified, object userState) {
            if ((this.UnPauseMessageOperationCompleted == null)) {
                this.UnPauseMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnPauseMessageOperationCompleted);
            }
            this.InvokeAsync("UnPauseMessage", new object[] {
                        SiteID,
                        SiteIDSpecified,
                        ApiPassword,
                        MsglID,
                        MsglIDSpecified}, this.UnPauseMessageOperationCompleted, userState);
        }
        
        private void OnUnPauseMessageOperationCompleted(object arg) {
            if ((this.UnPauseMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnPauseMessageCompleted(this, new UnPauseMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api2.sendmsg.co.il/SendMsgService/ISendMsgService/get_ErrorsEmailAddress", RequestNamespace="http://api2.sendmsg.co.il/SendMsgService", ResponseNamespace="http://api2.sendmsg.co.il/SendMsgService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string get_ErrorsEmailAddress() {
            object[] results = this.Invoke("get_ErrorsEmailAddress", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void get_ErrorsEmailAddressAsync() {
            this.get_ErrorsEmailAddressAsync(null);
        }
        
        /// <remarks/>
        public void get_ErrorsEmailAddressAsync(object userState) {
            if ((this.get_ErrorsEmailAddressOperationCompleted == null)) {
                this.get_ErrorsEmailAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_ErrorsEmailAddressOperationCompleted);
            }
            this.InvokeAsync("get_ErrorsEmailAddress", new object[0], this.get_ErrorsEmailAddressOperationCompleted, userState);
        }
        
        private void Onget_ErrorsEmailAddressOperationCompleted(object arg) {
            if ((this.get_ErrorsEmailAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_ErrorsEmailAddressCompleted(this, new get_ErrorsEmailAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api2.sendmsg.co.il/SendMsgService/ISendMsgService/set_ErrorsEmailAddress", RequestNamespace="http://api2.sendmsg.co.il/SendMsgService", ResponseNamespace="http://api2.sendmsg.co.il/SendMsgService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void set_ErrorsEmailAddress([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string value) {
            this.Invoke("set_ErrorsEmailAddress", new object[] {
                        value});
        }
        
        /// <remarks/>
        public void set_ErrorsEmailAddressAsync(string value) {
            this.set_ErrorsEmailAddressAsync(value, null);
        }
        
        /// <remarks/>
        public void set_ErrorsEmailAddressAsync(string value, object userState) {
            if ((this.set_ErrorsEmailAddressOperationCompleted == null)) {
                this.set_ErrorsEmailAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.Onset_ErrorsEmailAddressOperationCompleted);
            }
            this.InvokeAsync("set_ErrorsEmailAddress", new object[] {
                        value}, this.set_ErrorsEmailAddressOperationCompleted, userState);
        }
        
        private void Onset_ErrorsEmailAddressOperationCompleted(object arg) {
            if ((this.set_ErrorsEmailAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.set_ErrorsEmailAddressCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api2.sendmsg.co.il/SendMsgService")]
    public partial class SendMsgUser {
        
        private string cellphoneField;
        
        private bool deleteUserField;
        
        private bool deleteUserFieldSpecified;
        
        private string emailAddressField;
        
        private bool isUserSelfRemovedField;
        
        private bool isUserSelfRemovedFieldSpecified;
        
        private bool undeleteUserIfExistsField;
        
        private bool undeleteUserIfExistsFieldSpecified;
        
        private int userIDField;
        
        private bool userIDFieldSpecified;
        
        private SendMsgFields[] userSendFieldsField;
        
        private SendMsgFields[] userSystemFieldsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Cellphone {
            get {
                return this.cellphoneField;
            }
            set {
                this.cellphoneField = value;
            }
        }
        
        /// <remarks/>
        public bool DeleteUser {
            get {
                return this.deleteUserField;
            }
            set {
                this.deleteUserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DeleteUserSpecified {
            get {
                return this.deleteUserFieldSpecified;
            }
            set {
                this.deleteUserFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        public bool IsUserSelfRemoved {
            get {
                return this.isUserSelfRemovedField;
            }
            set {
                this.isUserSelfRemovedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsUserSelfRemovedSpecified {
            get {
                return this.isUserSelfRemovedFieldSpecified;
            }
            set {
                this.isUserSelfRemovedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool UndeleteUserIfExists {
            get {
                return this.undeleteUserIfExistsField;
            }
            set {
                this.undeleteUserIfExistsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UndeleteUserIfExistsSpecified {
            get {
                return this.undeleteUserIfExistsFieldSpecified;
            }
            set {
                this.undeleteUserIfExistsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UserIDSpecified {
            get {
                return this.userIDFieldSpecified;
            }
            set {
                this.userIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public SendMsgFields[] UserSendFields {
            get {
                return this.userSendFieldsField;
            }
            set {
                this.userSendFieldsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public SendMsgFields[] UserSystemFields {
            get {
                return this.userSystemFieldsField;
            }
            set {
                this.userSystemFieldsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api2.sendmsg.co.il/SendMsgService")]
    public partial class SendMsgFields {
        
        private string keyField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api2.sendmsg.co.il/SendMsgService")]
    public partial class SendMsgTemplate {
        
        private string templateBackColorField;
        
        private string templateContentField;
        
        private SendMsgDirection templateDirectionField;
        
        private bool templateDirectionFieldSpecified;
        
        private int templateIDField;
        
        private bool templateIDFieldSpecified;
        
        private string templateInnerNameField;
        
        private SendMsgFields[] templateSendFieldsField;
        
        private string templateSubjectField;
        
        private SendMsgFields[] templateSystemFieldsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TemplateBackColor {
            get {
                return this.templateBackColorField;
            }
            set {
                this.templateBackColorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TemplateContent {
            get {
                return this.templateContentField;
            }
            set {
                this.templateContentField = value;
            }
        }
        
        /// <remarks/>
        public SendMsgDirection TemplateDirection {
            get {
                return this.templateDirectionField;
            }
            set {
                this.templateDirectionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TemplateDirectionSpecified {
            get {
                return this.templateDirectionFieldSpecified;
            }
            set {
                this.templateDirectionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int TemplateID {
            get {
                return this.templateIDField;
            }
            set {
                this.templateIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TemplateIDSpecified {
            get {
                return this.templateIDFieldSpecified;
            }
            set {
                this.templateIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TemplateInnerName {
            get {
                return this.templateInnerNameField;
            }
            set {
                this.templateInnerNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public SendMsgFields[] TemplateSendFields {
            get {
                return this.templateSendFieldsField;
            }
            set {
                this.templateSendFieldsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TemplateSubject {
            get {
                return this.templateSubjectField;
            }
            set {
                this.templateSubjectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public SendMsgFields[] TemplateSystemFields {
            get {
                return this.templateSystemFieldsField;
            }
            set {
                this.templateSystemFieldsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api2.sendmsg.co.il/SendMsgService")]
    public enum SendMsgDirection {
        
        /// <remarks/>
        ltr,
        
        /// <remarks/>
        rtl,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api2.sendmsg.co.il/SendMsgService")]
    public partial class SendMsgUserStatistics {
        
        private string failReasonField;
        
        private bool isFailedField;
        
        private bool isFailedFieldSpecified;
        
        private bool isSelfRemovedField;
        
        private bool isSelfRemovedFieldSpecified;
        
        private bool isSentField;
        
        private bool isSentFieldSpecified;
        
        private System.DateTime lastOpenTimeField;
        
        private bool lastOpenTimeFieldSpecified;
        
        private int numFwdField;
        
        private bool numFwdFieldSpecified;
        
        private int numOpenedField;
        
        private bool numOpenedFieldSpecified;
        
        private System.DateTime sentTimeField;
        
        private bool sentTimeFieldSpecified;
        
        private SendMsgUser userField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string FailReason {
            get {
                return this.failReasonField;
            }
            set {
                this.failReasonField = value;
            }
        }
        
        /// <remarks/>
        public bool IsFailed {
            get {
                return this.isFailedField;
            }
            set {
                this.isFailedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsFailedSpecified {
            get {
                return this.isFailedFieldSpecified;
            }
            set {
                this.isFailedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsSelfRemoved {
            get {
                return this.isSelfRemovedField;
            }
            set {
                this.isSelfRemovedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsSelfRemovedSpecified {
            get {
                return this.isSelfRemovedFieldSpecified;
            }
            set {
                this.isSelfRemovedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsSent {
            get {
                return this.isSentField;
            }
            set {
                this.isSentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsSentSpecified {
            get {
                return this.isSentFieldSpecified;
            }
            set {
                this.isSentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastOpenTime {
            get {
                return this.lastOpenTimeField;
            }
            set {
                this.lastOpenTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastOpenTimeSpecified {
            get {
                return this.lastOpenTimeFieldSpecified;
            }
            set {
                this.lastOpenTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int NumFwd {
            get {
                return this.numFwdField;
            }
            set {
                this.numFwdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumFwdSpecified {
            get {
                return this.numFwdFieldSpecified;
            }
            set {
                this.numFwdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int NumOpened {
            get {
                return this.numOpenedField;
            }
            set {
                this.numOpenedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumOpenedSpecified {
            get {
                return this.numOpenedFieldSpecified;
            }
            set {
                this.numOpenedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime SentTime {
            get {
                return this.sentTimeField;
            }
            set {
                this.sentTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SentTimeSpecified {
            get {
                return this.sentTimeFieldSpecified;
            }
            set {
                this.sentTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public SendMsgUser User {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api2.sendmsg.co.il/SendMsgService")]
    public partial class SendMsgStatistics {
        
        private int messageIDField;
        
        private bool messageIDFieldSpecified;
        
        private int numFailedField;
        
        private bool numFailedFieldSpecified;
        
        private int numForwardedField;
        
        private bool numForwardedFieldSpecified;
        
        private int numOpenedField;
        
        private bool numOpenedFieldSpecified;
        
        private int numSelfRemovedField;
        
        private bool numSelfRemovedFieldSpecified;
        
        private int numSentField;
        
        private bool numSentFieldSpecified;
        
        private SendMsgMessage originalMessageField;
        
        /// <remarks/>
        public int MessageID {
            get {
                return this.messageIDField;
            }
            set {
                this.messageIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MessageIDSpecified {
            get {
                return this.messageIDFieldSpecified;
            }
            set {
                this.messageIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int NumFailed {
            get {
                return this.numFailedField;
            }
            set {
                this.numFailedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumFailedSpecified {
            get {
                return this.numFailedFieldSpecified;
            }
            set {
                this.numFailedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int NumForwarded {
            get {
                return this.numForwardedField;
            }
            set {
                this.numForwardedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumForwardedSpecified {
            get {
                return this.numForwardedFieldSpecified;
            }
            set {
                this.numForwardedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int NumOpened {
            get {
                return this.numOpenedField;
            }
            set {
                this.numOpenedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumOpenedSpecified {
            get {
                return this.numOpenedFieldSpecified;
            }
            set {
                this.numOpenedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int NumSelfRemoved {
            get {
                return this.numSelfRemovedField;
            }
            set {
                this.numSelfRemovedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumSelfRemovedSpecified {
            get {
                return this.numSelfRemovedFieldSpecified;
            }
            set {
                this.numSelfRemovedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int NumSent {
            get {
                return this.numSentField;
            }
            set {
                this.numSentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumSentSpecified {
            get {
                return this.numSentFieldSpecified;
            }
            set {
                this.numSentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public SendMsgMessage OriginalMessage {
            get {
                return this.originalMessageField;
            }
            set {
                this.originalMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api2.sendmsg.co.il/SendMsgService")]
    public partial class SendMsgMessage {
        
        private bool addFacebookField;
        
        private bool addFacebookFieldSpecified;
        
        private bool addForwardField;
        
        private bool addForwardFieldSpecified;
        
        private bool addShowMessageField;
        
        private bool addShowMessageFieldSpecified;
        
        private bool isDeletedField;
        
        private bool isDeletedFieldSpecified;
        
        private bool isPausedField;
        
        private bool isPausedFieldSpecified;
        
        private SendMsgAttachment[] messageAttachmentsField;
        
        private string messageBackColorField;
        
        private string messageContentField;
        
        private SendMsgDirection messageDirectionField;
        
        private bool messageDirectionFieldSpecified;
        
        private SendMsgFields[] messageFieldsField;
        
        private int messageIDField;
        
        private bool messageIDFieldSpecified;
        
        private string messageInnerNameField;
        
        private string messageSubjectField;
        
        private SendMsgMessageType messageTypeField;
        
        private bool messageTypeFieldSpecified;
        
        private System.DateTime postponeSendTimeField;
        
        private bool postponeSendTimeFieldSpecified;
        
        private bool removeCreditsField;
        
        private bool removeCreditsFieldSpecified;
        
        private bool removeFooterlinksField;
        
        private bool removeFooterlinksFieldSpecified;
        
        private string senderEmailAddressField;
        
        private string senderNameField;
        
        private int useDraftIDField;
        
        private bool useDraftIDFieldSpecified;
        
        private int useTemplateIDField;
        
        private bool useTemplateIDFieldSpecified;
        
        /// <remarks/>
        public bool AddFacebook {
            get {
                return this.addFacebookField;
            }
            set {
                this.addFacebookField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AddFacebookSpecified {
            get {
                return this.addFacebookFieldSpecified;
            }
            set {
                this.addFacebookFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool AddForward {
            get {
                return this.addForwardField;
            }
            set {
                this.addForwardField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AddForwardSpecified {
            get {
                return this.addForwardFieldSpecified;
            }
            set {
                this.addForwardFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool AddShowMessage {
            get {
                return this.addShowMessageField;
            }
            set {
                this.addShowMessageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AddShowMessageSpecified {
            get {
                return this.addShowMessageFieldSpecified;
            }
            set {
                this.addShowMessageFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsDeleted {
            get {
                return this.isDeletedField;
            }
            set {
                this.isDeletedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsDeletedSpecified {
            get {
                return this.isDeletedFieldSpecified;
            }
            set {
                this.isDeletedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsPaused {
            get {
                return this.isPausedField;
            }
            set {
                this.isPausedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsPausedSpecified {
            get {
                return this.isPausedFieldSpecified;
            }
            set {
                this.isPausedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public SendMsgAttachment[] MessageAttachments {
            get {
                return this.messageAttachmentsField;
            }
            set {
                this.messageAttachmentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string MessageBackColor {
            get {
                return this.messageBackColorField;
            }
            set {
                this.messageBackColorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string MessageContent {
            get {
                return this.messageContentField;
            }
            set {
                this.messageContentField = value;
            }
        }
        
        /// <remarks/>
        public SendMsgDirection MessageDirection {
            get {
                return this.messageDirectionField;
            }
            set {
                this.messageDirectionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MessageDirectionSpecified {
            get {
                return this.messageDirectionFieldSpecified;
            }
            set {
                this.messageDirectionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public SendMsgFields[] MessageFields {
            get {
                return this.messageFieldsField;
            }
            set {
                this.messageFieldsField = value;
            }
        }
        
        /// <remarks/>
        public int MessageID {
            get {
                return this.messageIDField;
            }
            set {
                this.messageIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MessageIDSpecified {
            get {
                return this.messageIDFieldSpecified;
            }
            set {
                this.messageIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string MessageInnerName {
            get {
                return this.messageInnerNameField;
            }
            set {
                this.messageInnerNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string MessageSubject {
            get {
                return this.messageSubjectField;
            }
            set {
                this.messageSubjectField = value;
            }
        }
        
        /// <remarks/>
        public SendMsgMessageType MessageType {
            get {
                return this.messageTypeField;
            }
            set {
                this.messageTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MessageTypeSpecified {
            get {
                return this.messageTypeFieldSpecified;
            }
            set {
                this.messageTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime PostponeSendTime {
            get {
                return this.postponeSendTimeField;
            }
            set {
                this.postponeSendTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PostponeSendTimeSpecified {
            get {
                return this.postponeSendTimeFieldSpecified;
            }
            set {
                this.postponeSendTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool RemoveCredits {
            get {
                return this.removeCreditsField;
            }
            set {
                this.removeCreditsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RemoveCreditsSpecified {
            get {
                return this.removeCreditsFieldSpecified;
            }
            set {
                this.removeCreditsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool RemoveFooterlinks {
            get {
                return this.removeFooterlinksField;
            }
            set {
                this.removeFooterlinksField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RemoveFooterlinksSpecified {
            get {
                return this.removeFooterlinksFieldSpecified;
            }
            set {
                this.removeFooterlinksFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SenderEmailAddress {
            get {
                return this.senderEmailAddressField;
            }
            set {
                this.senderEmailAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SenderName {
            get {
                return this.senderNameField;
            }
            set {
                this.senderNameField = value;
            }
        }
        
        /// <remarks/>
        public int UseDraftID {
            get {
                return this.useDraftIDField;
            }
            set {
                this.useDraftIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UseDraftIDSpecified {
            get {
                return this.useDraftIDFieldSpecified;
            }
            set {
                this.useDraftIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int UseTemplateID {
            get {
                return this.useTemplateIDField;
            }
            set {
                this.useTemplateIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UseTemplateIDSpecified {
            get {
                return this.useTemplateIDFieldSpecified;
            }
            set {
                this.useTemplateIDFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api2.sendmsg.co.il/SendMsgService")]
    public partial class SendMsgAttachment {
        
        private string downloadNotificationUrlField;
        
        private string fileUrlField;
        
        private string newFileNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DownloadNotificationUrl {
            get {
                return this.downloadNotificationUrlField;
            }
            set {
                this.downloadNotificationUrlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string FileUrl {
            get {
                return this.fileUrlField;
            }
            set {
                this.fileUrlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string NewFileName {
            get {
                return this.newFileNameField;
            }
            set {
                this.newFileNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api2.sendmsg.co.il/SendMsgService")]
    public enum SendMsgMessageType {
        
        /// <remarks/>
        MailMessage,
        
        /// <remarks/>
        SmsMessage,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api2.sendmsg.co.il/SendMsgService")]
    public partial class SendMsgList {
        
        private int activeUserCountField;
        
        private bool activeUserCountFieldSpecified;
        
        private int existingListIDField;
        
        private bool existingListIDFieldSpecified;
        
        private bool isNewListField;
        
        private bool isNewListFieldSpecified;
        
        private string newListDescriptionField;
        
        private string newListNameField;
        
        private int userCountField;
        
        private bool userCountFieldSpecified;
        
        /// <remarks/>
        public int ActiveUserCount {
            get {
                return this.activeUserCountField;
            }
            set {
                this.activeUserCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActiveUserCountSpecified {
            get {
                return this.activeUserCountFieldSpecified;
            }
            set {
                this.activeUserCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int ExistingListID {
            get {
                return this.existingListIDField;
            }
            set {
                this.existingListIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExistingListIDSpecified {
            get {
                return this.existingListIDFieldSpecified;
            }
            set {
                this.existingListIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsNewList {
            get {
                return this.isNewListField;
            }
            set {
                this.isNewListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsNewListSpecified {
            get {
                return this.isNewListFieldSpecified;
            }
            set {
                this.isNewListFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string NewListDescription {
            get {
                return this.newListDescriptionField;
            }
            set {
                this.newListDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string NewListName {
            get {
                return this.newListNameField;
            }
            set {
                this.newListNameField = value;
            }
        }
        
        /// <remarks/>
        public int UserCount {
            get {
                return this.userCountField;
            }
            set {
                this.userCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UserCountSpecified {
            get {
                return this.userCountFieldSpecified;
            }
            set {
                this.userCountFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api2.sendmsg.co.il/SendMsgService")]
    public partial class SendMsgResults {
        
        private int resultIDField;
        
        private bool resultIDFieldSpecified;
        
        private string resultMessageField;
        
        /// <remarks/>
        public int ResultID {
            get {
                return this.resultIDField;
            }
            set {
                this.resultIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ResultIDSpecified {
            get {
                return this.resultIDFieldSpecified;
            }
            set {
                this.resultIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ResultMessage {
            get {
                return this.resultMessageField;
            }
            set {
                this.resultMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api2.sendmsg.co.il/SendMsgService")]
    public enum SendMsgUsersRequestType {
        
        /// <remarks/>
        AllUsers,
        
        /// <remarks/>
        DelUsers,
        
        /// <remarks/>
        SelfRemUsers,
        
        /// <remarks/>
        wrongMails,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void AddUsersOnlyCompletedEventHandler(object sender, AddUsersOnlyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUsersOnlyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUsersOnlyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool AddUsersOnlyResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool AddUsersOnlyResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public SendMsgResults result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SendMsgResults)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void AddUsersAndSendCompletedEventHandler(object sender, AddUsersAndSendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUsersAndSendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUsersAndSendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool AddUsersAndSendResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool AddUsersAndSendResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public SendMsgResults result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SendMsgResults)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void AddUsersAndSendTransectionCompletedEventHandler(object sender, AddUsersAndSendTransectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUsersAndSendTransectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUsersAndSendTransectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool AddUsersAndSendTransectionResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool AddUsersAndSendTransectionResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public SendMsgResults result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SendMsgResults)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void AddUsersToListsCompletedEventHandler(object sender, AddUsersToListsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUsersToListsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUsersToListsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool AddUsersToListsResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool AddUsersToListsResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public SendMsgResults result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SendMsgResults)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void AddUsersToListAndSendCompletedEventHandler(object sender, AddUsersToListAndSendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUsersToListAndSendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUsersToListAndSendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool AddUsersToListAndSendResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool AddUsersToListAndSendResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public int newMessageID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public bool newMessageIDSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public SendMsgResults result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SendMsgResults)(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void CreateMessageOnlyCompletedEventHandler(object sender, CreateMessageOnlyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateMessageOnlyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateMessageOnlyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool CreateMessageOnlyResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool CreateMessageOnlyResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public int newMessageID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public bool newMessageIDSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public SendMsgResults result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SendMsgResults)(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void GetMsgBasicStatisticsCompletedEventHandler(object sender, GetMsgBasicStatisticsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMsgBasicStatisticsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMsgBasicStatisticsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool GetMsgBasicStatisticsResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool GetMsgBasicStatisticsResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public SendMsgStatistics msgStatistics {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SendMsgStatistics)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public SendMsgResults result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SendMsgResults)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void GetMsgFullStatisticsCompletedEventHandler(object sender, GetMsgFullStatisticsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMsgFullStatisticsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMsgFullStatisticsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool GetMsgFullStatisticsResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool GetMsgFullStatisticsResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public SendMsgMessage OriginalMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SendMsgMessage)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public SendMsgUserStatistics[] UsersStats {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SendMsgUserStatistics[])(this.results[3]));
            }
        }
        
        /// <remarks/>
        public SendMsgResults result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SendMsgResults)(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void GetUserDetailsCompletedEventHandler(object sender, GetUserDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool GetUserDetailsResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool GetUserDetailsResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public SendMsgUser user {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SendMsgUser)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public SendMsgResults result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SendMsgResults)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void GetUserMessagesCompletedEventHandler(object sender, GetUserMessagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool GetUserMessagesResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool GetUserMessagesResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public SendMsgStatistics[] UserMsgStats {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SendMsgStatistics[])(this.results[2]));
            }
        }
        
        /// <remarks/>
        public SendMsgResults result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SendMsgResults)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void GetSystemUsersCompletedEventHandler(object sender, GetSystemUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSystemUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSystemUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool GetSystemUsersResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool GetSystemUsersResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public SendMsgUser[] users {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SendMsgUser[])(this.results[2]));
            }
        }
        
        /// <remarks/>
        public SendMsgResults result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SendMsgResults)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void GetMailingListUsersCompletedEventHandler(object sender, GetMailingListUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMailingListUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMailingListUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool GetMailingListUsersResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool GetMailingListUsersResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public SendMsgUser[] users {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SendMsgUser[])(this.results[2]));
            }
        }
        
        /// <remarks/>
        public SendMsgResults result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SendMsgResults)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void GetSentMessagesCompletedEventHandler(object sender, GetSentMessagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSentMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSentMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool GetSentMessagesResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool GetSentMessagesResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public SendMsgMessage[] MsgList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SendMsgMessage[])(this.results[2]));
            }
        }
        
        /// <remarks/>
        public SendMsgResults result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SendMsgResults)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void GetMailingListNamesCompletedEventHandler(object sender, GetMailingListNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMailingListNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMailingListNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool GetMailingListNamesResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool GetMailingListNamesResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public SendMsgList[] listNames {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SendMsgList[])(this.results[2]));
            }
        }
        
        /// <remarks/>
        public SendMsgResults result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SendMsgResults)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void GetTemplatesCompletedEventHandler(object sender, GetTemplatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTemplatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTemplatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool GetTemplatesResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool GetTemplatesResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public SendMsgTemplate[] tplList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SendMsgTemplate[])(this.results[2]));
            }
        }
        
        /// <remarks/>
        public SendMsgResults result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SendMsgResults)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void GetTemplateCompletedEventHandler(object sender, GetTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool GetTemplateResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool GetTemplateResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public SendMsgTemplate Template {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SendMsgTemplate)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public SendMsgResults result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SendMsgResults)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void DelTemplateCompletedEventHandler(object sender, DelTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool DelTemplateResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool DelTemplateResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public SendMsgResults result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SendMsgResults)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void UnDelTemplateCompletedEventHandler(object sender, UnDelTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnDelTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnDelTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool UnDelTemplateResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool UnDelTemplateResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public SendMsgResults result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SendMsgResults)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void DelMessageCompletedEventHandler(object sender, DelMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool DelMessageResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool DelMessageResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public SendMsgResults result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SendMsgResults)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void UnDelMessageCompletedEventHandler(object sender, UnDelMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnDelMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnDelMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool UnDelMessageResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool UnDelMessageResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public SendMsgResults result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SendMsgResults)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void PauseMessageCompletedEventHandler(object sender, PauseMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PauseMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PauseMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool PauseMessageResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool PauseMessageResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public SendMsgResults result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SendMsgResults)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void UnPauseMessageCompletedEventHandler(object sender, UnPauseMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnPauseMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnPauseMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool UnPauseMessageResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool UnPauseMessageResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public SendMsgResults result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SendMsgResults)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void get_ErrorsEmailAddressCompletedEventHandler(object sender, get_ErrorsEmailAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_ErrorsEmailAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_ErrorsEmailAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void set_ErrorsEmailAddressCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591